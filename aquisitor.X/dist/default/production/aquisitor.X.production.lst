

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Oct 24 16:50:18 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     	FNCALL	_main,_SplashScreen0
  1024                           	FNCALL	_main,_SplashScreen1
  1025                           	FNCALL	_main,_Telaprincipal
  1026                           	FNCALL	_main,_TempMed
  1027                           	FNCALL	_main,_adcLer
  1028                           	FNCALL	_main,_cmdLCD
  1029                           	FNCALL	_main,_delay
  1030                           	FNCALL	_main,_erasertemp
  1031                           	FNCALL	_main,_initLCD
  1032                           	FNCALL	_main,_putLCD
  1033                           	FNCALL	_main,_resetemp
  1034                           	FNCALL	_main,_salvatemp
  1035                           	FNCALL	_main,_showtemp
  1036                           	FNCALL	_main,_tecladoIniciar
  1037                           	FNCALL	_main,_tecladoLer
  1038                           	FNCALL	_main,_tempatt
  1039                           	FNCALL	_main,_temperaturaInicializar
  1040                           	FNCALL	_main,_temperaturaLer
  1041                           	FNCALL	_main,_tmron
  1042                           	FNCALL	_temperaturaInicializar,_delay
  1043                           	FNCALL	_tempatt,___awdiv
  1044                           	FNCALL	_tempatt,___awmod
  1045                           	FNCALL	_tempatt,_temperaturaLer
  1046                           	FNCALL	_tempatt,_writeLCD
  1047                           	FNCALL	_temperaturaLer,___flmul
  1048                           	FNCALL	_temperaturaLer,___fltol
  1049                           	FNCALL	_temperaturaLer,___xxtofl
  1050                           	FNCALL	_temperaturaLer,_adcLer
  1051                           	FNCALL	_adcLer,_delay
  1052                           	FNCALL	___flmul,__Umul8_16
  1053                           	FNCALL	_showtemp,_writeLCD
  1054                           	FNCALL	_salvatemp,_EEPROM_read
  1055                           	FNCALL	_salvatemp,_EEPROM_write
  1056                           	FNCALL	_resetemp,_EEPROM_write
  1057                           	FNCALL	_EEPROM_write,_EEPROM_WriteByte
  1058                           	FNCALL	_EEPROM_WriteByte,_delay
  1059                           	FNCALL	_initLCD,_cmdLCD
  1060                           	FNCALL	_initLCD,_delay
  1061                           	FNCALL	_erasertemp,_writeLCD
  1062                           	FNCALL	_TempMed,___awdiv
  1063                           	FNCALL	_TempMed,___awmod
  1064                           	FNCALL	_TempMed,_gotoxy
  1065                           	FNCALL	_TempMed,_media
  1066                           	FNCALL	_TempMed,_putLCD
  1067                           	FNCALL	_TempMed,_writeLCD
  1068                           	FNCALL	_media,_EEPROM_read
  1069                           	FNCALL	_media,___lldiv
  1070                           	FNCALL	_media,___wmul
  1071                           	FNCALL	_EEPROM_read,_EEPROM_ReadByte
  1072                           	FNCALL	_Telaprincipal,_gotoxy
  1073                           	FNCALL	_Telaprincipal,_putLCD
  1074                           	FNCALL	_Telaprincipal,_writeLCD
  1075                           	FNCALL	_SplashScreen1,_writeLCD
  1076                           	FNCALL	_SplashScreen0,_writeLCD
  1077                           	FNCALL	_writeLCD,_gotoxy
  1078                           	FNCALL	_writeLCD,_putLCD
  1079                           	FNCALL	_putLCD,_delay
  1080                           	FNCALL	_gotoxy,_cmdLCD
  1081                           	FNCALL	_cmdLCD,_delay
  1082                           	FNROOT	_main
  1083                           	FNCALL	_myISR,i1_salvatemp
  1084                           	FNCALL	_myISR,i1_temperaturaLer
  1085                           	FNCALL	i1_temperaturaLer,i1___flmul
  1086                           	FNCALL	i1_temperaturaLer,i1___fltol
  1087                           	FNCALL	i1_temperaturaLer,i1___xxtofl
  1088                           	FNCALL	i1_temperaturaLer,i1_adcLer
  1089                           	FNCALL	i1_adcLer,i1_delay
  1090                           	FNCALL	i1___flmul,i1__Umul8_16
  1091                           	FNCALL	i1_salvatemp,i1_EEPROM_read
  1092                           	FNCALL	i1_salvatemp,i1_EEPROM_write
  1093                           	FNCALL	i1_EEPROM_write,i1_EEPROM_WriteByte
  1094                           	FNCALL	i1_EEPROM_WriteByte,i1_delay
  1095                           	FNCALL	i1_EEPROM_read,i1_EEPROM_ReadByte
  1096                           	FNCALL	intlevel1,_myISR
  1097                           	global	intlevel1
  1098                           	FNROOT	intlevel1
  1099                           	global	TempMed@F1409
  1100                           	global	tempatt@F1405
  1101                           	global	_tim
  1102                           psect	idataBANK1,class=CODE,space=0,delta=2,noexec
  1103                           global __pidataBANK1
  1104                           __pidataBANK1:
  1105  1328                     	file	"lcd.c"
  1106                           	line	133
  1107                           
  1108                           ;initializer for TempMed@F1409
  1109                           	retlw	030h
  1110  1328  3430               	retlw	030h
  1111  1329  3430               	retlw	low(0)
  1112  132A  3400               	line	125
  1113                           
  1114                           ;initializer for tempatt@F1405
  1115                           	retlw	030h
  1116  132B  3430               	retlw	030h
  1117  132C  3430               	retlw	low(0)
  1118  132D  3400               	file	"main.c"
  1119                           	line	14
  1120                           
  1121                           ;initializer for _tim
  1122                           	retlw	01h
  1123  132E  3401               	global	_tabTeclas
  1124                           psect	strings,class=STRING,delta=2,noexec
  1125                           global __pstrings
  1126                           __pstrings:
  1127  0800                     stringtab:
  1128  0800                     	global    __stringtab
  1129                           __stringtab:
  1130  0800                     ;	String table - string pointers are 1 byte each
  1131                           	btfsc	(btemp+1),7
  1132  0800  1BFF               	ljmp	stringcode
  1133  0801  280A               	bcf	status,7
  1134  0802  1383               	btfsc	(btemp+1),0
  1135  0803  187F               	bsf	status,7
  1136  0804  1783               	movf	indf,w
  1137  0805  0800               	incf fsr
  1138  0806  0A84               skipnz
  1139  0807  1903               incf btemp+1
  1140  0808  0AFF               	return
  1141  0809  0008               stringcode:stringdir:
  1142  080A                     movlw high(stringdir)
      + 080A                     stringdir:	
  1143  080A  3008               movwf pclath
  1144  080B  008A               movf fsr,w
  1145  080C  0804               incf fsr
  1146  080D  0A84               	addwf pc
  1147  080E  0782               	global __stringbase
  1148                           __stringbase:
  1149  080F                     	retlw	0
  1150  080F  3400               psect	strings
  1151                           	global    __end_of__stringtab
  1152                           __end_of__stringtab:
  1153  0810                     	file	"./teclado.h"
  1154                           	line	23
  1155                           _tabTeclas:
  1156  0810                     	retlw	031h
  1157  0810  3431               	retlw	034h
  1158  0811  3434               	retlw	037h
  1159  0812  3437               	retlw	02Ah
  1160  0813  342A               	retlw	032h
  1161  0814  3432               	retlw	035h
  1162  0815  3435               	retlw	038h
  1163  0816  3438               	retlw	030h
  1164  0817  3430               	retlw	033h
  1165  0818  3433               	retlw	036h
  1166  0819  3436               	retlw	039h
  1167  081A  3439               	retlw	023h
  1168  081B  3423               	retlw	041h
  1169  081C  3441               	retlw	042h
  1170  081D  3442               	retlw	043h
  1171  081E  3443               	retlw	044h
  1172  081F  3444               	global __end_of_tabTeclas
  1173                           __end_of_tabTeclas:
  1174  0820                     	global	_tabTeclas
  1175                           	global	_repeat
  1176                           	global	_tecAtual
  1177                           	global	_tecAnterior
  1178                           	global	_T1CON
  1179                           _T1CON	set	0x10
  1180  0010                     	global	_PORTC
  1181                           _PORTC	set	0x7
  1182  0007                     	global	_TMR1H
  1183                           _TMR1H	set	0xF
  1184  000F                     	global	_TMR1L
  1185                           _TMR1L	set	0xE
  1186  000E                     	global	_PORTBbits
  1187                           _PORTBbits	set	0x6
  1188  0006                     	global	_PORTB
  1189                           _PORTB	set	0x6
  1190  0006                     	global	_ADRESH
  1191                           _ADRESH	set	0x1E
  1192  001E                     	global	_ADCON0bits
  1193                           _ADCON0bits	set	0x1F
  1194  001F                     	global	_ADCON0
  1195                           _ADCON0	set	0x1F
  1196  001F                     	global	_LCD
  1197                           _LCD	set	8
  1198  0008                     	global	_PEIE
  1199                           _PEIE	set	0x5E
  1200  005E                     	global	_GIE
  1201                           _GIE	set	0x5F
  1202  005F                     	global	_TMR1IF
  1203                           _TMR1IF	set	0x60
  1204  0060                     	global	_ADIF
  1205                           _ADIF	set	0x66
  1206  0066                     	global	_TRISC
  1207                           _TRISC	set	0x87
  1208  0087                     	global	_TRISB
  1209                           _TRISB	set	0x86
  1210  0086                     	global	_OPTION_REGbits
  1211                           _OPTION_REGbits	set	0x81
  1212  0081                     	global	_ADRESL
  1213                           _ADRESL	set	0x9E
  1214  009E                     	global	_ADCON1
  1215                           _ADCON1	set	0x9F
  1216  009F                     	global	_TRISA
  1217                           _TRISA	set	0x85
  1218  0085                     	global	_TRISD
  1219                           _TRISD	set	0x88
  1220  0088                     	global	_TMR1IE
  1221                           _TMR1IE	set	0x460
  1222  0460                     	global	_ADIE
  1223                           _ADIE	set	0x466
  1224  0466                     	global	_EEDATA
  1225                           _EEDATA	set	0x10C
  1226  010C                     	global	_EEADR
  1227                           _EEADR	set	0x10D
  1228  010D                     	global	_EECON2
  1229                           _EECON2	set	0x18D
  1230  018D                     	global	_EECON1bits
  1231                           _EECON1bits	set	0x18C
  1232  018C                     	global	_ANSELH
  1233                           _ANSELH	set	0x189
  1234  0189                     	global	_ANSEL
  1235                           _ANSEL	set	0x188
  1236  0188                     	global	_RD
  1237                           _RD	set	0xC60
  1238  0C60                     	global	_WREN
  1239                           _WREN	set	0xC62
  1240  0C62                     	global	_WR
  1241                           _WR	set	0xC61
  1242  0C61                     	
  1243                           STR_8:	
  1244  0820                     	retlw	84	;'T'
  1245  0820  3454               	retlw	101	;'e'
  1246  0821  3465               	retlw	109	;'m'
  1247  0822  346D               	retlw	112	;'p'
  1248  0823  3470               	retlw	46	;'.'
  1249  0824  342E               	retlw	32	;' '
  1250  0825  3420               	retlw	77	;'M'
  1251  0826  344D               	retlw	101	;'e'
  1252  0827  3465               	retlw	100	;'d'
  1253  0828  3464               	retlw	46	;'.'
  1254  0829  342E               	retlw	58	;':'
  1255  082A  343A               	retlw	32	;' '
  1256  082B  3420               	retlw	32	;' '
  1257  082C  3420               	retlw	32	;' '
  1258  082D  3420               	retlw	32	;' '
  1259  082E  3420               	retlw	67	;'C'
  1260  082F  3443               	retlw	0
  1261  0830  3400               psect	strings
  1262                           	
  1263                           STR_7:	
  1264  0831                     	retlw	84	;'T'
  1265  0831  3454               	retlw	101	;'e'
  1266  0832  3465               	retlw	109	;'m'
  1267  0833  346D               	retlw	112	;'p'
  1268  0834  3470               	retlw	46	;'.'
  1269  0835  342E               	retlw	32	;' '
  1270  0836  3420               	retlw	65	;'A'
  1271  0837  3441               	retlw	116	;'t'
  1272  0838  3474               	retlw	117	;'u'
  1273  0839  3475               	retlw	97	;'a'
  1274  083A  3461               	retlw	108	;'l'
  1275  083B  346C               	retlw	58	;':'
  1276  083C  343A               	retlw	32	;' '
  1277  083D  3420               	retlw	32	;' '
  1278  083E  3420               	retlw	32	;' '
  1279  083F  3420               	retlw	67	;'C'
  1280  0840  3443               	retlw	0
  1281  0841  3400               psect	strings
  1282                           	
  1283                           STR_5:	
  1284  0842                     	retlw	83	;'S'
  1285  0842  3453               	retlw	69	;'E'
  1286  0843  3445               	retlw	76	;'L'
  1287  0844  344C               	retlw	69	;'E'
  1288  0845  3445               	retlw	84	;'T'
  1289  0846  3454               	retlw	79	;'O'
  1290  0847  344F               	retlw	82	;'R'
  1291  0848  3452               	retlw	32	;' '
  1292  0849  3420               	retlw	68	;'D'
  1293  084A  3444               	retlw	69	;'E'
  1294  084B  3445               	retlw	32	;' '
  1295  084C  3420               	retlw	84	;'T'
  1296  084D  3454               	retlw	69	;'E'
  1297  084E  3445               	retlw	76	;'L'
  1298  084F  344C               	retlw	65	;'A'
  1299  0850  3441               	retlw	83	;'S'
  1300  0851  3453               	retlw	0
  1301  0852  3400               psect	strings
  1302                           	
  1303                           STR_10:	
  1304  0853                     	retlw	65	;'A'
  1305  0853  3441               	retlw	112	;'p'
  1306  0854  3470               	retlw	97	;'a'
  1307  0855  3461               	retlw	103	;'g'
  1308  0856  3467               	retlw	97	;'a'
  1309  0857  3461               	retlw	110	;'n'
  1310  0858  346E               	retlw	100	;'d'
  1311  0859  3464               	retlw	111	;'o'
  1312  085A  346F               	retlw	46	;'.'
  1313  085B  342E               	retlw	46	;'.'
  1314  085C  342E               	retlw	46	;'.'
  1315  085D  342E               	retlw	0
  1316  085E  3400               psect	strings
  1317                           	
  1318                           STR_6:	
  1319  085F                     	retlw	91	;'['
  1320  085F  345B               	retlw	65	;'A'
  1321  0860  3441               	retlw	93	;']'
  1322  0861  345D               	retlw	32	;' '
  1323  0862  3420               	retlw	91	;'['
  1324  0863  345B               	retlw	66	;'B'
  1325  0864  3442               	retlw	93	;']'
  1326  0865  345D               	retlw	32	;' '
  1327  0866  3420               	retlw	91	;'['
  1328  0867  345B               	retlw	67	;'C'
  1329  0868  3443               	retlw	93	;']'
  1330  0869  345D               	retlw	0
  1331  086A  3400               psect	strings
  1332                           	
  1333                           STR_9:	
  1334  086B                     	retlw	83	;'S'
  1335  086B  3453               	retlw	97	;'a'
  1336  086C  3461               	retlw	118	;'v'
  1337  086D  3476               	retlw	105	;'i'
  1338  086E  3469               	retlw	110	;'n'
  1339  086F  346E               	retlw	103	;'g'
  1340  0870  3467               	retlw	46	;'.'
  1341  0871  342E               	retlw	46	;'.'
  1342  0872  342E               	retlw	46	;'.'
  1343  0873  342E               	retlw	0
  1344  0874  3400               psect	strings
  1345                           	
  1346                           STR_3:	
  1347  0875                     	retlw	65	;'A'
  1348  0875  3441               	retlw	113	;'q'
  1349  0876  3471               	retlw	117	;'u'
  1350  0877  3475               	retlw	105	;'i'
  1351  0878  3469               	retlw	115	;'s'
  1352  0879  3473               	retlw	105	;'i'
  1353  087A  3469               	retlw	116	;'t'
  1354  087B  3474               	retlw	111	;'o'
  1355  087C  346F               	retlw	114	;'r'
  1356  087D  3472               	retlw	0
  1357  087E  3400               psect	strings
  1358                           	
  1359                           STR_1:	
  1360  087F                     	retlw	69	;'E'
  1361  087F  3445               	retlw	76	;'L'
  1362  0880  344C               	retlw	69	;'E'
  1363  0881  3445               	retlw	67	;'C'
  1364  0882  3443               	retlw	84	;'T'
  1365  0883  3454               	retlw	82	;'R'
  1366  0884  3452               	retlw	73	;'I'
  1367  0885  3449               	retlw	67	;'C'
  1368  0886  3443               	retlw	0
  1369  0887  3400               psect	strings
  1370                           	
  1371                           STR_4:	
  1372  0888                     	retlw	100	;'d'
  1373  0888  3464               	retlw	101	;'e'
  1374  0889  3465               	retlw	32	;' '
  1375  088A  3420               	retlw	68	;'D'
  1376  088B  3444               	retlw	97	;'a'
  1377  088C  3461               	retlw	100	;'d'
  1378  088D  3464               	retlw	111	;'o'
  1379  088E  346F               	retlw	115	;'s'
  1380  088F  3473               	retlw	0
  1381  0890  3400               psect	strings
  1382                           	
  1383                           STR_2:	
  1384  0891                     	retlw	80	;'P'
  1385  0891  3450               	retlw	85	;'U'
  1386  0892  3455               	retlw	76	;'L'
  1387  0893  344C               	retlw	76	;'L'
  1388  0894  344C               	retlw	32	;' '
  1389  0895  3420               	retlw	85	;'U'
  1390  0896  3455               	retlw	80	;'P'
  1391  0897  3450               	retlw	0
  1392  0898  3400               psect	strings
  1393                           ; #config settings
  1394                           global __CFG_FOSC$HS
  1395                           __CFG_FOSC$HS equ 0x0
  1396  0000                     global __CFG_WDTE$OFF
  1397                           __CFG_WDTE$OFF equ 0x0
  1398  0000                     global __CFG_PWRTE$ON
  1399                           __CFG_PWRTE$ON equ 0x0
  1400  0000                     global __CFG_MCLRE$OFF
  1401                           __CFG_MCLRE$OFF equ 0x0
  1402  0000                     global __CFG_BOREN$OFF
  1403                           __CFG_BOREN$OFF equ 0x0
  1404  0000                     global __CFG_IESO$OFF
  1405                           __CFG_IESO$OFF equ 0x0
  1406  0000                     global __CFG_FCMEN$OFF
  1407                           __CFG_FCMEN$OFF equ 0x0
  1408  0000                     global __CFG_LVP$OFF
  1409                           __CFG_LVP$OFF equ 0x0
  1410  0000                     	file	"C:\Users\18263814\AppData\Local\Temp\sbpg."
  1411                           	line	#
  1412                           psect cinit,class=CODE,delta=2
  1413                           global start_initialization
  1414                           start_initialization:
  1415  0013                     
  1416                           global __initialization
  1417                           __initialization:
  1418  0013                     psect	bssBANK0,class=BANK0,space=1,noexec
  1419                           global __pbssBANK0
  1420                           __pbssBANK0:
  1421  004C                     _repeat:
  1422  004C                            ds      2
  1423  004C                     
  1424                           _tecAtual:
  1425  004E                            ds      1
  1426  004E                     
  1427                           _tecAnterior:
  1428  004F                            ds      1
  1429  004F                     
  1430                           psect	dataBANK1,class=BANK1,space=1,noexec
  1431                           global __pdataBANK1
  1432                           __pdataBANK1:
  1433  00E1                     	file	"lcd.c"
  1434                           	line	133
  1435                           TempMed@F1409:
  1436  00E1                            ds      3
  1437  00E1                     
  1438                           psect	dataBANK1
  1439                           	file	"lcd.c"
  1440                           	line	125
  1441                           tempatt@F1405:
  1442  00E4                            ds      3
  1443  00E4                     
  1444                           psect	dataBANK1
  1445                           	file	"main.c"
  1446                           	line	14
  1447                           _tim:
  1448  00E7                            ds      1
  1449  00E7                     
  1450                           	file	"C:\Users\18263814\AppData\Local\Temp\sbpg."
  1451                           	line	#
  1452                           global btemp
  1453                           psect inittext,class=CODE,delta=2
  1454                           global init_fetch0,btemp
  1455                           ;	Called with low address in FSR and high address in W
  1456                           init_fetch0:
  1457  1367                     	movf btemp,w
  1458  1367  087E               	movwf pclath
  1459  1368  008A               	movf btemp+1,w
  1460  1369  087F               	movwf pc
  1461  136A  0082               global init_ram0
  1462                           ;Called with:
  1463                           ;	high address of idata address in btemp 
  1464                           ;	low address of idata address in btemp+1 
  1465                           ;	low address of data in FSR
  1466                           ;	high address + 1 of data in btemp-1
  1467                           init_ram0:
  1468  136B                     	fcall init_fetch0
  1469  136B  160A  118A  2367  160A  118A  	movwf indf,f
  1470  1370  0080               	incf fsr,f
  1471  1371  0A84               	movf fsr,w
  1472  1372  0804               	xorwf btemp-1,w
  1473  1373  067D               	btfsc status,2
  1474  1374  1903               	retlw 0
  1475  1375  3400               	incf btemp+1,f
  1476  1376  0AFF               	btfsc status,2
  1477  1377  1903               	incf btemp,f
  1478  1378  0AFE               	goto init_ram0
  1479  1379  2B6B               ; Initialize objects allocated to BANK1
  1480                           psect cinit,class=CODE,delta=2,merge=1
  1481                           global init_ram0, __pidataBANK1
  1482                           	bcf	status, 7	;select IRP bank0
  1483  0013  1383               	movlw low(__pdataBANK1+7)
  1484  0014  30E8               	movwf btemp-1,f
  1485  0015  00FD               	movlw high(__pidataBANK1)
  1486  0016  3013               	movwf btemp,f
  1487  0017  00FE               	movlw low(__pidataBANK1)
  1488  0018  3028               	movwf btemp+1,f
  1489  0019  00FF               	movlw low(__pdataBANK1)
  1490  001A  30E1               	movwf fsr,f
  1491  001B  0084               	fcall init_ram0
  1492  001C  160A  118A  236B  120A  118A  	line	#
  1493                           ; Clear objects allocated to BANK0
  1494                           psect cinit,class=CODE,delta=2,merge=1
  1495                           	clrf	((__pbssBANK0)+0)&07Fh
  1496  0021  01CC               	clrf	((__pbssBANK0)+1)&07Fh
  1497  0022  01CD               	clrf	((__pbssBANK0)+2)&07Fh
  1498  0023  01CE               	clrf	((__pbssBANK0)+3)&07Fh
  1499  0024  01CF               psect cinit,class=CODE,delta=2,merge=1
  1500                           global end_of_initialization,__end_of__initialization
  1501                           
  1502                           ;End of C runtime variable initialization code
  1503                           
  1504                           end_of_initialization:
  1505  0025                     __end_of__initialization:
  1506  0025                     clrf status
  1507  0025  0183               ljmp _main	;jump to C main() function
  1508  0026  120A  118A  2F13   psect	cstackBANK1,class=BANK1,space=1,noexec
  1509                           global __pcstackBANK1
  1510                           __pcstackBANK1:
  1511  00A0                     ??_tmron:	; 1 bytes @ 0x0
  1512  00A0                     ??_EEPROM_ReadByte:	; 1 bytes @ 0x0
  1513  00A0                     ?_delay:	; 1 bytes @ 0x0
  1514  00A0                     ??_tecladoIniciar:	; 1 bytes @ 0x0
  1515  00A0                     ??_tecladoLer:	; 1 bytes @ 0x0
  1516  00A0                     	global	?__Umul8_16
  1517                           ?__Umul8_16:	; 2 bytes @ 0x0
  1518  00A0                     	global	?___wmul
  1519                           ?___wmul:	; 2 bytes @ 0x0
  1520  00A0                     	global	?___awdiv
  1521                           ?___awdiv:	; 2 bytes @ 0x0
  1522  00A0                     	global	?___awmod
  1523                           ?___awmod:	; 2 bytes @ 0x0
  1524  00A0                     	global	?___lldiv
  1525                           ?___lldiv:	; 4 bytes @ 0x0
  1526  00A0                     	global	?___xxtofl
  1527                           ?___xxtofl:	; 4 bytes @ 0x0
  1528  00A0                     	global	EEPROM_ReadByte@eepromAddress
  1529                           EEPROM_ReadByte@eepromAddress:	; 1 bytes @ 0x0
  1530  00A0                     	global	__Umul8_16@multiplicand
  1531                           __Umul8_16@multiplicand:	; 1 bytes @ 0x0
  1532  00A0                     	global	delay@t
  1533                           delay@t:	; 2 bytes @ 0x0
  1534  00A0                     	global	___wmul@multiplier
  1535                           ___wmul@multiplier:	; 2 bytes @ 0x0
  1536  00A0                     	global	___awdiv@divisor
  1537                           ___awdiv@divisor:	; 2 bytes @ 0x0
  1538  00A0                     	global	___awmod@divisor
  1539                           ___awmod@divisor:	; 2 bytes @ 0x0
  1540  00A0                     	global	___lldiv@divisor
  1541                           ___lldiv@divisor:	; 4 bytes @ 0x0
  1542  00A0                     	global	___xxtofl@val
  1543                           ___xxtofl@val:	; 4 bytes @ 0x0
  1544  00A0                     	ds	1
  1545  00A0                     	global	?_EEPROM_read
  1546                           ?_EEPROM_read:	; 2 bytes @ 0x1
  1547  00A1                     	ds	1
  1548  00A1                     ??__Umul8_16:	; 1 bytes @ 0x2
  1549  00A2                     ??_delay:	; 1 bytes @ 0x2
  1550  00A2                     	global	___wmul@multiplicand
  1551                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  1552  00A2                     	global	___awdiv@dividend
  1553                           ___awdiv@dividend:	; 2 bytes @ 0x2
  1554  00A2                     	global	___awmod@dividend
  1555                           ___awmod@dividend:	; 2 bytes @ 0x2
  1556  00A2                     	ds	1
  1557  00A2                     ??_EEPROM_read:	; 1 bytes @ 0x3
  1558  00A3                     	ds	1
  1559  00A3                     ??_cmdLCD:	; 1 bytes @ 0x4
  1560  00A4                     ?_EEPROM_WriteByte:	; 1 bytes @ 0x4
  1561  00A4                     ??_putLCD:	; 1 bytes @ 0x4
  1562  00A4                     ??_temperaturaInicializar:	; 1 bytes @ 0x4
  1563  00A4                     ??___wmul:	; 1 bytes @ 0x4
  1564  00A4                     ??___awdiv:	; 1 bytes @ 0x4
  1565  00A4                     ??___awmod:	; 1 bytes @ 0x4
  1566  00A4                     ??___xxtofl:	; 1 bytes @ 0x4
  1567  00A4                     	global	?_adcLer
  1568                           ?_adcLer:	; 2 bytes @ 0x4
  1569  00A4                     	global	EEPROM_WriteByte@eepromData
  1570                           EEPROM_WriteByte@eepromData:	; 1 bytes @ 0x4
  1571  00A4                     	global	___wmul@product
  1572                           ___wmul@product:	; 2 bytes @ 0x4
  1573  00A4                     	global	__Umul8_16@product
  1574                           __Umul8_16@product:	; 2 bytes @ 0x4
  1575  00A4                     	global	___lldiv@dividend
  1576                           ___lldiv@dividend:	; 4 bytes @ 0x4
  1577  00A4                     	ds	1
  1578  00A4                     ??_EEPROM_WriteByte:	; 1 bytes @ 0x5
  1579  00A5                     	global	cmdLCD@cmd
  1580                           cmdLCD@cmd:	; 1 bytes @ 0x5
  1581  00A5                     	global	putLCD@c
  1582                           putLCD@c:	; 1 bytes @ 0x5
  1583  00A5                     	global	EEPROM_read@pont
  1584                           EEPROM_read@pont:	; 1 bytes @ 0x5
  1585  00A5                     	global	EEPROM_WriteByte@eepromAddress
  1586                           EEPROM_WriteByte@eepromAddress:	; 1 bytes @ 0x5
  1587  00A5                     	global	___awdiv@counter
  1588                           ___awdiv@counter:	; 1 bytes @ 0x5
  1589  00A5                     	global	___awmod@counter
  1590                           ___awmod@counter:	; 1 bytes @ 0x5
  1591  00A5                     	ds	1
  1592  00A5                     ??_adcLer:	; 1 bytes @ 0x6
  1593  00A6                     	global	cmdLCD@nibble
  1594                           cmdLCD@nibble:	; 1 bytes @ 0x6
  1595  00A6                     	global	putLCD@nibble
  1596                           putLCD@nibble:	; 1 bytes @ 0x6
  1597  00A6                     	global	EEPROM_WriteByte@gie_Status
  1598                           EEPROM_WriteByte@gie_Status:	; 1 bytes @ 0x6
  1599  00A6                     	global	___awdiv@sign
  1600                           ___awdiv@sign:	; 1 bytes @ 0x6
  1601  00A6                     	global	___awmod@sign
  1602                           ___awmod@sign:	; 1 bytes @ 0x6
  1603  00A6                     	global	adcLer@adc01Temp
  1604                           adcLer@adc01Temp:	; 2 bytes @ 0x6
  1605  00A6                     	global	__Umul8_16@word_mpld
  1606                           __Umul8_16@word_mpld:	; 2 bytes @ 0x6
  1607  00A6                     	ds	1
  1608  00A6                     ?_EEPROM_write:	; 1 bytes @ 0x7
  1609  00A7                     ??_initLCD:	; 1 bytes @ 0x7
  1610  00A7                     ?_gotoxy:	; 1 bytes @ 0x7
  1611  00A7                     	global	gotoxy@y
  1612                           gotoxy@y:	; 1 bytes @ 0x7
  1613  00A7                     	global	EEPROM_write@value
  1614                           EEPROM_write@value:	; 2 bytes @ 0x7
  1615  00A7                     	global	___awdiv@quotient
  1616                           ___awdiv@quotient:	; 2 bytes @ 0x7
  1617  00A7                     	ds	1
  1618  00A7                     ??_gotoxy:	; 1 bytes @ 0x8
  1619  00A8                     ??___lldiv:	; 1 bytes @ 0x8
  1620  00A8                     	global	___xxtofl@sign
  1621                           ___xxtofl@sign:	; 1 bytes @ 0x8
  1622  00A8                     	global	__Umul8_16@multiplier
  1623                           __Umul8_16@multiplier:	; 1 bytes @ 0x8
  1624  00A8                     	ds	1
  1625  00A8                     ??_EEPROM_write:	; 1 bytes @ 0x9
  1626  00A9                     	global	___xxtofl@exp
  1627                           ___xxtofl@exp:	; 1 bytes @ 0x9
  1628  00A9                     	global	___lldiv@quotient
  1629                           ___lldiv@quotient:	; 4 bytes @ 0x9
  1630  00A9                     	ds	1
  1631  00A9                     	global	gotoxy@x
  1632                           gotoxy@x:	; 1 bytes @ 0xA
  1633  00AA                     	global	EEPROM_write@pont
  1634                           EEPROM_write@pont:	; 1 bytes @ 0xA
  1635  00AA                     	global	___xxtofl@arg
  1636                           ___xxtofl@arg:	; 4 bytes @ 0xA
  1637  00AA                     	ds	1
  1638  00AA                     ??_salvatemp:	; 1 bytes @ 0xB
  1639  00AB                     ??_resetemp:	; 1 bytes @ 0xB
  1640  00AB                     ?_writeLCD:	; 1 bytes @ 0xB
  1641  00AB                     	global	writeLCD@y
  1642                           writeLCD@y:	; 1 bytes @ 0xB
  1643  00AB                     	global	salvatemp@valor
  1644                           salvatemp@valor:	; 2 bytes @ 0xB
  1645  00AB                     	ds	1
  1646  00AB                     	global	resetemp@i
  1647                           resetemp@i:	; 1 bytes @ 0xC
  1648  00AC                     	global	writeLCD@ptr
  1649                           writeLCD@ptr:	; 2 bytes @ 0xC
  1650  00AC                     	ds	1
  1651  00AC                     	global	salvatemp@temp
  1652                           salvatemp@temp:	; 1 bytes @ 0xD
  1653  00AD                     	global	___lldiv@counter
  1654                           ___lldiv@counter:	; 1 bytes @ 0xD
  1655  00AD                     	ds	1
  1656  00AD                     ??_media:	; 1 bytes @ 0xE
  1657  00AE                     ??_writeLCD:	; 1 bytes @ 0xE
  1658  00AE                     	global	?___flmul
  1659                           ?___flmul:	; 4 bytes @ 0xE
  1660  00AE                     	global	___flmul@b
  1661                           ___flmul@b:	; 4 bytes @ 0xE
  1662  00AE                     	ds	1
  1663  00AE                     	global	writeLCD@x
  1664                           writeLCD@x:	; 1 bytes @ 0xF
  1665  00AF                     	ds	1
  1666  00AF                     ??_SplashScreen0:	; 1 bytes @ 0x10
  1667  00B0                     ??_SplashScreen1:	; 1 bytes @ 0x10
  1668  00B0                     ??_Telaprincipal:	; 1 bytes @ 0x10
  1669  00B0                     ??_showtemp:	; 1 bytes @ 0x10
  1670  00B0                     ??_erasertemp:	; 1 bytes @ 0x10
  1671  00B0                     	ds	2
  1672  00B0                     	global	___flmul@a
  1673                           ___flmul@a:	; 4 bytes @ 0x12
  1674  00B2                     	ds	2
  1675  00B2                     	global	media@divisao
  1676                           media@divisao:	; 4 bytes @ 0x14
  1677  00B4                     	ds	2
  1678  00B4                     ??___flmul:	; 1 bytes @ 0x16
  1679  00B6                     	ds	2
  1680  00B6                     	global	media@valor
  1681                           media@valor:	; 4 bytes @ 0x18
  1682  00B8                     	ds	3
  1683  00B8                     	global	___flmul@sign
  1684                           ___flmul@sign:	; 1 bytes @ 0x1B
  1685  00BB                     	ds	1
  1686  00BB                     	global	media@retorno
  1687                           media@retorno:	; 1 bytes @ 0x1C
  1688  00BC                     	global	___flmul@grs
  1689                           ___flmul@grs:	; 4 bytes @ 0x1C
  1690  00BC                     	ds	1
  1691  00BC                     	global	media@ee
  1692                           media@ee:	; 2 bytes @ 0x1D
  1693  00BD                     	ds	2
  1694  00BD                     	global	media@i
  1695                           media@i:	; 1 bytes @ 0x1F
  1696  00BF                     	ds	1
  1697  00BF                     ??_TempMed:	; 1 bytes @ 0x20
  1698  00C0                     	global	___flmul@aexp
  1699                           ___flmul@aexp:	; 1 bytes @ 0x20
  1700  00C0                     	ds	1
  1701  00C0                     	global	___flmul@bexp
  1702                           ___flmul@bexp:	; 1 bytes @ 0x21
  1703  00C1                     	ds	1
  1704  00C1                     	global	___flmul@prod
  1705                           ___flmul@prod:	; 4 bytes @ 0x22
  1706  00C2                     	ds	1
  1707  00C2                     	global	TempMed@md
  1708                           TempMed@md:	; 3 bytes @ 0x23
  1709  00C3                     	ds	3
  1710  00C3                     	global	TempMed@Media
  1711                           TempMed@Media:	; 1 bytes @ 0x26
  1712  00C6                     	global	___flmul@temp
  1713                           ___flmul@temp:	; 2 bytes @ 0x26
  1714  00C6                     	ds	2
  1715  00C6                     	global	?___fltol
  1716                           ?___fltol:	; 4 bytes @ 0x28
  1717  00C8                     	global	___fltol@f1
  1718                           ___fltol@f1:	; 4 bytes @ 0x28
  1719  00C8                     	ds	4
  1720  00C8                     ??___fltol:	; 1 bytes @ 0x2C
  1721  00CC                     	ds	5
  1722  00CC                     	global	___fltol@sign1
  1723                           ___fltol@sign1:	; 1 bytes @ 0x31
  1724  00D1                     	ds	1
  1725  00D1                     	global	___fltol@exp1
  1726                           ___fltol@exp1:	; 1 bytes @ 0x32
  1727  00D2                     	ds	1
  1728  00D2                     ??_temperaturaLer:	; 1 bytes @ 0x33
  1729  00D3                     	global	temperaturaLer@temp01VlrInt
  1730                           temperaturaLer@temp01VlrInt:	; 2 bytes @ 0x33
  1731  00D3                     	ds	2
  1732  00D3                     	global	temperaturaLer@temp01VlrTmp
  1733                           temperaturaLer@temp01VlrTmp:	; 2 bytes @ 0x35
  1734  00D5                     	ds	2
  1735  00D5                     ??_tempatt:	; 1 bytes @ 0x37
  1736  00D7                     	ds	2
  1737  00D7                     	global	tempatt@Tp
  1738                           tempatt@Tp:	; 3 bytes @ 0x39
  1739  00D9                     	ds	3
  1740  00D9                     	global	tempatt@temp
  1741                           tempatt@temp:	; 2 bytes @ 0x3C
  1742  00DC                     	ds	2
  1743  00DC                     ??_main:	; 1 bytes @ 0x3E
  1744  00DE                     	ds	2
  1745  00DE                     	global	main@nr
  1746                           main@nr:	; 1 bytes @ 0x40
  1747  00E0                     	ds	1
  1748  00E0                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  1749                           global __pcstackCOMMON
  1750                           __pcstackCOMMON:
  1751  0070                     ?_cmdLCD:	; 1 bytes @ 0x0
  1752  0070                     ?_temperaturaLer:	; 1 bytes @ 0x0
  1753  0070                     ?_media:	; 1 bytes @ 0x0
  1754  0070                     ?_salvatemp:	; 1 bytes @ 0x0
  1755  0070                     ?_tmron:	; 1 bytes @ 0x0
  1756  0070                     ?_resetemp:	; 1 bytes @ 0x0
  1757  0070                     ?_EEPROM_ReadByte:	; 1 bytes @ 0x0
  1758  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1759  0070                     ?_putLCD:	; 1 bytes @ 0x0
  1760  0070                     ?_SplashScreen0:	; 1 bytes @ 0x0
  1761  0070                     ?_SplashScreen1:	; 1 bytes @ 0x0
  1762  0070                     ?_Telaprincipal:	; 1 bytes @ 0x0
  1763  0070                     ?_tempatt:	; 1 bytes @ 0x0
  1764  0070                     ?_TempMed:	; 1 bytes @ 0x0
  1765  0070                     ?_showtemp:	; 1 bytes @ 0x0
  1766  0070                     ?_erasertemp:	; 1 bytes @ 0x0
  1767  0070                     ?_temperaturaInicializar:	; 1 bytes @ 0x0
  1768  0070                     ?_tecladoIniciar:	; 1 bytes @ 0x0
  1769  0070                     ?_tecladoLer:	; 1 bytes @ 0x0
  1770  0070                     ?_myISR:	; 1 bytes @ 0x0
  1771  0070                     ?_main:	; 1 bytes @ 0x0
  1772  0070                     ?i1_delay:	; 1 bytes @ 0x0
  1773  0070                     ?i1_temperaturaLer:	; 1 bytes @ 0x0
  1774  0070                     ?i1_salvatemp:	; 1 bytes @ 0x0
  1775  0070                     ?i1_EEPROM_ReadByte:	; 1 bytes @ 0x0
  1776  0070                     ??i1_EEPROM_ReadByte:	; 1 bytes @ 0x0
  1777  0070                     	global	?i1__Umul8_16
  1778                           ?i1__Umul8_16:	; 2 bytes @ 0x0
  1779  0070                     	global	?i1___xxtofl
  1780                           ?i1___xxtofl:	; 4 bytes @ 0x0
  1781  0070                     	global	i1EEPROM_ReadByte@eepromAddress
  1782                           i1EEPROM_ReadByte@eepromAddress:	; 1 bytes @ 0x0
  1783  0070                     	global	i1__Umul8_16@multiplicand
  1784                           i1__Umul8_16@multiplicand:	; 1 bytes @ 0x0
  1785  0070                     	global	i1delay@t
  1786                           i1delay@t:	; 2 bytes @ 0x0
  1787  0070                     	global	i1___xxtofl@val
  1788                           i1___xxtofl@val:	; 4 bytes @ 0x0
  1789  0070                     	ds	1
  1790  0070                     	global	?i1_EEPROM_read
  1791                           ?i1_EEPROM_read:	; 2 bytes @ 0x1
  1792  0071                     	ds	1
  1793  0071                     ??i1_delay:	; 1 bytes @ 0x2
  1794  0072                     ??i1__Umul8_16:	; 1 bytes @ 0x2
  1795  0072                     	ds	1
  1796  0072                     ??i1_EEPROM_read:	; 1 bytes @ 0x3
  1797  0073                     	ds	1
  1798  0073                     ?i1_EEPROM_WriteByte:	; 1 bytes @ 0x4
  1799  0074                     ??i1___xxtofl:	; 1 bytes @ 0x4
  1800  0074                     	global	?i1_adcLer
  1801                           ?i1_adcLer:	; 2 bytes @ 0x4
  1802  0074                     	global	i1EEPROM_WriteByte@eepromData
  1803                           i1EEPROM_WriteByte@eepromData:	; 1 bytes @ 0x4
  1804  0074                     	global	i1__Umul8_16@product
  1805                           i1__Umul8_16@product:	; 2 bytes @ 0x4
  1806  0074                     	ds	1
  1807  0074                     ??i1_EEPROM_WriteByte:	; 1 bytes @ 0x5
  1808  0075                     	global	i1EEPROM_read@pont
  1809                           i1EEPROM_read@pont:	; 1 bytes @ 0x5
  1810  0075                     	global	i1EEPROM_WriteByte@eepromAddress
  1811                           i1EEPROM_WriteByte@eepromAddress:	; 1 bytes @ 0x5
  1812  0075                     	ds	1
  1813  0075                     ??i1_adcLer:	; 1 bytes @ 0x6
  1814  0076                     	global	i1EEPROM_WriteByte@gie_Status
  1815                           i1EEPROM_WriteByte@gie_Status:	; 1 bytes @ 0x6
  1816  0076                     	global	i1adcLer@adc01Temp
  1817                           i1adcLer@adc01Temp:	; 2 bytes @ 0x6
  1818  0076                     	global	i1__Umul8_16@word_mpld
  1819                           i1__Umul8_16@word_mpld:	; 2 bytes @ 0x6
  1820  0076                     	ds	1
  1821  0076                     ?i1_EEPROM_write:	; 1 bytes @ 0x7
  1822  0077                     	global	i1EEPROM_write@value
  1823                           i1EEPROM_write@value:	; 2 bytes @ 0x7
  1824  0077                     	ds	1
  1825  0077                     	global	i1___xxtofl@sign
  1826                           i1___xxtofl@sign:	; 1 bytes @ 0x8
  1827  0078                     	global	i1__Umul8_16@multiplier
  1828                           i1__Umul8_16@multiplier:	; 1 bytes @ 0x8
  1829  0078                     	ds	1
  1830  0078                     ??i1_EEPROM_write:	; 1 bytes @ 0x9
  1831  0079                     	global	i1___xxtofl@exp
  1832                           i1___xxtofl@exp:	; 1 bytes @ 0x9
  1833  0079                     	ds	1
  1834  0079                     	global	i1EEPROM_write@pont
  1835                           i1EEPROM_write@pont:	; 1 bytes @ 0xA
  1836  007A                     	global	i1___xxtofl@arg
  1837                           i1___xxtofl@arg:	; 4 bytes @ 0xA
  1838  007A                     	ds	1
  1839  007A                     ??i1_salvatemp:	; 1 bytes @ 0xB
  1840  007B                     	global	i1salvatemp@temp
  1841                           i1salvatemp@temp:	; 1 bytes @ 0xB
  1842  007B                     	ds	1
  1843  007B                     	global	i1salvatemp@valor
  1844                           i1salvatemp@valor:	; 2 bytes @ 0xC
  1845  007C                     	ds	2
  1846  007C                     ??i1_temperaturaLer:	; 1 bytes @ 0xE
  1847  007E                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1848                           global __pcstackBANK0
  1849                           __pcstackBANK0:
  1850  0020                     	global	?i1___flmul
  1851                           ?i1___flmul:	; 4 bytes @ 0x0
  1852  0020                     	global	i1___flmul@b
  1853                           i1___flmul@b:	; 4 bytes @ 0x0
  1854  0020                     	ds	4
  1855  0020                     	global	i1___flmul@a
  1856                           i1___flmul@a:	; 4 bytes @ 0x4
  1857  0024                     	ds	4
  1858  0024                     ??i1___flmul:	; 1 bytes @ 0x8
  1859  0028                     	ds	5
  1860  0028                     	global	i1___flmul@sign
  1861                           i1___flmul@sign:	; 1 bytes @ 0xD
  1862  002D                     	ds	1
  1863  002D                     	global	i1___flmul@grs
  1864                           i1___flmul@grs:	; 4 bytes @ 0xE
  1865  002E                     	ds	4
  1866  002E                     	global	i1___flmul@aexp
  1867                           i1___flmul@aexp:	; 1 bytes @ 0x12
  1868  0032                     	ds	1
  1869  0032                     	global	i1___flmul@bexp
  1870                           i1___flmul@bexp:	; 1 bytes @ 0x13
  1871  0033                     	ds	1
  1872  0033                     	global	i1___flmul@prod
  1873                           i1___flmul@prod:	; 4 bytes @ 0x14
  1874  0034                     	ds	4
  1875  0034                     	global	i1___flmul@temp
  1876                           i1___flmul@temp:	; 2 bytes @ 0x18
  1877  0038                     	ds	2
  1878  0038                     	global	?i1___fltol
  1879                           ?i1___fltol:	; 4 bytes @ 0x1A
  1880  003A                     	global	i1___fltol@f1
  1881                           i1___fltol@f1:	; 4 bytes @ 0x1A
  1882  003A                     	ds	4
  1883  003A                     ??i1___fltol:	; 1 bytes @ 0x1E
  1884  003E                     	ds	5
  1885  003E                     	global	i1___fltol@sign1
  1886                           i1___fltol@sign1:	; 1 bytes @ 0x23
  1887  0043                     	ds	1
  1888  0043                     	global	i1___fltol@exp1
  1889                           i1___fltol@exp1:	; 1 bytes @ 0x24
  1890  0044                     	ds	1
  1891  0044                     	global	i1temperaturaLer@temp01VlrInt
  1892                           i1temperaturaLer@temp01VlrInt:	; 2 bytes @ 0x25
  1893  0045                     	ds	2
  1894  0045                     	global	i1temperaturaLer@temp01VlrTmp
  1895                           i1temperaturaLer@temp01VlrTmp:	; 2 bytes @ 0x27
  1896  0047                     	ds	2
  1897  0047                     ??_myISR:	; 1 bytes @ 0x29
  1898  0049                     	ds	3
  1899  0049                     ;!
  1900                           ;!Data Sizes:
  1901                           ;!    Strings     121
  1902                           ;!    Constant    16
  1903                           ;!    Data        7
  1904                           ;!    BSS         4
  1905                           ;!    Persistent  0
  1906                           ;!    Stack       0
  1907                           ;!
  1908                           ;!Auto Spaces:
  1909                           ;!    Space          Size  Autos    Used
  1910                           ;!    COMMON           14     14      14
  1911                           ;!    BANK0            80     44      48
  1912                           ;!    BANK1            80     65      72
  1913                           ;!    BANK3            96      0       0
  1914                           ;!    BANK2            96      0       0
  1915                           
  1916                           ;!
  1917                           ;!Pointer List with Targets:
  1918                           ;!
  1919                           ;!    writeLCD@ptr	PTR const unsigned char  size(2) Largest target is 17
  1920                           ;!		 -> STR_10(CODE[12]), STR_9(CODE[10]), STR_8(CODE[17]), TempMed@md(BANK1[3]), 
  1921                           ;!		 -> tempatt@Tp(BANK1[3]), STR_7(CODE[17]), STR_6(CODE[12]), STR_5(CODE[17]), 
  1922                           ;!		 -> STR_4(CODE[9]), STR_3(CODE[10]), STR_2(CODE[8]), STR_1(CODE[9]), 
  1923                           ;!
  1924                           
  1925                           
  1926                           ;!
  1927                           ;!Critical Paths under _main in COMMON
  1928                           ;!
  1929                           ;!    None.
  1930                           ;!
  1931                           ;!Critical Paths under _myISR in COMMON
  1932                           ;!
  1933                           ;!    _myISR->i1_salvatemp
  1934                           ;!    i1_temperaturaLer->i1___xxtofl
  1935                           ;!    i1_adcLer->i1_delay
  1936                           ;!    i1___fltol->i1___xxtofl
  1937                           ;!    i1___flmul->i1___xxtofl
  1938                           ;!    i1_salvatemp->i1_EEPROM_write
  1939                           ;!    i1_EEPROM_write->i1_EEPROM_WriteByte
  1940                           ;!    i1_EEPROM_WriteByte->i1_delay
  1941                           ;!    i1_EEPROM_read->i1_EEPROM_ReadByte
  1942                           ;!
  1943                           ;!Critical Paths under _main in BANK0
  1944                           ;!
  1945                           ;!    None.
  1946                           ;!
  1947                           ;!Critical Paths under _myISR in BANK0
  1948                           ;!
  1949                           ;!    _myISR->i1_temperaturaLer
  1950                           ;!    i1_temperaturaLer->i1___fltol
  1951                           ;!    i1___fltol->i1___flmul
  1952                           ;!
  1953                           ;!Critical Paths under _main in BANK1
  1954                           ;!
  1955                           ;!    _main->_tempatt
  1956                           ;!    _temperaturaInicializar->_delay
  1957                           ;!    _tempatt->_temperaturaLer
  1958                           ;!    _temperaturaLer->___fltol
  1959                           ;!    _adcLer->_delay
  1960                           ;!    ___fltol->___flmul
  1961                           ;!    ___flmul->___xxtofl
  1962                           ;!    _showtemp->_writeLCD
  1963                           ;!    _salvatemp->_EEPROM_write
  1964                           ;!    _resetemp->_EEPROM_write
  1965                           ;!    _EEPROM_write->_EEPROM_WriteByte
  1966                           ;!    _EEPROM_WriteByte->_delay
  1967                           ;!    _initLCD->_cmdLCD
  1968                           ;!    _erasertemp->_writeLCD
  1969                           ;!    _TempMed->_media
  1970                           ;!    _media->___lldiv
  1971                           ;!    _EEPROM_read->_EEPROM_ReadByte
  1972                           ;!    _Telaprincipal->_writeLCD
  1973                           ;!    _SplashScreen1->_writeLCD
  1974                           ;!    _SplashScreen0->_writeLCD
  1975                           ;!    _writeLCD->_gotoxy
  1976                           ;!    _putLCD->_delay
  1977                           ;!    _gotoxy->_cmdLCD
  1978                           ;!    _cmdLCD->_delay
  1979                           ;!
  1980                           ;!Critical Paths under _myISR in BANK1
  1981                           ;!
  1982                           ;!    None.
  1983                           ;!
  1984                           ;!Critical Paths under _main in BANK3
  1985                           ;!
  1986                           ;!    None.
  1987                           ;!
  1988                           ;!Critical Paths under _myISR in BANK3
  1989                           ;!
  1990                           ;!    None.
  1991                           ;!
  1992                           ;!Critical Paths under _main in BANK2
  1993                           ;!
  1994                           ;!    None.
  1995                           ;!
  1996                           ;!Critical Paths under _myISR in BANK2
  1997                           ;!
  1998                           ;!    None.
  1999                           
  2000 ;;
  2001 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2002 ;;
  2003                           
  2004                           ;!
  2005                           ;!Call Graph Tables:
  2006                           ;!
  2007                           ;! ---------------------------------------------------------------------------------
  2008                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2009                           ;! ---------------------------------------------------------------------------------
  2010                           ;! (0) _main                                                 3     3      0   58792
  2011                           ;!                                             62 BANK1      3     3      0
  2012                           ;!                      _SplashScreen0
  2013                           ;!                      _SplashScreen1
  2014                           ;!                      _Telaprincipal
  2015                           ;!                            _TempMed
  2016                           ;!                             _adcLer
  2017                           ;!                             _cmdLCD
  2018                           ;!                              _delay
  2019                           ;!                         _erasertemp
  2020                           ;!                            _initLCD
  2021                           ;!                             _putLCD
  2022                           ;!                           _resetemp
  2023                           ;!                          _salvatemp
  2024                           ;!                           _showtemp
  2025                           ;!                     _tecladoIniciar
  2026                           ;!                         _tecladoLer
  2027                           ;!                            _tempatt
  2028                           ;!             _temperaturaInicializar
  2029                           ;!                     _temperaturaLer
  2030                           ;!                              _tmron
  2031                           ;! ---------------------------------------------------------------------------------
  2032                           ;! (1) _tmron                                                0     0      0       0
  2033                           ;! ---------------------------------------------------------------------------------
  2034                           ;! (1) _temperaturaInicializar                               0     0      0    1011
  2035                           ;!                              _delay
  2036                           ;! ---------------------------------------------------------------------------------
  2037                           ;! (1) _tempatt                                              7     7      0    9950
  2038                           ;!                                             55 BANK1      7     7      0
  2039                           ;!                            ___awdiv
  2040                           ;!                            ___awmod
  2041                           ;!                     _temperaturaLer
  2042                           ;!                           _writeLCD
  2043                           ;! ---------------------------------------------------------------------------------
  2044                           ;! (1) _temperaturaLer                                       4     4      0    4200
  2045                           ;!                                             51 BANK1      4     4      0
  2046                           ;!                            ___flmul
  2047                           ;!                            ___fltol
  2048                           ;!                           ___xxtofl
  2049                           ;!                             _adcLer
  2050                           ;! ---------------------------------------------------------------------------------
  2051                           ;! (2) _adcLer                                               4     2      2    1034
  2052                           ;!                                              4 BANK1      4     2      2
  2053                           ;!                              _delay
  2054                           ;! ---------------------------------------------------------------------------------
  2055                           ;! (2) ___xxtofl                                            14    10      4     398
  2056                           ;!                                              0 BANK1     14    10      4
  2057                           ;! ---------------------------------------------------------------------------------
  2058                           ;! (2) ___fltol                                             11     7      4     305
  2059                           ;!                                             40 BANK1     11     7      4
  2060                           ;!                            ___flmul (ARG)
  2061                           ;!                           ___xxtofl (ARG)
  2062                           ;! ---------------------------------------------------------------------------------
  2063                           ;! (2) ___flmul                                             26    18      8    2417
  2064                           ;!                                             14 BANK1     26    18      8
  2065                           ;!                          __Umul8_16
  2066                           ;!                           ___xxtofl (ARG)
  2067                           ;! ---------------------------------------------------------------------------------
  2068                           ;! (3) __Umul8_16                                            9     7      2     799
  2069                           ;!                                              0 BANK1      9     7      2
  2070                           ;! ---------------------------------------------------------------------------------
  2071                           ;! (1) _tecladoLer                                           1     1      0       0
  2072                           ;!                                              0 BANK1      1     1      0
  2073                           ;! ---------------------------------------------------------------------------------
  2074                           ;! (1) _tecladoIniciar                                       0     0      0       0
  2075                           ;! ---------------------------------------------------------------------------------
  2076                           ;! (1) _showtemp                                             0     0      0    4451
  2077                           ;!                           _writeLCD
  2078                           ;! ---------------------------------------------------------------------------------
  2079                           ;! (1) _salvatemp                                            3     3      0    1604
  2080                           ;!                                             11 BANK1      3     3      0
  2081                           ;!                        _EEPROM_read
  2082                           ;!                       _EEPROM_write
  2083                           ;! ---------------------------------------------------------------------------------
  2084                           ;! (1) _resetemp                                             2     2      0    1538
  2085                           ;!                                             11 BANK1      2     2      0
  2086                           ;!                       _EEPROM_write
  2087                           ;! ---------------------------------------------------------------------------------
  2088                           ;! (2) _EEPROM_write                                         4     2      2    1470
  2089                           ;!                                              7 BANK1      4     2      2
  2090                           ;!                   _EEPROM_WriteByte
  2091                           ;! ---------------------------------------------------------------------------------
  2092                           ;! (3) _EEPROM_WriteByte                                     3     2      1    1230
  2093                           ;!                                              4 BANK1      3     2      1
  2094                           ;!                              _delay
  2095                           ;! ---------------------------------------------------------------------------------
  2096                           ;! (1) _initLCD                                              0     0      0    2199
  2097                           ;!                             _cmdLCD
  2098                           ;!                              _delay
  2099                           ;! ---------------------------------------------------------------------------------
  2100                           ;! (1) _erasertemp                                           0     0      0    4451
  2101                           ;!                           _writeLCD
  2102                           ;! ---------------------------------------------------------------------------------
  2103                           ;! (1) _TempMed                                              7     7      0    9119
  2104                           ;!                                             32 BANK1      7     7      0
  2105                           ;!                            ___awdiv
  2106                           ;!                            ___awmod
  2107                           ;!                             _gotoxy
  2108                           ;!                              _media
  2109                           ;!                             _putLCD
  2110                           ;!                           _writeLCD
  2111                           ;! ---------------------------------------------------------------------------------
  2112                           ;! (2) _media                                               18    18      0     831
  2113                           ;!                                             14 BANK1     18    18      0
  2114                           ;!                        _EEPROM_read
  2115                           ;!                            ___lldiv
  2116                           ;!                             ___wmul
  2117                           ;! ---------------------------------------------------------------------------------
  2118                           ;! (3) ___wmul                                               6     2      4     244
  2119                           ;!                                              0 BANK1      6     2      4
  2120                           ;! ---------------------------------------------------------------------------------
  2121                           ;! (3) ___lldiv                                             14     6      8     314
  2122                           ;!                                              0 BANK1     14     6      8
  2123                           ;! ---------------------------------------------------------------------------------
  2124                           ;! (2) _EEPROM_read                                          5     3      2      66
  2125                           ;!                                              1 BANK1      5     3      2
  2126                           ;!                    _EEPROM_ReadByte
  2127                           ;! ---------------------------------------------------------------------------------
  2128                           ;! (3) _EEPROM_ReadByte                                      1     1      0      22
  2129                           ;!                                              0 BANK1      1     1      0
  2130                           ;! ---------------------------------------------------------------------------------
  2131                           ;! (2) ___awmod                                              7     3      4     600
  2132                           ;!                                              0 BANK1      7     3      4
  2133                           ;! ---------------------------------------------------------------------------------
  2134                           ;! (2) ___awdiv                                              9     5      4     604
  2135                           ;!                                              0 BANK1      9     5      4
  2136                           ;! ---------------------------------------------------------------------------------
  2137                           ;! (1) _Telaprincipal                                        0     0      0    6989
  2138                           ;!                             _gotoxy
  2139                           ;!                             _putLCD
  2140                           ;!                           _writeLCD
  2141                           ;! ---------------------------------------------------------------------------------
  2142                           ;! (1) _SplashScreen1                                        0     0      0    4451
  2143                           ;!                           _writeLCD
  2144                           ;! ---------------------------------------------------------------------------------
  2145                           ;! (1) _SplashScreen0                                        0     0      0    4451
  2146                           ;!                           _writeLCD
  2147                           ;! ---------------------------------------------------------------------------------
  2148                           ;! (2) _writeLCD                                             5     2      3    4451
  2149                           ;!                                             11 BANK1      5     2      3
  2150                           ;!                             _gotoxy
  2151                           ;!                             _putLCD
  2152                           ;! ---------------------------------------------------------------------------------
  2153                           ;! (3) _putLCD                                               3     3      0    1078
  2154                           ;!                                              4 BANK1      3     3      0
  2155                           ;!                              _delay
  2156                           ;! ---------------------------------------------------------------------------------
  2157                           ;! (3) _gotoxy                                               4     3      1    1460
  2158                           ;!                                              7 BANK1      4     3      1
  2159                           ;!                             _cmdLCD
  2160                           ;! ---------------------------------------------------------------------------------
  2161                           ;! (4) _cmdLCD                                               3     3      0    1188
  2162                           ;!                                              4 BANK1      3     3      0
  2163                           ;!                              _delay
  2164                           ;! ---------------------------------------------------------------------------------
  2165                           ;! (3) _delay                                                4     2      2    1011
  2166                           ;!                                              0 BANK1      4     2      2
  2167                           ;! ---------------------------------------------------------------------------------
  2168                           ;! Estimated maximum stack depth 4
  2169                           ;! ---------------------------------------------------------------------------------
  2170                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2171                           ;! ---------------------------------------------------------------------------------
  2172                           ;! (6) _myISR                                                3     3      0    3108
  2173                           ;!                                             41 BANK0      3     3      0
  2174                           ;!                        i1_salvatemp
  2175                           ;!                   i1_temperaturaLer
  2176                           ;! ---------------------------------------------------------------------------------
  2177                           ;! (7) i1_temperaturaLer                                     4     4      0    2640
  2178                           ;!                                             37 BANK0      4     4      0
  2179                           ;!                          i1___flmul
  2180                           ;!                          i1___fltol
  2181                           ;!                         i1___xxtofl
  2182                           ;!                           i1_adcLer
  2183                           ;! ---------------------------------------------------------------------------------
  2184                           ;! (8) i1_adcLer                                             4     2      2     124
  2185                           ;!                                              4 COMMON     4     2      2
  2186                           ;!                            i1_delay
  2187                           ;! ---------------------------------------------------------------------------------
  2188                           ;! (8) i1___xxtofl                                          14    10      4     348
  2189                           ;!                                              0 COMMON    14    10      4
  2190                           ;! ---------------------------------------------------------------------------------
  2191                           ;! (8) i1___fltol                                           11     7      4     255
  2192                           ;!                                             26 BANK0     11     7      4
  2193                           ;!                          i1___flmul (ARG)
  2194                           ;!                         i1___xxtofl (ARG)
  2195                           ;! ---------------------------------------------------------------------------------
  2196                           ;! (8) i1___flmul                                           26    18      8    1867
  2197                           ;!                                              0 BANK0     26    18      8
  2198                           ;!                        i1__Umul8_16
  2199                           ;!                         i1___xxtofl (ARG)
  2200                           ;! ---------------------------------------------------------------------------------
  2201                           ;! (9) i1__Umul8_16                                          9     7      2     349
  2202                           ;!                                              0 COMMON     9     7      2
  2203                           ;! ---------------------------------------------------------------------------------
  2204                           ;! (7) i1_salvatemp                                          3     3      0     468
  2205                           ;!                                             11 COMMON     3     3      0
  2206                           ;!                      i1_EEPROM_read
  2207                           ;!                     i1_EEPROM_write
  2208                           ;! ---------------------------------------------------------------------------------
  2209                           ;! (8) i1_EEPROM_write                                       4     2      2     334
  2210                           ;!                                              7 COMMON     4     2      2
  2211                           ;!                 i1_EEPROM_WriteByte
  2212                           ;! ---------------------------------------------------------------------------------
  2213                           ;! (9) i1_EEPROM_WriteByte                                   3     2      1     220
  2214                           ;!                                              4 COMMON     3     2      1
  2215                           ;!                            i1_delay
  2216                           ;! ---------------------------------------------------------------------------------
  2217                           ;! (9) i1_delay                                              4     2      2     101
  2218                           ;!                                              0 COMMON     4     2      2
  2219                           ;! ---------------------------------------------------------------------------------
  2220                           ;! (8) i1_EEPROM_read                                        5     3      2      66
  2221                           ;!                                              1 COMMON     5     3      2
  2222                           ;!                  i1_EEPROM_ReadByte
  2223                           ;! ---------------------------------------------------------------------------------
  2224                           ;! (9) i1_EEPROM_ReadByte                                    1     1      0      22
  2225                           ;!                                              0 COMMON     1     1      0
  2226                           ;! ---------------------------------------------------------------------------------
  2227                           ;! Estimated maximum stack depth 9
  2228                           ;! ---------------------------------------------------------------------------------
  2229                           ;!
  2230                           ;! Call Graph Graphs:
  2231                           ;!
  2232                           ;! _main (ROOT)
  2233                           ;!   _SplashScreen0
  2234                           ;!     _writeLCD
  2235                           ;!       _gotoxy
  2236                           ;!         _cmdLCD
  2237                           ;!           _delay
  2238                           ;!       _putLCD
  2239                           ;!         _delay
  2240                           ;!   _SplashScreen1
  2241                           ;!     _writeLCD
  2242                           ;!       _gotoxy
  2243                           ;!         _cmdLCD
  2244                           ;!           _delay
  2245                           ;!       _putLCD
  2246                           ;!         _delay
  2247                           ;!   _Telaprincipal
  2248                           ;!     _gotoxy
  2249                           ;!       _cmdLCD
  2250                           ;!         _delay
  2251                           ;!     _putLCD
  2252                           ;!       _delay
  2253                           ;!     _writeLCD
  2254                           ;!       _gotoxy
  2255                           ;!         _cmdLCD
  2256                           ;!           _delay
  2257                           ;!       _putLCD
  2258                           ;!         _delay
  2259                           ;!   _TempMed
  2260                           ;!     ___awdiv
  2261                           ;!     ___awmod
  2262                           ;!     _gotoxy
  2263                           ;!       _cmdLCD
  2264                           ;!         _delay
  2265                           ;!     _media
  2266                           ;!       _EEPROM_read
  2267                           ;!         _EEPROM_ReadByte
  2268                           ;!       ___lldiv
  2269                           ;!       ___wmul
  2270                           ;!     _putLCD
  2271                           ;!       _delay
  2272                           ;!     _writeLCD
  2273                           ;!       _gotoxy
  2274                           ;!         _cmdLCD
  2275                           ;!           _delay
  2276                           ;!       _putLCD
  2277                           ;!         _delay
  2278                           ;!   _adcLer
  2279                           ;!     _delay
  2280                           ;!   _cmdLCD
  2281                           ;!     _delay
  2282                           ;!   _delay
  2283                           ;!   _erasertemp
  2284                           ;!     _writeLCD
  2285                           ;!       _gotoxy
  2286                           ;!         _cmdLCD
  2287                           ;!           _delay
  2288                           ;!       _putLCD
  2289                           ;!         _delay
  2290                           ;!   _initLCD
  2291                           ;!     _cmdLCD
  2292                           ;!       _delay
  2293                           ;!     _delay
  2294                           ;!   _putLCD
  2295                           ;!     _delay
  2296                           ;!   _resetemp
  2297                           ;!     _EEPROM_write
  2298                           ;!       _EEPROM_WriteByte
  2299                           ;!         _delay
  2300                           ;!   _salvatemp
  2301                           ;!     _EEPROM_read
  2302                           ;!       _EEPROM_ReadByte
  2303                           ;!     _EEPROM_write
  2304                           ;!       _EEPROM_WriteByte
  2305                           ;!         _delay
  2306                           ;!   _showtemp
  2307                           ;!     _writeLCD
  2308                           ;!       _gotoxy
  2309                           ;!         _cmdLCD
  2310                           ;!           _delay
  2311                           ;!       _putLCD
  2312                           ;!         _delay
  2313                           ;!   _tecladoIniciar
  2314                           ;!   _tecladoLer
  2315                           ;!   _tempatt
  2316                           ;!     ___awdiv
  2317                           ;!     ___awmod
  2318                           ;!     _temperaturaLer
  2319                           ;!       ___flmul
  2320                           ;!         __Umul8_16
  2321                           ;!         ___xxtofl (ARG)
  2322                           ;!       ___fltol
  2323                           ;!         ___flmul (ARG)
  2324                           ;!           __Umul8_16
  2325                           ;!           ___xxtofl (ARG)
  2326                           ;!         ___xxtofl (ARG)
  2327                           ;!       ___xxtofl
  2328                           ;!       _adcLer
  2329                           ;!         _delay
  2330                           ;!     _writeLCD
  2331                           ;!       _gotoxy
  2332                           ;!         _cmdLCD
  2333                           ;!           _delay
  2334                           ;!       _putLCD
  2335                           ;!         _delay
  2336                           ;!   _temperaturaInicializar
  2337                           ;!     _delay
  2338                           ;!   _temperaturaLer
  2339                           ;!     ___flmul
  2340                           ;!       __Umul8_16
  2341                           ;!       ___xxtofl (ARG)
  2342                           ;!     ___fltol
  2343                           ;!       ___flmul (ARG)
  2344                           ;!         __Umul8_16
  2345                           ;!         ___xxtofl (ARG)
  2346                           ;!       ___xxtofl (ARG)
  2347                           ;!     ___xxtofl
  2348                           ;!     _adcLer
  2349                           ;!       _delay
  2350                           ;!   _tmron
  2351                           ;!
  2352                           ;! _myISR (ROOT)
  2353                           ;!   i1_salvatemp
  2354                           ;!     i1_EEPROM_read
  2355                           ;!       i1_EEPROM_ReadByte
  2356                           ;!     i1_EEPROM_write
  2357                           ;!       i1_EEPROM_WriteByte
  2358                           ;!         i1_delay
  2359                           ;!   i1_temperaturaLer
  2360                           ;!     i1___flmul
  2361                           ;!       i1__Umul8_16
  2362                           ;!       i1___xxtofl (ARG)
  2363                           ;!     i1___fltol
  2364                           ;!       i1___flmul (ARG)
  2365                           ;!         i1__Umul8_16
  2366                           ;!         i1___xxtofl (ARG)
  2367                           ;!       i1___xxtofl (ARG)
  2368                           ;!     i1___xxtofl
  2369                           ;!     i1_adcLer
  2370                           ;!       i1_delay
  2371                           ;!
  2372                           
  2373                           ;! Address spaces:
  2374                           
  2375                           ;!Name               Size   Autos  Total    Cost      Usage
  2376                           ;!BANK3               60      0       0       9        0.0%
  2377                           ;!BITBANK3            60      0       0       8        0.0%
  2378                           ;!SFR3                 0      0       0       4        0.0%
  2379                           ;!BITSFR3              0      0       0       4        0.0%
  2380                           ;!BANK2               60      0       0      11        0.0%
  2381                           ;!BITBANK2            60      0       0      10        0.0%
  2382                           ;!SFR2                 0      0       0       5        0.0%
  2383                           ;!BITSFR2              0      0       0       5        0.0%
  2384                           ;!BANK1               50     41      48       7       90.0%
  2385                           ;!BITBANK1            50      0       0       6        0.0%
  2386                           ;!SFR1                 0      0       0       2        0.0%
  2387                           ;!BITSFR1              0      0       0       2        0.0%
  2388                           ;!BANK0               50     2C      30       5       60.0%
  2389                           ;!BITBANK0            50      0       0       4        0.0%
  2390                           ;!SFR0                 0      0       0       1        0.0%
  2391                           ;!BITSFR0              0      0       0       1        0.0%
  2392                           ;!COMMON               E      E       E       1      100.0%
  2393                           ;!BITCOMMON            E      0       0       0        0.0%
  2394                           ;!CODE                 0      0       0       0        0.0%
  2395                           ;!DATA                 0      0      86      12        0.0%
  2396                           ;!ABS                  0      0      86       3        0.0%
  2397                           ;!NULL                 0      0       0       0        0.0%
  2398                           ;!STACK                0      0       0       2        0.0%
  2399                           ;!EEDATA             100      0       0       0        0.0%
  2400                           
  2401                           	global	_main
  2402                           
  2403 ;; *************** function _main *****************
  2404 ;; Defined at:
  2405 ;;		line 32 in file "main.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;		None
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  nr              1   64[BANK1 ] unsigned char 
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      void 
  2412 ;; Registers used:
  2413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2414 ;; Tracked objects:
  2415 ;;		On entry : B00/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2419 ;;      Params:         0       0       0       0       0
  2420 ;;      Locals:         0       0       1       0       0
  2421 ;;      Temps:          0       0       2       0       0
  2422 ;;      Totals:         0       0       3       0       0
  2423 ;;Total ram usage:        3 bytes
  2424 ;; Hardware stack levels required when called:   10
  2425 ;; This function calls:
  2426 ;;		_SplashScreen0
  2427 ;;		_SplashScreen1
  2428 ;;		_Telaprincipal
  2429 ;;		_TempMed
  2430 ;;		_adcLer
  2431 ;;		_cmdLCD
  2432 ;;		_delay
  2433 ;;		_erasertemp
  2434 ;;		_initLCD
  2435 ;;		_putLCD
  2436 ;;		_resetemp
  2437 ;;		_salvatemp
  2438 ;;		_showtemp
  2439 ;;		_tecladoIniciar
  2440 ;;		_tecladoLer
  2441 ;;		_tempatt
  2442 ;;		_temperaturaInicializar
  2443 ;;		_temperaturaLer
  2444 ;;		_tmron
  2445 ;; This function is called by:
  2446 ;;		Startup code after reset
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2450                           	file	"main.c"
  2451                           	line	32
  2452                           global __pmaintext
  2453                           __pmaintext:	;psect for function _main
  2454  0713                     psect	maintext
  2455                           	file	"main.c"
  2456                           	line	32
  2457                           	global	__size_of_main
  2458                           	__size_of_main	equ	__end_of_main-_main
  2459  00E9                     	
  2460                           _main:	
  2461  0713                     ;incstack = 0
  2462 ;; hardware stack exceeded
  2463                           	opt	stack 0
  2464                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2465                           	line	34
  2466                           	
  2467                           l3115:	
  2468  0713                     ;main.c: 34:     TRISC=0x00;
  2469                           	bsf	status, 5	;RP0=1, select bank1
  2470  0713  1683               	bcf	status, 6	;RP1=0, select bank1
  2471  0714  1303               	clrf	(135)^080h	;volatile
  2472  0715  0187               	line	35
  2473                           ;main.c: 35:     PORTC=0;
  2474                           	bcf	status, 5	;RP0=0, select bank0
  2475  0716  1283               	bcf	status, 6	;RP1=0, select bank0
  2476  0717  1303               	clrf	(7)	;volatile
  2477  0718  0187               	line	38
  2478                           	
  2479                           l3117:	
  2480  0719                     ;main.c: 36:     char nr;;main.c: 38:     initLCD();
  2481                           	fcall	_initLCD
  2482  0719  160A  118A  26A9  120A  118A  	line	39
  2483                           	
  2484                           l3119:	
  2485  071E                     ;main.c: 39:     tecladoIniciar();
  2486                           	fcall	_tecladoIniciar
  2487  071E  160A  118A  2357  120A  118A  	line	40
  2488                           	
  2489                           l3121:	
  2490  0723                     ;main.c: 40:     temperaturaInicializar();
  2491                           	fcall	_temperaturaInicializar
  2492  0723  160A  118A  24C7  120A  118A  	line	43
  2493                           	
  2494                           l3123:	
  2495  0728                     ;main.c: 43:     SplashScreen0();
  2496                           	fcall	_SplashScreen0
  2497  0728  160A  118A  2431  120A  118A  	line	44
  2498                           	
  2499                           l3125:	
  2500  072D                     ;main.c: 44:     delay(100);
  2501                           	movlw	064h
  2502  072D  3064               	bsf	status, 5	;RP0=1, select bank1
  2503  072E  1683               	bcf	status, 6	;RP1=0, select bank1
  2504  072F  1303               	movwf	(delay@t)^080h
  2505  0730  00A0               	movlw	0
  2506  0731  3000               	movwf	((delay@t)^080h)+1
  2507  0732  00A1               	fcall	_delay
  2508  0733  160A  118A  2488  120A  118A  	line	45
  2509                           	
  2510                           l3127:	
  2511  0738                     ;main.c: 45:     cmdLCD(0x01);
  2512                           	movlw	low(01h)
  2513  0738  3001               	fcall	_cmdLCD
  2514  0739  120A  158A  22AC  120A  118A  	line	46
  2515                           	
  2516                           l3129:	
  2517  073E                     ;main.c: 46:     SplashScreen1();
  2518                           	fcall	_SplashScreen1
  2519  073E  120A  158A  2099  120A  118A  	line	47
  2520                           	
  2521                           l3131:	
  2522  0743                     ;main.c: 47:     delay(100);
  2523                           	movlw	064h
  2524  0743  3064               	bsf	status, 5	;RP0=1, select bank1
  2525  0744  1683               	bcf	status, 6	;RP1=0, select bank1
  2526  0745  1303               	movwf	(delay@t)^080h
  2527  0746  00A0               	movlw	0
  2528  0747  3000               	movwf	((delay@t)^080h)+1
  2529  0748  00A1               	fcall	_delay
  2530  0749  160A  118A  2488  120A  118A  	line	49
  2531                           	
  2532                           l3133:	
  2533  074E                     ;main.c: 49:     tempatt();
  2534                           	fcall	_tempatt
  2535  074E  160A  118A  27B9  120A  118A  	line	50
  2536                           	
  2537                           l3135:	
  2538  0753                     ;main.c: 50:     cmdLCD(0x01);
  2539                           	movlw	low(01h)
  2540  0753  3001               	fcall	_cmdLCD
  2541  0754  120A  158A  22AC  120A  118A  	line	52
  2542                           	
  2543                           l3137:	
  2544  0759                     ;main.c: 52:     tmron();
  2545                           	fcall	_tmron
  2546  0759  160A  118A  232F  120A  118A  	line	53
  2547                           	
  2548                           l3139:	
  2549  075E                     ;main.c: 53:     Telaprincipal();
  2550                           	fcall	_Telaprincipal
  2551  075E  160A  118A  244D  120A  118A  	goto	l3141
  2552  0763  2F64               	line	55
  2553                           ;main.c: 55:    while ( 1 )
  2554                           	
  2555                           l229:	
  2556  0764                     	line	58
  2557                           	
  2558                           l3141:	
  2559  0764                     ;main.c: 56:     {;main.c: 58:        nr = tecladoLer();
  2560                           	fcall	_tecladoLer
  2561  0764  120A  158A  268B  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  2562  0769  1683               	bcf	status, 6	;RP1=0, select bank1
  2563  076A  1303               	movwf	(??_main+0)^080h+0
  2564  076B  00DE               	movf	(??_main+0)^080h+0,w
  2565  076C  085E               	movwf	(main@nr)^080h
  2566  076D  00E0               	line	60
  2567                           	
  2568                           l3143:	
  2569  076E                     ;main.c: 60:        if (tim == 1)
  2570                           		decf	((_tim)^080h),w
  2571  076E  0367               	btfss	status,2
  2572  076F  1D03               	goto	u4221
  2573  0770  2F72               	goto	u4220
  2574  0771  2F73               u4221:
  2575  0772                     	goto	l3147
  2576  0772  2F79               u4220:
  2577  0773                     	line	62
  2578                           	
  2579                           l3145:	
  2580  0773                     ;main.c: 61:        {;main.c: 62:            tempatt();
  2581                           	fcall	_tempatt
  2582  0773  160A  118A  27B9  120A  118A  	goto	l3147
  2583  0778  2F79               	line	63
  2584                           ;main.c: 63:        }
  2585                           	
  2586                           l230:	
  2587  0779                     	line	65
  2588                           	
  2589                           l3147:	
  2590  0779                     ;main.c: 65:        if(nr != 0)
  2591                           	bsf	status, 5	;RP0=1, select bank1
  2592  0779  1683               	bcf	status, 6	;RP1=0, select bank1
  2593  077A  1303               	movf	((main@nr)^080h),w
  2594  077B  0860               	btfsc	status,2
  2595  077C  1903               	goto	u4231
  2596  077D  2F7F               	goto	u4230
  2597  077E  2F80               u4231:
  2598  077F                     	goto	l3183
  2599  077F  2FDF               u4230:
  2600  0780                     	line	67
  2601                           	
  2602                           l3149:	
  2603  0780                     ;main.c: 66:        {;main.c: 67:            putLCD(nr);
  2604                           	movf	(main@nr)^080h,w
  2605  0780  0860               	fcall	_putLCD
  2606  0781  120A  158A  20B5  120A  118A  	goto	l3183
  2607  0786  2FDF               	line	68
  2608                           ;main.c: 68:        }
  2609                           	
  2610                           l231:	
  2611  0787                     	line	71
  2612                           ;main.c: 71:        switch (nr)
  2613                           	goto	l3183
  2614  0787  2FDF               	line	74
  2615                           ;main.c: 72:        {;main.c: 74:            case 'A':
  2616                           	
  2617                           l233:	
  2618  0788                     	line	75
  2619                           	
  2620                           l3151:	
  2621  0788                     ;main.c: 75:                 cmdLCD(0x01);
  2622                           	movlw	low(01h)
  2623  0788  3001               	fcall	_cmdLCD
  2624  0789  120A  158A  22AC  120A  118A  	line	76
  2625                           ;main.c: 76:                 adcLer();
  2626                           	fcall	_adcLer
  2627  078E  160A  118A  25D6  120A  118A  	line	77
  2628                           	
  2629                           l3153:	
  2630  0793                     ;main.c: 77:                 temperaturaLer();
  2631                           	fcall	_temperaturaLer
  2632  0793  160A  118A  2773  120A  118A  	line	78
  2633                           	
  2634                           l3155:	
  2635  0798                     ;main.c: 78:                 Telaprincipal();
  2636                           	fcall	_Telaprincipal
  2637  0798  160A  118A  244D  120A  118A  	line	79
  2638                           	
  2639                           l3157:	
  2640  079D                     ;main.c: 79:                 tim = 1;
  2641                           	bsf	status, 5	;RP0=1, select bank1
  2642  079D  1683               	bcf	status, 6	;RP1=0, select bank1
  2643  079E  1303               	clrf	(_tim)^080h
  2644  079F  01E7               	incf	(_tim)^080h,f
  2645  07A0  0AE7               	line	80
  2646                           ;main.c: 80:                 break;
  2647                           	goto	l3141
  2648  07A1  2F64               	line	82
  2649                           ;main.c: 82:            case 'B':
  2650                           	
  2651                           l235:	
  2652  07A2                     	line	83
  2653                           	
  2654                           l3159:	
  2655  07A2                     ;main.c: 83:                 cmdLCD(0x01);
  2656                           	movlw	low(01h)
  2657  07A2  3001               	fcall	_cmdLCD
  2658  07A3  120A  158A  22AC  120A  118A  	line	84
  2659                           	
  2660                           l3161:	
  2661  07A8                     ;main.c: 84:                 TempMed();
  2662                           	fcall	_TempMed
  2663  07A8  120A  158A  2164  120A  118A  	line	85
  2664                           	
  2665                           l3163:	
  2666  07AD                     ;main.c: 85:                 tim = 0;
  2667                           	bsf	status, 5	;RP0=1, select bank1
  2668  07AD  1683               	bcf	status, 6	;RP1=0, select bank1
  2669  07AE  1303               	clrf	(_tim)^080h
  2670  07AF  01E7               	line	86
  2671                           ;main.c: 86:                 break;
  2672                           	goto	l3141
  2673  07B0  2F64               	line	88
  2674                           ;main.c: 88:            case '*':
  2675                           	
  2676                           l236:	
  2677  07B1                     	line	89
  2678                           	
  2679                           l3165:	
  2680  07B1                     ;main.c: 89:                 cmdLCD(0x01);
  2681                           	movlw	low(01h)
  2682  07B1  3001               	fcall	_cmdLCD
  2683  07B2  120A  158A  22AC  120A  118A  	line	90
  2684                           	
  2685                           l3167:	
  2686  07B7                     ;main.c: 90:                 salvatemp(temperaturaLer());
  2687                           	fcall	_temperaturaLer
  2688  07B7  160A  118A  2773  120A  118A  	fcall	_salvatemp
  2689  07BC  160A  118A  24A7  120A  118A  	line	91
  2690                           	
  2691                           l3169:	
  2692  07C1                     ;main.c: 91:                 showtemp ();
  2693                           	fcall	_showtemp
  2694  07C1  160A  118A  2349  120A  118A  	line	92
  2695                           	
  2696                           l3171:	
  2697  07C6                     ;main.c: 92:                 tim = 0;
  2698                           	bsf	status, 5	;RP0=1, select bank1
  2699  07C6  1683               	bcf	status, 6	;RP1=0, select bank1
  2700  07C7  1303               	clrf	(_tim)^080h
  2701  07C8  01E7               	line	93
  2702                           ;main.c: 93:                 break;
  2703                           	goto	l3141
  2704  07C9  2F64               	line	95
  2705                           ;main.c: 95:             case '#':
  2706                           	
  2707                           l237:	
  2708  07CA                     	line	96
  2709                           	
  2710                           l3173:	
  2711  07CA                     ;main.c: 96:                 cmdLCD(0x01);
  2712                           	movlw	low(01h)
  2713  07CA  3001               	fcall	_cmdLCD
  2714  07CB  120A  158A  22AC  120A  118A  	line	97
  2715                           	
  2716                           l3175:	
  2717  07D0                     ;main.c: 97:                 erasertemp();
  2718                           	fcall	_erasertemp
  2719  07D0  160A  118A  233B  120A  118A  	line	98
  2720                           	
  2721                           l3177:	
  2722  07D5                     ;main.c: 98:                 resetemp();
  2723                           	fcall	_resetemp
  2724  07D5  160A  118A  250A  120A  118A  	line	99
  2725                           	
  2726                           l3179:	
  2727  07DA                     ;main.c: 99:                 tim = 0;
  2728                           	bsf	status, 5	;RP0=1, select bank1
  2729  07DA  1683               	bcf	status, 6	;RP1=0, select bank1
  2730  07DB  1303               	clrf	(_tim)^080h
  2731  07DC  01E7               	line	100
  2732                           ;main.c: 100:                 break;
  2733                           	goto	l3141
  2734  07DD  2F64               	line	102
  2735                           	
  2736                           l3181:	
  2737  07DE                     ;main.c: 102:          }
  2738                           	goto	l3141
  2739  07DE  2F64               	
  2740                           l232:	
  2741  07DF                     	
  2742                           l3183:	
  2743  07DF                     	bsf	status, 5	;RP0=1, select bank1
  2744  07DF  1683               	bcf	status, 6	;RP1=0, select bank1
  2745  07E0  1303               	movf	(main@nr)^080h,w
  2746  07E1  0860               	movwf	(??_main+0)^080h+0
  2747  07E2  00DE               	clrf	(??_main+0)^080h+0+1
  2748  07E3  01DF               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2749                           ; Switch size 1, requested type "space"
  2750                           ; Number of cases is 1, Range of values is 0 to 0
  2751                           ; switch strategies available:
  2752                           ; Name         Instructions Cycles
  2753                           ; simple_byte            4     3 (average)
  2754                           ; direct_byte           11     8 (fixed)
  2755                           ; jumptable            260     6 (fixed)
  2756                           ;	Chosen strategy is simple_byte
  2757                           
  2758                           	movf 1+(??_main+0)^080h+0,w
  2759  07E4  085F               	opt asmopt_push
  2760                           	opt asmopt_off
  2761                           	xorlw	0^0	; case 0
  2762  07E5  3A00               	skipnz
  2763  07E6  1903               	goto	l3269
  2764  07E7  2FE9               	goto	l3141
  2765  07E8  2F64               	opt asmopt_pop
  2766                           	
  2767                           l3269:	
  2768  07E9                     ; Switch size 1, requested type "space"
  2769                           ; Number of cases is 4, Range of values is 35 to 66
  2770                           ; switch strategies available:
  2771                           ; Name         Instructions Cycles
  2772                           ; simple_byte           13     7 (average)
  2773                           ; direct_byte          107    11 (fixed)
  2774                           ; jumptable            263     9 (fixed)
  2775                           ;	Chosen strategy is simple_byte
  2776                           
  2777                           	movf 0+(??_main+0)^080h+0,w
  2778  07E9  085E               	opt asmopt_push
  2779                           	opt asmopt_off
  2780                           	xorlw	35^0	; case 35
  2781  07EA  3A23               	skipnz
  2782  07EB  1903               	goto	l3173
  2783  07EC  2FCA               	xorlw	42^35	; case 42
  2784  07ED  3A09               	skipnz
  2785  07EE  1903               	goto	l3165
  2786  07EF  2FB1               	xorlw	65^42	; case 65
  2787  07F0  3A6B               	skipnz
  2788  07F1  1903               	goto	l3151
  2789  07F2  2F88               	xorlw	66^65	; case 66
  2790  07F3  3A03               	skipnz
  2791  07F4  1903               	goto	l3159
  2792  07F5  2FA2               	goto	l3141
  2793  07F6  2F64               	opt asmopt_pop
  2794                           
  2795                           	
  2796                           l234:	
  2797  07F7                     	goto	l3141
  2798  07F7  2F64               	line	106
  2799                           ;main.c: 106:      }
  2800                           	
  2801                           l238:	
  2802  07F8                     	goto	l3141
  2803  07F8  2F64               	
  2804                           l239:	
  2805  07F9                     	line	107
  2806                           	
  2807                           l240:	
  2808  07F9                     	global	start
  2809                           	ljmp	start
  2810  07F9  120A  118A  2810   	opt stack 0
  2811                           GLOBAL	__end_of_main
  2812                           	__end_of_main:
  2813  07FC                     	signat	_main,89
  2814                           	global	_tmron
  2815                           
  2816 ;; *************** function _tmron *****************
  2817 ;; Defined at:
  2818 ;;		line 140 in file "recept.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;		None
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;		None
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      void 
  2825 ;; Registers used:
  2826 ;;		wreg, status,2
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2832 ;;      Params:         0       0       0       0       0
  2833 ;;      Locals:         0       0       0       0       0
  2834 ;;      Temps:          0       0       0       0       0
  2835 ;;      Totals:         0       0       0       0       0
  2836 ;;Total ram usage:        0 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    5
  2839 ;; This function calls:
  2840 ;;		Nothing
  2841 ;; This function is called by:
  2842 ;;		_main
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2846                           	file	"recept.c"
  2847                           	line	140
  2848                           global __ptext1
  2849                           __ptext1:	;psect for function _tmron
  2850  132F                     psect	text1
  2851                           	file	"recept.c"
  2852                           	line	140
  2853                           	global	__size_of_tmron
  2854                           	__size_of_tmron	equ	__end_of_tmron-_tmron
  2855  000C                     	
  2856                           _tmron:	
  2857  132F                     ;incstack = 0
  2858                           	opt	stack 2
  2859                           ; Regs used in _tmron: [wreg+status,2]
  2860                           	line	142
  2861                           	
  2862                           l3067:	
  2863  132F                     ;recept.c: 142:     TMR1IE=1;
  2864                           	bsf	status, 5	;RP0=1, select bank1
  2865  132F  1683               	bcf	status, 6	;RP1=0, select bank1
  2866  1330  1303               	bsf	(1120/8)^080h,(1120)&7	;volatile
  2867  1331  140C               	line	143
  2868                           ;recept.c: 143:     GIE=1;
  2869                           	bsf	(95/8),(95)&7	;volatile
  2870  1332  178B               	line	144
  2871                           ;recept.c: 144:     PEIE=1;
  2872                           	bsf	(94/8),(94)&7	;volatile
  2873  1333  170B               	line	145
  2874                           	
  2875                           l3069:	
  2876  1334                     ;recept.c: 145:     TMR1L = TMR1H = 0x00;
  2877                           	bcf	status, 5	;RP0=0, select bank0
  2878  1334  1283               	bcf	status, 6	;RP1=0, select bank0
  2879  1335  1303               	clrf	(15)	;volatile
  2880  1336  018F               	clrf	(14)	;volatile
  2881  1337  018E               	line	146
  2882                           	
  2883                           l3071:	
  2884  1338                     ;recept.c: 146:     T1CON = 0b00110001;
  2885                           	movlw	low(031h)
  2886  1338  3031               	movwf	(16)	;volatile
  2887  1339  0090               	line	147
  2888                           	
  2889                           l324:	
  2890  133A                     	return
  2891  133A  0008               	opt stack 0
  2892                           GLOBAL	__end_of_tmron
  2893                           	__end_of_tmron:
  2894  133B                     	signat	_tmron,89
  2895                           	global	_temperaturaInicializar
  2896                           
  2897 ;; *************** function _temperaturaInicializar *****************
  2898 ;; Defined at:
  2899 ;;		line 5 in file "leitorLM35_v07.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;		None
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;		None
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0, pclath, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2913 ;;      Params:         0       0       0       0       0
  2914 ;;      Locals:         0       0       0       0       0
  2915 ;;      Temps:          0       0       0       0       0
  2916 ;;      Totals:         0       0       0       0       0
  2917 ;;Total ram usage:        0 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:    6
  2920 ;; This function calls:
  2921 ;;		_delay
  2922 ;; This function is called by:
  2923 ;;		_main
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2927                           	file	"leitorLM35_v07.c"
  2928                           	line	5
  2929                           global __ptext2
  2930                           __ptext2:	;psect for function _temperaturaInicializar
  2931  14C7                     psect	text2
  2932                           	file	"leitorLM35_v07.c"
  2933                           	line	5
  2934                           	global	__size_of_temperaturaInicializar
  2935                           	__size_of_temperaturaInicializar	equ	__end_of_temperaturaInicializar-_temperaturaInicia
                                 lizar
  2936  0021                     	
  2937                           _temperaturaInicializar:	
  2938  14C7                     ;incstack = 0
  2939                           	opt	stack 1
  2940                           ; Regs used in _temperaturaInicializar: [wreg+status,2+status,0+pclath+cstack]
  2941                           	line	7
  2942                           	
  2943                           l2953:	
  2944  14C7                     ;leitorLM35_v07.c: 7:     TRISA |= 0b00000001;
  2945                           	bsf	status, 5	;RP0=1, select bank1
  2946  14C7  1683               	bcf	status, 6	;RP1=0, select bank1
  2947  14C8  1303               	bsf	(133)^080h+(0/8),(0)&7	;volatile
  2948  14C9  1405               	line	8
  2949                           ;leitorLM35_v07.c: 8:     ADIF = 0;
  2950                           	bcf	status, 5	;RP0=0, select bank0
  2951  14CA  1283               	bcf	status, 6	;RP1=0, select bank0
  2952  14CB  1303               	bcf	(102/8),(102)&7	;volatile
  2953  14CC  130C               	line	9
  2954                           ;leitorLM35_v07.c: 9:     ADIE = 0;
  2955                           	bsf	status, 5	;RP0=1, select bank1
  2956  14CD  1683               	bcf	status, 6	;RP1=0, select bank1
  2957  14CE  1303               	bcf	(1126/8)^080h,(1126)&7	;volatile
  2958  14CF  130C               	line	12
  2959                           	
  2960                           l2955:	
  2961  14D0                     ;leitorLM35_v07.c: 12:     ADCON0 = 0b10000001;
  2962                           	movlw	low(081h)
  2963  14D0  3081               	bcf	status, 5	;RP0=0, select bank0
  2964  14D1  1283               	bcf	status, 6	;RP1=0, select bank0
  2965  14D2  1303               	movwf	(31)	;volatile
  2966  14D3  009F               	line	13
  2967                           ;leitorLM35_v07.c: 13:     ADCON1 = 0b10000000;
  2968                           	movlw	low(080h)
  2969  14D4  3080               	bsf	status, 5	;RP0=1, select bank1
  2970  14D5  1683               	bcf	status, 6	;RP1=0, select bank1
  2971  14D6  1303               	movwf	(159)^080h	;volatile
  2972  14D7  009F               	line	14
  2973                           ;leitorLM35_v07.c: 14:     ANSEL = 0b00000001;
  2974                           	movlw	low(01h)
  2975  14D8  3001               	bsf	status, 5	;RP0=1, select bank3
  2976  14D9  1683               	bsf	status, 6	;RP1=1, select bank3
  2977  14DA  1703               	movwf	(392)^0180h	;volatile
  2978  14DB  0088               	line	19
  2979                           	
  2980                           l2957:	
  2981  14DC                     ;leitorLM35_v07.c: 19:     delay(1);
  2982                           	movlw	01h
  2983  14DC  3001               	bsf	status, 5	;RP0=1, select bank1
  2984  14DD  1683               	bcf	status, 6	;RP1=0, select bank1
  2985  14DE  1303               	movwf	(delay@t)^080h
  2986  14DF  00A0               	movlw	0
  2987  14E0  3000               	movwf	((delay@t)^080h)+1
  2988  14E1  00A1               	fcall	_delay
  2989  14E2  160A  118A  2488  160A  118A  	line	20
  2990                           	
  2991                           l106:	
  2992  14E7                     	return
  2993  14E7  0008               	opt stack 0
  2994                           GLOBAL	__end_of_temperaturaInicializar
  2995                           	__end_of_temperaturaInicializar:
  2996  14E8                     	signat	_temperaturaInicializar,89
  2997                           	global	_tempatt
  2998                           
  2999 ;; *************** function _tempatt *****************
  3000 ;; Defined at:
  3001 ;;		line 123 in file "lcd.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;		None
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  Tp              3   57[BANK1 ] unsigned char [3]
  3006 ;;  temp            2   60[BANK1 ] int 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3016 ;;      Params:         0       0       0       0       0
  3017 ;;      Locals:         0       0       5       0       0
  3018 ;;      Temps:          0       0       2       0       0
  3019 ;;      Totals:         0       0       7       0       0
  3020 ;;Total ram usage:        7 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; Hardware stack levels required when called:    9
  3023 ;; This function calls:
  3024 ;;		___awdiv
  3025 ;;		___awmod
  3026 ;;		_temperaturaLer
  3027 ;;		_writeLCD
  3028 ;; This function is called by:
  3029 ;;		_main
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3033                           	file	"lcd.c"
  3034                           	line	123
  3035                           global __ptext3
  3036                           __ptext3:	;psect for function _tempatt
  3037  17B9                     psect	text3
  3038                           	file	"lcd.c"
  3039                           	line	123
  3040                           	global	__size_of_tempatt
  3041                           	__size_of_tempatt	equ	__end_of_tempatt-_tempatt
  3042  0047                     	
  3043                           _tempatt:	
  3044  17B9                     ;incstack = 0
  3045 ;; hardware stack exceeded
  3046                           	opt	stack 0
  3047                           ; Regs used in _tempatt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3048                           	line	125
  3049                           	
  3050                           l2923:	
  3051  17B9                     ;lcd.c: 125:     int temp = temperaturaLer() ;
  3052                           	fcall	_temperaturaLer
  3053  17B9  160A  118A  2773  160A  118A  	bsf	status, 5	;RP0=1, select bank1
  3054  17BE  1683               	bcf	status, 6	;RP1=0, select bank1
  3055  17BF  1303               	movwf	(??_tempatt+0)^080h+0
  3056  17C0  00D7               	clrf	(??_tempatt+0)^080h+0+1
  3057  17C1  01D8               	movf	0+(??_tempatt+0)^080h+0,w
  3058  17C2  0857               	movwf	(tempatt@temp)^080h
  3059  17C3  00DC               	movf	1+(??_tempatt+0)^080h+0,w
  3060  17C4  0858               	movwf	(tempatt@temp+1)^080h
  3061  17C5  00DD               	line	126
  3062                           	
  3063                           l2925:	
  3064  17C6                     ;lcd.c: 126:     char Tp[] = {"00"};
  3065                           	movf	(tempatt@F1405)^080h,w
  3066  17C6  0864               	movwf	(tempatt@Tp)^080h
  3067  17C7  00D9               	movf	(tempatt@F1405+1)^080h,w
  3068  17C8  0865               	movwf	(tempatt@Tp+1)^080h
  3069  17C9  00DA               	movf	(tempatt@F1405+2)^080h,w
  3070  17CA  0866               	movwf	(tempatt@Tp+2)^080h
  3071  17CB  00DB               	line	127
  3072                           	
  3073                           l2927:	
  3074  17CC                     ;lcd.c: 127:     Tp[0] =(temp/10)+0x30;
  3075                           	movlw	0Ah
  3076  17CC  300A               	movwf	(___awdiv@divisor)^080h
  3077  17CD  00A0               	movlw	0
  3078  17CE  3000               	movwf	((___awdiv@divisor)^080h)+1
  3079  17CF  00A1               	movf	(tempatt@temp+1)^080h,w
  3080  17D0  085D               	movwf	(___awdiv@dividend+1)^080h
  3081  17D1  00A3               	movf	(tempatt@temp)^080h,w
  3082  17D2  085C               	movwf	(___awdiv@dividend)^080h
  3083  17D3  00A2               	fcall	___awdiv
  3084  17D4  120A  158A  2239  160A  118A  	bsf	status, 5	;RP0=1, select bank1
  3085  17D9  1683               	bcf	status, 6	;RP1=0, select bank1
  3086  17DA  1303               	movf	(0+(?___awdiv))^080h,w
  3087  17DB  0820               	addlw	030h
  3088  17DC  3E30               	movwf	(??_tempatt+0)^080h+0
  3089  17DD  00D7               	movf	(??_tempatt+0)^080h+0,w
  3090  17DE  0857               	movwf	(tempatt@Tp)^080h
  3091  17DF  00D9               	line	128
  3092                           	
  3093                           l2929:	
  3094  17E0                     ;lcd.c: 128:     Tp[1] =(temp%10)+0x30;
  3095                           	movlw	0Ah
  3096  17E0  300A               	movwf	(___awmod@divisor)^080h
  3097  17E1  00A0               	movlw	0
  3098  17E2  3000               	movwf	((___awmod@divisor)^080h)+1
  3099  17E3  00A1               	movf	(tempatt@temp+1)^080h,w
  3100  17E4  085D               	movwf	(___awmod@dividend+1)^080h
  3101  17E5  00A3               	movf	(tempatt@temp)^080h,w
  3102  17E6  085C               	movwf	(___awmod@dividend)^080h
  3103  17E7  00A2               	fcall	___awmod
  3104  17E8  120A  158A  20FF  160A  118A  	bsf	status, 5	;RP0=1, select bank1
  3105  17ED  1683               	bcf	status, 6	;RP1=0, select bank1
  3106  17EE  1303               	movf	(0+(?___awmod))^080h,w
  3107  17EF  0820               	addlw	030h
  3108  17F0  3E30               	movwf	(??_tempatt+0)^080h+0
  3109  17F1  00D7               	movf	(??_tempatt+0)^080h+0,w
  3110  17F2  0857               	movwf	0+(tempatt@Tp)^080h+01h
  3111  17F3  00DA               	line	129
  3112                           	
  3113                           l2931:	
  3114  17F4                     ;lcd.c: 129:     writeLCD(12,0,Tp);
  3115                           	clrf	(writeLCD@y)^080h
  3116  17F4  01AB               	movlw	(low(tempatt@Tp|((0x0)<<8))&0ffh)
  3117  17F5  30D9               	movwf	(writeLCD@ptr)^080h
  3118  17F6  00AC               	movlw	(0x0)
  3119  17F7  3000               	movwf	(writeLCD@ptr+1)^080h
  3120  17F8  00AD               	movlw	low(0Ch)
  3121  17F9  300C               	fcall	_writeLCD
  3122  17FA  160A  118A  26EA  160A  118A  	line	130
  3123                           	
  3124                           l72:	
  3125  17FF                     	return
  3126  17FF  0008               	opt stack 0
  3127                           GLOBAL	__end_of_tempatt
  3128                           	__end_of_tempatt:
  3129  1800                     	signat	_tempatt,89
  3130                           	global	_temperaturaLer
  3131                           
  3132 ;; *************** function _temperaturaLer *****************
  3133 ;; Defined at:
  3134 ;;		line 44 in file "leitorLM35_v07.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  temp01VlrTmp    2   53[BANK1 ] unsigned int 
  3139 ;;  temp01VlrInt    2   51[BANK1 ] unsigned int 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      unsigned char 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3149 ;;      Params:         0       0       0       0       0
  3150 ;;      Locals:         0       0       4       0       0
  3151 ;;      Temps:          0       0       0       0       0
  3152 ;;      Totals:         0       0       4       0       0
  3153 ;;Total ram usage:        4 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; Hardware stack levels required when called:    7
  3156 ;; This function calls:
  3157 ;;		___flmul
  3158 ;;		___fltol
  3159 ;;		___xxtofl
  3160 ;;		_adcLer
  3161 ;; This function is called by:
  3162 ;;		_tempatt
  3163 ;;		_main
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  3167                           	file	"leitorLM35_v07.c"
  3168                           	line	44
  3169                           global __ptext4
  3170                           __ptext4:	;psect for function _temperaturaLer
  3171  1773                     psect	text4
  3172                           	file	"leitorLM35_v07.c"
  3173                           	line	44
  3174                           	global	__size_of_temperaturaLer
  3175                           	__size_of_temperaturaLer	equ	__end_of_temperaturaLer-_temperaturaLer
  3176  0046                     	
  3177                           _temperaturaLer:	
  3178  1773                     ;incstack = 0
  3179                           	opt	stack 0
  3180                           ; Regs used in _temperaturaLer: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3181                           	line	48
  3182                           	
  3183                           l2537:	
  3184  1773                     ;leitorLM35_v07.c: 46:     unsigned int temp01VlrInt;;leitorLM35_v07.c: 47:     unsigned
                                  int temp01VlrTmp;;leitorLM35_v07.c: 48:     temp01VlrInt = adcLer();
  3185                           	fcall	_adcLer
  3186  1773  160A  118A  25D6  160A  118A  	bsf	status, 5	;RP0=1, select bank1
  3187  1778  1683               	bcf	status, 6	;RP1=0, select bank1
  3188  1779  1303               	movf	(1+(?_adcLer))^080h,w
  3189  177A  0825               	movwf	(temperaturaLer@temp01VlrInt+1)^080h
  3190  177B  00D4               	movf	(0+(?_adcLer))^080h,w
  3191  177C  0824               	movwf	(temperaturaLer@temp01VlrInt)^080h
  3192  177D  00D3               	line	49
  3193                           	
  3194                           l2539:	
  3195  177E                     ;leitorLM35_v07.c: 49:     temp01VlrTmp =(unsigned int) (temp01VlrInt * 0.48875);
  3196                           	movf	(temperaturaLer@temp01VlrInt)^080h,w
  3197  177E  0853               	movwf	(___xxtofl@val)^080h
  3198  177F  00A0               	movf	(temperaturaLer@temp01VlrInt+1)^080h,w
  3199  1780  0854               	movwf	((___xxtofl@val)^080h)+1
  3200  1781  00A1               	clrf	2+((___xxtofl@val)^080h)
  3201  1782  01A2               	clrf	3+((___xxtofl@val)^080h)
  3202  1783  01A3               	movlw	low(0)
  3203  1784  3000               	fcall	___xxtofl
  3204  1785  120A  158A  25C7  160A  118A  	bsf	status, 5	;RP0=1, select bank1
  3205  178A  1683               	bcf	status, 6	;RP1=0, select bank1
  3206  178B  1303               	movf	(3+(?___xxtofl))^080h,w
  3207  178C  0823               	movwf	(___flmul@a+3)^080h
  3208  178D  00B5               	movf	(2+(?___xxtofl))^080h,w
  3209  178E  0822               	movwf	(___flmul@a+2)^080h
  3210  178F  00B4               	movf	(1+(?___xxtofl))^080h,w
  3211  1790  0821               	movwf	(___flmul@a+1)^080h
  3212  1791  00B3               	movf	(0+(?___xxtofl))^080h,w
  3213  1792  0820               	movwf	(___flmul@a)^080h
  3214  1793  00B2               
  3215                           	movlw	0x3e
  3216  1794  303E               	movwf	(___flmul@b+3)^080h
  3217  1795  00B1               	movlw	0xfa
  3218  1796  30FA               	movwf	(___flmul@b+2)^080h
  3219  1797  00B0               	movlw	0x3d
  3220  1798  303D               	movwf	(___flmul@b+1)^080h
  3221  1799  00AF               	movlw	0x71
  3222  179A  3071               	movwf	(___flmul@b)^080h
  3223  179B  00AE               
  3224                           	fcall	___flmul
  3225  179C  120A  118A  2029  160A  118A  	bsf	status, 5	;RP0=1, select bank1
  3226  17A1  1683               	bcf	status, 6	;RP1=0, select bank1
  3227  17A2  1303               	movf	(3+(?___flmul))^080h,w
  3228  17A3  0831               	movwf	(___fltol@f1+3)^080h
  3229  17A4  00CB               	movf	(2+(?___flmul))^080h,w
  3230  17A5  0830               	movwf	(___fltol@f1+2)^080h
  3231  17A6  00CA               	movf	(1+(?___flmul))^080h,w
  3232  17A7  082F               	movwf	(___fltol@f1+1)^080h
  3233  17A8  00C9               	movf	(0+(?___flmul))^080h,w
  3234  17A9  082E               	movwf	(___fltol@f1)^080h
  3235  17AA  00C8               
  3236                           	fcall	___fltol
  3237  17AB  120A  158A  23CB  160A  118A  	bsf	status, 5	;RP0=1, select bank1
  3238  17B0  1683               	bcf	status, 6	;RP1=0, select bank1
  3239  17B1  1303               	movf	(1+(?___fltol))^080h,w
  3240  17B2  0849               	movwf	(temperaturaLer@temp01VlrTmp+1)^080h
  3241  17B3  00D6               	movf	(0+(?___fltol))^080h,w
  3242  17B4  0848               	movwf	(temperaturaLer@temp01VlrTmp)^080h
  3243  17B5  00D5               	line	50
  3244                           	
  3245                           l2541:	
  3246  17B6                     ;leitorLM35_v07.c: 50:     return temp01VlrTmp;
  3247                           	movf	(temperaturaLer@temp01VlrTmp)^080h,w
  3248  17B6  0855               	goto	l115
  3249  17B7  2FB8               	
  3250                           l2543:	
  3251  17B8                     	line	51
  3252                           	
  3253                           l115:	
  3254  17B8                     	return
  3255  17B8  0008               	opt stack 0
  3256                           GLOBAL	__end_of_temperaturaLer
  3257                           	__end_of_temperaturaLer:
  3258  17B9                     	signat	_temperaturaLer,89
  3259                           	global	_adcLer
  3260                           
  3261 ;; *************** function _adcLer *****************
  3262 ;; Defined at:
  3263 ;;		line 22 in file "leitorLM35_v07.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;		None
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  adc01Temp       2    6[BANK1 ] unsigned int 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  2    4[BANK1 ] unsigned int 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2, status,0, pclath, cstack
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3277 ;;      Params:         0       0       2       0       0
  3278 ;;      Locals:         0       0       2       0       0
  3279 ;;      Temps:          0       0       0       0       0
  3280 ;;      Totals:         0       0       4       0       0
  3281 ;;Total ram usage:        4 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:    6
  3284 ;; This function calls:
  3285 ;;		_delay
  3286 ;; This function is called by:
  3287 ;;		_temperaturaLer
  3288 ;;		_main
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  3292                           	line	22
  3293                           global __ptext5
  3294                           __ptext5:	;psect for function _adcLer
  3295  15D6                     psect	text5
  3296                           	file	"leitorLM35_v07.c"
  3297                           	line	22
  3298                           	global	__size_of_adcLer
  3299                           	__size_of_adcLer	equ	__end_of_adcLer-_adcLer
  3300  002E                     	
  3301                           _adcLer:	
  3302  15D6                     ;incstack = 0
  3303                           	opt	stack 0
  3304                           ; Regs used in _adcLer: [wreg+status,2+status,0+pclath+cstack]
  3305                           	line	25
  3306                           	
  3307                           l2183:	
  3308  15D6                     ;leitorLM35_v07.c: 24:     unsigned int adc01Temp;;leitorLM35_v07.c: 25:     delay(35);

  3309                           	movlw	023h
  3310  15D6  3023               	bsf	status, 5	;RP0=1, select bank1
  3311  15D7  1683               	bcf	status, 6	;RP1=0, select bank1
  3312  15D8  1303               	movwf	(delay@t)^080h
  3313  15D9  00A0               	movlw	0
  3314  15DA  3000               	movwf	((delay@t)^080h)+1
  3315  15DB  00A1               	fcall	_delay
  3316  15DC  160A  118A  2488  160A  118A  	line	28
  3317                           	
  3318                           l2185:	
  3319  15E1                     ;leitorLM35_v07.c: 28:     ADCON0bits.ADON = 1;
  3320                           	bcf	status, 5	;RP0=0, select bank0
  3321  15E1  1283               	bcf	status, 6	;RP1=0, select bank0
  3322  15E2  1303               	bsf	(31),0	;volatile
  3323  15E3  141F               	line	29
  3324                           ;leitorLM35_v07.c: 29:     delay(1);
  3325                           	movlw	01h
  3326  15E4  3001               	bsf	status, 5	;RP0=1, select bank1
  3327  15E5  1683               	bcf	status, 6	;RP1=0, select bank1
  3328  15E6  1303               	movwf	(delay@t)^080h
  3329  15E7  00A0               	movlw	0
  3330  15E8  3000               	movwf	((delay@t)^080h)+1
  3331  15E9  00A1               	fcall	_delay
  3332  15EA  160A  118A  2488  160A  118A  	line	30
  3333                           	
  3334                           l2187:	
  3335  15EF                     ;leitorLM35_v07.c: 30:     ADCON0bits.GO = 1;
  3336                           	bcf	status, 5	;RP0=0, select bank0
  3337  15EF  1283               	bcf	status, 6	;RP1=0, select bank0
  3338  15F0  1303               	bsf	(31),1	;volatile
  3339  15F1  149F               	line	31
  3340                           ;leitorLM35_v07.c: 31:     while(ADCON0bits.GO);
  3341                           	goto	l109
  3342  15F2  2DF3               	
  3343                           l110:	
  3344  15F3                     	
  3345                           l109:	
  3346  15F3                     	btfsc	(31),1	;volatile
  3347  15F3  189F               	goto	u2311
  3348  15F4  2DF6               	goto	u2310
  3349  15F5  2DF7               u2311:
  3350  15F6                     	goto	l109
  3351  15F6  2DF3               u2310:
  3352  15F7                     	goto	l2189
  3353  15F7  2DF8               	
  3354                           l111:	
  3355  15F8                     	line	40
  3356                           	
  3357                           l2189:	
  3358  15F8                     ;leitorLM35_v07.c: 40:     adc01Temp = (unsigned) (ADRESH<<8) | ADRESL;
  3359                           	movf	(30),w	;volatile
  3360  15F8  081E               	bsf	status, 5	;RP0=1, select bank1
  3361  15F9  1683               	bcf	status, 6	;RP1=0, select bank1
  3362  15FA  1303               	movwf	(adcLer@adc01Temp+1)^080h
  3363  15FB  00A7               	movf	(158)^080h,w	;volatile
  3364  15FC  081E               	movwf	(adcLer@adc01Temp)^080h
  3365  15FD  00A6               	line	41
  3366                           ;leitorLM35_v07.c: 41:     return adc01Temp;
  3367                           	movf	(adcLer@adc01Temp+1)^080h,w
  3368  15FE  0827               	movwf	(?_adcLer+1)^080h
  3369  15FF  00A5               	movf	(adcLer@adc01Temp)^080h,w
  3370  1600  0826               	movwf	(?_adcLer)^080h
  3371  1601  00A4               	goto	l112
  3372  1602  2E03               	
  3373                           l2191:	
  3374  1603                     	line	42
  3375                           	
  3376                           l112:	
  3377  1603                     	return
  3378  1603  0008               	opt stack 0
  3379                           GLOBAL	__end_of_adcLer
  3380                           	__end_of_adcLer:
  3381  1604                     	signat	_adcLer,90
  3382                           	global	___xxtofl
  3383                           
  3384 ;; *************** function ___xxtofl *****************
  3385 ;; Defined at:
  3386 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  sign            1    wreg     unsigned char 
  3389 ;;  val             4    0[BANK1 ] long 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  sign            1    8[BANK1 ] unsigned char 
  3392 ;;  arg             4   10[BANK1 ] unsigned long 
  3393 ;;  exp             1    9[BANK1 ] unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  4    0[BANK1 ] unsigned char 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3403 ;;      Params:         0       0       4       0       0
  3404 ;;      Locals:         0       0       6       0       0
  3405 ;;      Temps:          0       0       4       0       0
  3406 ;;      Totals:         0       0      14       0       0
  3407 ;;Total ram usage:       14 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    5
  3410 ;; This function calls:
  3411 ;;		Nothing
  3412 ;; This function is called by:
  3413 ;;		_temperaturaLer
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           psect	text6,local,class=CODE,delta=2,merge=1,group=1
  3417                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  3418                           	line	10
  3419                           global __ptext6
  3420                           __ptext6:	;psect for function ___xxtofl
  3421  0DC7                     psect	text6
  3422                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  3423                           	line	10
  3424                           	global	__size_of___xxtofl
  3425                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  3426  00C4                     	
  3427                           ___xxtofl:	
  3428  0DC7                     ;incstack = 0
  3429                           	opt	stack 1
  3430                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3431                           ;___xxtofl@sign stored from wreg
  3432                           	bsf	status, 5	;RP0=1, select bank1
  3433  0DC7  1683               	bcf	status, 6	;RP1=0, select bank1
  3434  0DC8  1303               	movwf	(___xxtofl@sign)^080h
  3435  0DC9  00A8               	line	15
  3436                           	
  3437                           l2435:	
  3438  0DCA                     	movf	((___xxtofl@sign)^080h),w
  3439  0DCA  0828               	btfsc	status,2
  3440  0DCB  1903               	goto	u2931
  3441  0DCC  2DCE               	goto	u2930
  3442  0DCD  2DCF               u2931:
  3443  0DCE                     	goto	l2441
  3444  0DCE  2DE3               u2930:
  3445  0DCF                     	
  3446                           l2437:	
  3447  0DCF                     	btfss	(___xxtofl@val+3)^080h,7
  3448  0DCF  1FA3               	goto	u2941
  3449  0DD0  2DD2               	goto	u2940
  3450  0DD1  2DD3               u2941:
  3451  0DD2                     	goto	l2441
  3452  0DD2  2DE3               u2940:
  3453  0DD3                     	line	16
  3454                           	
  3455                           l2439:	
  3456  0DD3                     	comf	(___xxtofl@val)^080h+0,w
  3457  0DD3  0920               	movwf	(___xxtofl@arg)^080h
  3458  0DD4  00AA               	comf	(___xxtofl@val)^080h+1,w
  3459  0DD5  0921               	movwf	(___xxtofl@arg+1)^080h
  3460  0DD6  00AB               	comf	(___xxtofl@val)^080h+2,w
  3461  0DD7  0922               	movwf	(___xxtofl@arg+2)^080h
  3462  0DD8  00AC               	comf	(___xxtofl@val)^080h+3,w
  3463  0DD9  0923               	movwf	(___xxtofl@arg+3)^080h
  3464  0DDA  00AD               	incf	(___xxtofl@arg)^080h,f
  3465  0DDB  0AAA               	skipnz
  3466  0DDC  1903               	incf	(___xxtofl@arg+1)^080h,f
  3467  0DDD  0AAB               	skipnz
  3468  0DDE  1903               	incf	(___xxtofl@arg+2)^080h,f
  3469  0DDF  0AAC               	skipnz
  3470  0DE0  1903               	incf	(___xxtofl@arg+3)^080h,f
  3471  0DE1  0AAD               	line	17
  3472                           	goto	l818
  3473  0DE2  2DEB               	line	18
  3474                           	
  3475                           l817:	
  3476  0DE3                     	line	19
  3477                           	
  3478                           l2441:	
  3479  0DE3                     	movf	(___xxtofl@val+3)^080h,w
  3480  0DE3  0823               	movwf	(___xxtofl@arg+3)^080h
  3481  0DE4  00AD               	movf	(___xxtofl@val+2)^080h,w
  3482  0DE5  0822               	movwf	(___xxtofl@arg+2)^080h
  3483  0DE6  00AC               	movf	(___xxtofl@val+1)^080h,w
  3484  0DE7  0821               	movwf	(___xxtofl@arg+1)^080h
  3485  0DE8  00AB               	movf	(___xxtofl@val)^080h,w
  3486  0DE9  0820               	movwf	(___xxtofl@arg)^080h
  3487  0DEA  00AA               
  3488                           	line	20
  3489                           	
  3490                           l818:	
  3491  0DEB                     	line	21
  3492                           	movf	(___xxtofl@val+3)^080h,w
  3493  0DEB  0823               	iorwf	(___xxtofl@val+2)^080h,w
  3494  0DEC  0422               	iorwf	(___xxtofl@val+1)^080h,w
  3495  0DED  0421               	iorwf	(___xxtofl@val)^080h,w
  3496  0DEE  0420               	skipz
  3497  0DEF  1D03               	goto	u2951
  3498  0DF0  2DF2               	goto	u2950
  3499  0DF1  2DF3               u2951:
  3500  0DF2                     	goto	l2447
  3501  0DF2  2DFD               u2950:
  3502  0DF3                     	line	22
  3503                           	
  3504                           l2443:	
  3505  0DF3                     	movlw	0x0
  3506  0DF3  3000               	movwf	(?___xxtofl+3)^080h
  3507  0DF4  00A3               	movlw	0x0
  3508  0DF5  3000               	movwf	(?___xxtofl+2)^080h
  3509  0DF6  00A2               	movlw	0x0
  3510  0DF7  3000               	movwf	(?___xxtofl+1)^080h
  3511  0DF8  00A1               	movlw	0x0
  3512  0DF9  3000               	movwf	(?___xxtofl)^080h
  3513  0DFA  00A0               
  3514                           	goto	l820
  3515  0DFB  2E8A               	
  3516                           l2445:	
  3517  0DFC                     	goto	l820
  3518  0DFC  2E8A               	
  3519                           l819:	
  3520  0DFD                     	line	23
  3521                           	
  3522                           l2447:	
  3523  0DFD                     	movlw	low(096h)
  3524  0DFD  3096               	movwf	(??___xxtofl+0)^080h+0
  3525  0DFE  00A4               	movf	(??___xxtofl+0)^080h+0,w
  3526  0DFF  0824               	movwf	(___xxtofl@exp)^080h
  3527  0E00  00A9               	line	24
  3528                           	goto	l2451
  3529  0E01  2E10               	
  3530                           l822:	
  3531  0E02                     	line	25
  3532                           	
  3533                           l2449:	
  3534  0E02                     	movlw	low(01h)
  3535  0E02  3001               	movwf	(??___xxtofl+0)^080h+0
  3536  0E03  00A4               	movf	(??___xxtofl+0)^080h+0,w
  3537  0E04  0824               	addwf	(___xxtofl@exp)^080h,f
  3538  0E05  07A9               	line	26
  3539                           	movlw	01h
  3540  0E06  3001               u2965:
  3541  0E07                     	clrc
  3542  0E07  1003               	rrf	(___xxtofl@arg+3)^080h,f
  3543  0E08  0CAD               	rrf	(___xxtofl@arg+2)^080h,f
  3544  0E09  0CAC               	rrf	(___xxtofl@arg+1)^080h,f
  3545  0E0A  0CAB               	rrf	(___xxtofl@arg)^080h,f
  3546  0E0B  0CAA               	addlw	-1
  3547  0E0C  3EFF               	skipz
  3548  0E0D  1D03               	goto	u2965
  3549  0E0E  2E07               
  3550                           	goto	l2451
  3551  0E0F  2E10               	line	27
  3552                           	
  3553                           l821:	
  3554  0E10                     	line	24
  3555                           	
  3556                           l2451:	
  3557  0E10                     	movlw	high highword(0FE000000h)
  3558  0E10  30FE               	andwf	(___xxtofl@arg+3)^080h,w
  3559  0E11  052D               	btfss	status,2
  3560  0E12  1D03               	goto	u2971
  3561  0E13  2E15               	goto	u2970
  3562  0E14  2E16               u2971:
  3563  0E15                     	goto	l2449
  3564  0E15  2E02               u2970:
  3565  0E16                     	goto	l824
  3566  0E16  2E33               	
  3567                           l823:	
  3568  0E17                     	line	28
  3569                           	goto	l824
  3570  0E17  2E33               	
  3571                           l825:	
  3572  0E18                     	line	29
  3573                           	
  3574                           l2453:	
  3575  0E18                     	movlw	low(01h)
  3576  0E18  3001               	movwf	(??___xxtofl+0)^080h+0
  3577  0E19  00A4               	movf	(??___xxtofl+0)^080h+0,w
  3578  0E1A  0824               	addwf	(___xxtofl@exp)^080h,f
  3579  0E1B  07A9               	line	30
  3580                           	
  3581                           l2455:	
  3582  0E1C                     	movlw	01h
  3583  0E1C  3001               	addwf	(___xxtofl@arg)^080h,f
  3584  0E1D  07AA               	movlw	0
  3585  0E1E  3000               	skipnc
  3586  0E1F  1803               movlw 1
  3587  0E20  3001               	addwf	(___xxtofl@arg+1)^080h,f
  3588  0E21  07AB               	movlw	0
  3589  0E22  3000               	skipnc
  3590  0E23  1803               movlw 1
  3591  0E24  3001               	addwf	(___xxtofl@arg+2)^080h,f
  3592  0E25  07AC               	movlw	0
  3593  0E26  3000               	skipnc
  3594  0E27  1803               movlw 1
  3595  0E28  3001               	addwf	(___xxtofl@arg+3)^080h,f
  3596  0E29  07AD               	line	31
  3597                           	
  3598                           l2457:	
  3599  0E2A                     	movlw	01h
  3600  0E2A  3001               u2985:
  3601  0E2B                     	clrc
  3602  0E2B  1003               	rrf	(___xxtofl@arg+3)^080h,f
  3603  0E2C  0CAD               	rrf	(___xxtofl@arg+2)^080h,f
  3604  0E2D  0CAC               	rrf	(___xxtofl@arg+1)^080h,f
  3605  0E2E  0CAB               	rrf	(___xxtofl@arg)^080h,f
  3606  0E2F  0CAA               	addlw	-1
  3607  0E30  3EFF               	skipz
  3608  0E31  1D03               	goto	u2985
  3609  0E32  2E2B               
  3610                           	line	32
  3611                           	
  3612                           l824:	
  3613  0E33                     	line	28
  3614                           	movlw	high highword(0FF000000h)
  3615  0E33  30FF               	andwf	(___xxtofl@arg+3)^080h,w
  3616  0E34  052D               	btfss	status,2
  3617  0E35  1D03               	goto	u2991
  3618  0E36  2E38               	goto	u2990
  3619  0E37  2E39               u2991:
  3620  0E38                     	goto	l2453
  3621  0E38  2E18               u2990:
  3622  0E39                     	goto	l2461
  3623  0E39  2E47               	
  3624                           l826:	
  3625  0E3A                     	line	33
  3626                           	goto	l2461
  3627  0E3A  2E47               	
  3628                           l828:	
  3629  0E3B                     	line	34
  3630                           	
  3631                           l2459:	
  3632  0E3B                     	movlw	01h
  3633  0E3B  3001               	subwf	(___xxtofl@exp)^080h,f
  3634  0E3C  02A9               	line	35
  3635                           	movlw	01h
  3636  0E3D  3001               	movwf	(??___xxtofl+0)^080h+0
  3637  0E3E  00A4               u3005:
  3638  0E3F                     	clrc
  3639  0E3F  1003               	rlf	(___xxtofl@arg)^080h,f
  3640  0E40  0DAA               	rlf	(___xxtofl@arg+1)^080h,f
  3641  0E41  0DAB               	rlf	(___xxtofl@arg+2)^080h,f
  3642  0E42  0DAC               	rlf	(___xxtofl@arg+3)^080h,f
  3643  0E43  0DAD               	decfsz	(??___xxtofl+0)^080h+0
  3644  0E44  0BA4               	goto	u3005
  3645  0E45  2E3F               	goto	l2461
  3646  0E46  2E47               	line	36
  3647                           	
  3648                           l827:	
  3649  0E47                     	line	33
  3650                           	
  3651                           l2461:	
  3652  0E47                     	btfsc	(___xxtofl@arg+2)^080h,(23)&7
  3653  0E47  1BAC               	goto	u3011
  3654  0E48  2E4A               	goto	u3010
  3655  0E49  2E4B               u3011:
  3656  0E4A                     	goto	l831
  3657  0E4A  2E52               u3010:
  3658  0E4B                     	
  3659                           l2463:	
  3660  0E4B                     	movlw	low(02h)
  3661  0E4B  3002               	subwf	(___xxtofl@exp)^080h,w
  3662  0E4C  0229               	skipnc
  3663  0E4D  1803               	goto	u3021
  3664  0E4E  2E50               	goto	u3020
  3665  0E4F  2E51               u3021:
  3666  0E50                     	goto	l2459
  3667  0E50  2E3B               u3020:
  3668  0E51                     	goto	l831
  3669  0E51  2E52               	
  3670                           l830:	
  3671  0E52                     	
  3672                           l831:	
  3673  0E52                     	line	37
  3674                           	btfsc	(___xxtofl@exp)^080h,(0)&7
  3675  0E52  1829               	goto	u3031
  3676  0E53  2E55               	goto	u3030
  3677  0E54  2E56               u3031:
  3678  0E55                     	goto	l832
  3679  0E55  2E5E               u3030:
  3680  0E56                     	line	38
  3681                           	
  3682                           l2465:	
  3683  0E56                     	movlw	0FFh
  3684  0E56  30FF               	andwf	(___xxtofl@arg)^080h,f
  3685  0E57  05AA               	movlw	0FFh
  3686  0E58  30FF               	andwf	(___xxtofl@arg+1)^080h,f
  3687  0E59  05AB               	movlw	07Fh
  3688  0E5A  307F               	andwf	(___xxtofl@arg+2)^080h,f
  3689  0E5B  05AC               	movlw	0FFh
  3690  0E5C  30FF               	andwf	(___xxtofl@arg+3)^080h,f
  3691  0E5D  05AD               	
  3692                           l832:	
  3693  0E5E                     	line	39
  3694                           	clrc
  3695  0E5E  1003               	rrf	(___xxtofl@exp)^080h,f
  3696  0E5F  0CA9               
  3697                           	line	40
  3698                           	
  3699                           l2467:	
  3700  0E60                     	movf	(___xxtofl@exp)^080h,w
  3701  0E60  0829               	movwf	(??___xxtofl+0)^080h+0
  3702  0E61  00A4               	clrf	(??___xxtofl+0)^080h+0+1
  3703  0E62  01A5               	clrf	(??___xxtofl+0)^080h+0+2
  3704  0E63  01A6               	clrf	(??___xxtofl+0)^080h+0+3
  3705  0E64  01A7               	movlw	018h
  3706  0E65  3018               u3045:
  3707  0E66                     	clrc
  3708  0E66  1003               	rlf	(??___xxtofl+0)^080h+0,f
  3709  0E67  0DA4               	rlf	(??___xxtofl+0)^080h+1,f
  3710  0E68  0DA5               	rlf	(??___xxtofl+0)^080h+2,f
  3711  0E69  0DA6               	rlf	(??___xxtofl+0)^080h+3,f
  3712  0E6A  0DA7               u3040:
  3713  0E6B                     	addlw	-1
  3714  0E6B  3EFF               	skipz
  3715  0E6C  1D03               	goto	u3045
  3716  0E6D  2E66               	movf	0+(??___xxtofl+0)^080h+0,w
  3717  0E6E  0824               	iorwf	(___xxtofl@arg)^080h,f
  3718  0E6F  04AA               	movf	1+(??___xxtofl+0)^080h+0,w
  3719  0E70  0825               	iorwf	(___xxtofl@arg+1)^080h,f
  3720  0E71  04AB               	movf	2+(??___xxtofl+0)^080h+0,w
  3721  0E72  0826               	iorwf	(___xxtofl@arg+2)^080h,f
  3722  0E73  04AC               	movf	3+(??___xxtofl+0)^080h+0,w
  3723  0E74  0827               	iorwf	(___xxtofl@arg+3)^080h,f
  3724  0E75  04AD               	line	41
  3725                           	
  3726                           l2469:	
  3727  0E76                     	movf	((___xxtofl@sign)^080h),w
  3728  0E76  0828               	btfsc	status,2
  3729  0E77  1903               	goto	u3051
  3730  0E78  2E7A               	goto	u3050
  3731  0E79  2E7B               u3051:
  3732  0E7A                     	goto	l2475
  3733  0E7A  2E81               u3050:
  3734  0E7B                     	
  3735                           l2471:	
  3736  0E7B                     	btfss	(___xxtofl@val+3)^080h,7
  3737  0E7B  1FA3               	goto	u3061
  3738  0E7C  2E7E               	goto	u3060
  3739  0E7D  2E7F               u3061:
  3740  0E7E                     	goto	l2475
  3741  0E7E  2E81               u3060:
  3742  0E7F                     	line	42
  3743                           	
  3744                           l2473:	
  3745  0E7F                     	bsf	(___xxtofl@arg)^080h+(31/8),(31)&7
  3746  0E7F  17AD               	goto	l2475
  3747  0E80  2E81               	
  3748                           l833:	
  3749  0E81                     	line	43
  3750                           	
  3751                           l2475:	
  3752  0E81                     	movf	(___xxtofl@arg+3)^080h,w
  3753  0E81  082D               	movwf	(?___xxtofl+3)^080h
  3754  0E82  00A3               	movf	(___xxtofl@arg+2)^080h,w
  3755  0E83  082C               	movwf	(?___xxtofl+2)^080h
  3756  0E84  00A2               	movf	(___xxtofl@arg+1)^080h,w
  3757  0E85  082B               	movwf	(?___xxtofl+1)^080h
  3758  0E86  00A1               	movf	(___xxtofl@arg)^080h,w
  3759  0E87  082A               	movwf	(?___xxtofl)^080h
  3760  0E88  00A0               
  3761                           	goto	l820
  3762  0E89  2E8A               	
  3763                           l2477:	
  3764  0E8A                     	line	44
  3765                           	
  3766                           l820:	
  3767  0E8A                     	return
  3768  0E8A  0008               	opt stack 0
  3769                           GLOBAL	__end_of___xxtofl
  3770                           	__end_of___xxtofl:
  3771  0E8B                     	signat	___xxtofl,8316
  3772                           	global	___fltol
  3773                           
  3774 ;; *************** function ___fltol *****************
  3775 ;; Defined at:
  3776 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  f1              4   40[BANK1 ] unsigned char 
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;  exp1            1   50[BANK1 ] unsigned char 
  3781 ;;  sign1           1   49[BANK1 ] unsigned char 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  4   40[BANK1 ] long 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3791 ;;      Params:         0       0       4       0       0
  3792 ;;      Locals:         0       0       2       0       0
  3793 ;;      Temps:          0       0       5       0       0
  3794 ;;      Totals:         0       0      11       0       0
  3795 ;;Total ram usage:       11 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:    5
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_temperaturaLer
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           psect	text7,local,class=CODE,delta=2,merge=1,group=1
  3805                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  3806                           	line	43
  3807                           global __ptext7
  3808                           __ptext7:	;psect for function ___fltol
  3809  0BCB                     psect	text7
  3810                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  3811                           	line	43
  3812                           	global	__size_of___fltol
  3813                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  3814  009C                     	
  3815                           ___fltol:	
  3816  0BCB                     ;incstack = 0
  3817                           	opt	stack 1
  3818                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3819                           	line	47
  3820                           	
  3821                           l2259:	
  3822  0BCB                     	bsf	status, 5	;RP0=1, select bank1
  3823  0BCB  1683               	bcf	status, 6	;RP1=0, select bank1
  3824  0BCC  1303               	movf	(___fltol@f1)^080h,w
  3825  0BCD  0848               	movwf	(??___fltol+0)^080h+0
  3826  0BCE  00CC               	movf	(___fltol@f1+1)^080h,w
  3827  0BCF  0849               	movwf	((??___fltol+0)^080h+0+1)
  3828  0BD0  00CD               	movf	(___fltol@f1+2)^080h,w
  3829  0BD1  084A               	movwf	((??___fltol+0)^080h+0+2)
  3830  0BD2  00CE               	movf	(___fltol@f1+3)^080h,w
  3831  0BD3  084B               	movwf	((??___fltol+0)^080h+0+3)
  3832  0BD4  00CF               	clrc
  3833  0BD5  1003               	rlf	(??___fltol+0)^080h+2,w
  3834  0BD6  0D4E               	rlf	(??___fltol+0)^080h+3,w
  3835  0BD7  0D4F               	movwf	(??___fltol+4)^080h+0
  3836  0BD8  00D0               	movf	(??___fltol+4)^080h+0,w
  3837  0BD9  0850               	movwf	(___fltol@exp1)^080h
  3838  0BDA  00D2               	movf	(((___fltol@exp1)^080h)),w
  3839  0BDB  0852               	btfss	status,2
  3840  0BDC  1D03               	goto	u2461
  3841  0BDD  2BDF               	goto	u2460
  3842  0BDE  2BE0               u2461:
  3843  0BDF                     	goto	l2265
  3844  0BDF  2BEA               u2460:
  3845  0BE0                     	line	48
  3846                           	
  3847                           l2261:	
  3848  0BE0                     	movlw	high highword(0)
  3849  0BE0  3000               	movwf	(?___fltol+3)^080h
  3850  0BE1  00CB               	movlw	low highword(0)
  3851  0BE2  3000               	movwf	(?___fltol+2)^080h
  3852  0BE3  00CA               	movlw	high(0)
  3853  0BE4  3000               	movwf	(?___fltol+1)^080h
  3854  0BE5  00C9               	movlw	low(0)
  3855  0BE6  3000               	movwf	(?___fltol)^080h
  3856  0BE7  00C8               
  3857                           	goto	l596
  3858  0BE8  2C66               	
  3859                           l2263:	
  3860  0BE9                     	goto	l596
  3861  0BE9  2C66               	
  3862                           l595:	
  3863  0BEA                     	line	49
  3864                           	
  3865                           l2265:	
  3866  0BEA                     	movf	(___fltol@f1)^080h,w
  3867  0BEA  0848               	movwf	(??___fltol+0)^080h+0
  3868  0BEB  00CC               	movf	(___fltol@f1+1)^080h,w
  3869  0BEC  0849               	movwf	((??___fltol+0)^080h+0+1)
  3870  0BED  00CD               	movf	(___fltol@f1+2)^080h,w
  3871  0BEE  084A               	movwf	((??___fltol+0)^080h+0+2)
  3872  0BEF  00CE               	movf	(___fltol@f1+3)^080h,w
  3873  0BF0  084B               	movwf	((??___fltol+0)^080h+0+3)
  3874  0BF1  00CF               	movlw	01Fh
  3875  0BF2  301F               u2475:
  3876  0BF3                     	clrc
  3877  0BF3  1003               	rrf	(??___fltol+0)^080h+3,f
  3878  0BF4  0CCF               	rrf	(??___fltol+0)^080h+2,f
  3879  0BF5  0CCE               	rrf	(??___fltol+0)^080h+1,f
  3880  0BF6  0CCD               	rrf	(??___fltol+0)^080h+0,f
  3881  0BF7  0CCC               u2470:
  3882  0BF8                     	addlw	-1
  3883  0BF8  3EFF               	skipz
  3884  0BF9  1D03               	goto	u2475
  3885  0BFA  2BF3               	movf	0+(??___fltol+0)^080h+0,w
  3886  0BFB  084C               	movwf	(??___fltol+4)^080h+0
  3887  0BFC  00D0               	movf	(??___fltol+4)^080h+0,w
  3888  0BFD  0850               	movwf	(___fltol@sign1)^080h
  3889  0BFE  00D1               	line	50
  3890                           	
  3891                           l2267:	
  3892  0BFF                     	bsf	(___fltol@f1)^080h+(23/8),(23)&7
  3893  0BFF  17CA               	line	51
  3894                           	
  3895                           l2269:	
  3896  0C00                     	movlw	0FFh
  3897  0C00  30FF               	andwf	(___fltol@f1)^080h,f
  3898  0C01  05C8               	movlw	0FFh
  3899  0C02  30FF               	andwf	(___fltol@f1+1)^080h,f
  3900  0C03  05C9               	movlw	0FFh
  3901  0C04  30FF               	andwf	(___fltol@f1+2)^080h,f
  3902  0C05  05CA               	movlw	0
  3903  0C06  3000               	andwf	(___fltol@f1+3)^080h,f
  3904  0C07  05CB               	line	52
  3905                           	
  3906                           l2271:	
  3907  0C08                     	movlw	096h
  3908  0C08  3096               	subwf	(___fltol@exp1)^080h,f
  3909  0C09  02D2               	line	53
  3910                           	
  3911                           l2273:	
  3912  0C0A                     	btfss	(___fltol@exp1)^080h,7
  3913  0C0A  1FD2               	goto	u2481
  3914  0C0B  2C0D               	goto	u2480
  3915  0C0C  2C0E               u2481:
  3916  0C0D                     	goto	l2283
  3917  0C0D  2C33               u2480:
  3918  0C0E                     	line	54
  3919                           	
  3920                           l2275:	
  3921  0C0E                     	movf	(___fltol@exp1)^080h,w
  3922  0C0E  0852               	xorlw	80h
  3923  0C0F  3A80               	addlw	-((-23)^80h)
  3924  0C10  3E97               	skipnc
  3925  0C11  1803               	goto	u2491
  3926  0C12  2C14               	goto	u2490
  3927  0C13  2C15               u2491:
  3928  0C14                     	goto	l2281
  3929  0C14  2C20               u2490:
  3930  0C15                     	line	55
  3931                           	
  3932                           l2277:	
  3933  0C15                     	movlw	high highword(0)
  3934  0C15  3000               	movwf	(?___fltol+3)^080h
  3935  0C16  00CB               	movlw	low highword(0)
  3936  0C17  3000               	movwf	(?___fltol+2)^080h
  3937  0C18  00CA               	movlw	high(0)
  3938  0C19  3000               	movwf	(?___fltol+1)^080h
  3939  0C1A  00C9               	movlw	low(0)
  3940  0C1B  3000               	movwf	(?___fltol)^080h
  3941  0C1C  00C8               
  3942                           	goto	l596
  3943  0C1D  2C66               	
  3944                           l2279:	
  3945  0C1E                     	goto	l596
  3946  0C1E  2C66               	
  3947                           l598:	
  3948  0C1F                     	goto	l2281
  3949  0C1F  2C20               	line	56
  3950                           	
  3951                           l599:	
  3952  0C20                     	line	57
  3953                           	
  3954                           l2281:	
  3955  0C20                     	movlw	01h
  3956  0C20  3001               u2505:
  3957  0C21                     	clrc
  3958  0C21  1003               	rrf	(___fltol@f1+3)^080h,f
  3959  0C22  0CCB               	rrf	(___fltol@f1+2)^080h,f
  3960  0C23  0CCA               	rrf	(___fltol@f1+1)^080h,f
  3961  0C24  0CC9               	rrf	(___fltol@f1)^080h,f
  3962  0C25  0CC8               	addlw	-1
  3963  0C26  3EFF               	skipz
  3964  0C27  1D03               	goto	u2505
  3965  0C28  2C21               
  3966                           	line	58
  3967                           	movlw	low(01h)
  3968  0C29  3001               	movwf	(??___fltol+0)^080h+0
  3969  0C2A  00CC               	movf	(??___fltol+0)^080h+0,w
  3970  0C2B  084C               	addwf	(___fltol@exp1)^080h,f
  3971  0C2C  07D2               	btfss	status,2
  3972  0C2D  1D03               	goto	u2511
  3973  0C2E  2C30               	goto	u2510
  3974  0C2F  2C31               u2511:
  3975  0C30                     	goto	l2281
  3976  0C30  2C20               u2510:
  3977  0C31                     	goto	l2291
  3978  0C31  2C56               	
  3979                           l600:	
  3980  0C32                     	line	59
  3981                           	goto	l2291
  3982  0C32  2C56               	
  3983                           l597:	
  3984  0C33                     	line	60
  3985                           	
  3986                           l2283:	
  3987  0C33                     	movlw	low(020h)
  3988  0C33  3020               	subwf	(___fltol@exp1)^080h,w
  3989  0C34  0252               	skipc
  3990  0C35  1C03               	goto	u2521
  3991  0C36  2C38               	goto	u2520
  3992  0C37  2C39               u2521:
  3993  0C38                     	goto	l603
  3994  0C38  2C4F               u2520:
  3995  0C39                     	line	61
  3996                           	
  3997                           l2285:	
  3998  0C39                     	movlw	high highword(0)
  3999  0C39  3000               	movwf	(?___fltol+3)^080h
  4000  0C3A  00CB               	movlw	low highword(0)
  4001  0C3B  3000               	movwf	(?___fltol+2)^080h
  4002  0C3C  00CA               	movlw	high(0)
  4003  0C3D  3000               	movwf	(?___fltol+1)^080h
  4004  0C3E  00C9               	movlw	low(0)
  4005  0C3F  3000               	movwf	(?___fltol)^080h
  4006  0C40  00C8               
  4007                           	goto	l596
  4008  0C41  2C66               	
  4009                           l2287:	
  4010  0C42                     	goto	l596
  4011  0C42  2C66               	
  4012                           l602:	
  4013  0C43                     	line	62
  4014                           	goto	l603
  4015  0C43  2C4F               	
  4016                           l604:	
  4017  0C44                     	line	63
  4018                           	
  4019                           l2289:	
  4020  0C44                     	movlw	01h
  4021  0C44  3001               	movwf	(??___fltol+0)^080h+0
  4022  0C45  00CC               u2535:
  4023  0C46                     	clrc
  4024  0C46  1003               	rlf	(___fltol@f1)^080h,f
  4025  0C47  0DC8               	rlf	(___fltol@f1+1)^080h,f
  4026  0C48  0DC9               	rlf	(___fltol@f1+2)^080h,f
  4027  0C49  0DCA               	rlf	(___fltol@f1+3)^080h,f
  4028  0C4A  0DCB               	decfsz	(??___fltol+0)^080h+0
  4029  0C4B  0BCC               	goto	u2535
  4030  0C4C  2C46               	line	64
  4031                           	movlw	01h
  4032  0C4D  3001               	subwf	(___fltol@exp1)^080h,f
  4033  0C4E  02D2               	line	65
  4034                           	
  4035                           l603:	
  4036  0C4F                     	line	62
  4037                           	movf	((___fltol@exp1)^080h),w
  4038  0C4F  0852               	btfss	status,2
  4039  0C50  1D03               	goto	u2541
  4040  0C51  2C53               	goto	u2540
  4041  0C52  2C54               u2541:
  4042  0C53                     	goto	l2289
  4043  0C53  2C44               u2540:
  4044  0C54                     	goto	l2291
  4045  0C54  2C56               	
  4046                           l605:	
  4047  0C55                     	goto	l2291
  4048  0C55  2C56               	line	66
  4049                           	
  4050                           l601:	
  4051  0C56                     	line	67
  4052                           	
  4053                           l2291:	
  4054  0C56                     	movf	((___fltol@sign1)^080h),w
  4055  0C56  0851               	btfsc	status,2
  4056  0C57  1903               	goto	u2551
  4057  0C58  2C5A               	goto	u2550
  4058  0C59  2C5B               u2551:
  4059  0C5A                     	goto	l606
  4060  0C5A  2C66               u2550:
  4061  0C5B                     	line	68
  4062                           	
  4063                           l2293:	
  4064  0C5B                     	comf	(___fltol@f1)^080h,f
  4065  0C5B  09C8               	comf	(___fltol@f1+1)^080h,f
  4066  0C5C  09C9               	comf	(___fltol@f1+2)^080h,f
  4067  0C5D  09CA               	comf	(___fltol@f1+3)^080h,f
  4068  0C5E  09CB               	incf	(___fltol@f1)^080h,f
  4069  0C5F  0AC8               	skipnz
  4070  0C60  1903               	incf	(___fltol@f1+1)^080h,f
  4071  0C61  0AC9               	skipnz
  4072  0C62  1903               	incf	(___fltol@f1+2)^080h,f
  4073  0C63  0ACA               	skipnz
  4074  0C64  1903               	incf	(___fltol@f1+3)^080h,f
  4075  0C65  0ACB               	
  4076                           l606:	
  4077  0C66                     	line	69
  4078                           	line	70
  4079                           	
  4080                           l596:	
  4081  0C66                     	return
  4082  0C66  0008               	opt stack 0
  4083                           GLOBAL	__end_of___fltol
  4084                           	__end_of___fltol:
  4085  0C67                     	signat	___fltol,4220
  4086                           	global	___flmul
  4087                           
  4088 ;; *************** function ___flmul *****************
  4089 ;; Defined at:
  4090 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  b               4   14[BANK1 ] long 
  4093 ;;  a               4   18[BANK1 ] long 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  prod            4   34[BANK1 ] struct .
  4096 ;;  grs             4   28[BANK1 ] unsigned long 
  4097 ;;  temp            2   38[BANK1 ] struct .
  4098 ;;  bexp            1   33[BANK1 ] unsigned char 
  4099 ;;  aexp            1   32[BANK1 ] unsigned char 
  4100 ;;  sign            1   27[BANK1 ] unsigned char 
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  4   14[BANK1 ] unsigned char 
  4103 ;; Registers used:
  4104 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4110 ;;      Params:         0       0       8       0       0
  4111 ;;      Locals:         0       0      13       0       0
  4112 ;;      Temps:          0       0       5       0       0
  4113 ;;      Totals:         0       0      26       0       0
  4114 ;;Total ram usage:       26 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:    6
  4117 ;; This function calls:
  4118 ;;		__Umul8_16
  4119 ;; This function is called by:
  4120 ;;		_temperaturaLer
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           psect	text8,local,class=CODE,delta=2,merge=1,group=1
  4124                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  4125                           	line	8
  4126                           global __ptext8
  4127                           __ptext8:	;psect for function ___flmul
  4128  0029                     psect	text8
  4129                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  4130                           	line	8
  4131                           	global	__size_of___flmul
  4132                           	__size_of___flmul	equ	__end_of___flmul-___flmul
  4133  0375                     	
  4134                           ___flmul:	
  4135  0029                     ;incstack = 0
  4136                           	opt	stack 0
  4137                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4138                           	line	17
  4139                           	
  4140                           l2295:	
  4141  0029                     	bsf	status, 5	;RP0=1, select bank1
  4142  0029  1683               	bcf	status, 6	;RP1=0, select bank1
  4143  002A  1303               	movf	0+(___flmul@b)^080h+03h,w
  4144  002B  0831               	andlw	080h
  4145  002C  3980               	movwf	(??___flmul+0)^080h+0
  4146  002D  00B6               	movf	(??___flmul+0)^080h+0,w
  4147  002E  0836               	movwf	(___flmul@sign)^080h
  4148  002F  00BB               	line	18
  4149                           	
  4150                           l2297:	
  4151  0030                     	movf	0+(___flmul@b)^080h+03h,w
  4152  0030  0831               	movwf	(??___flmul+0)^080h+0
  4153  0031  00B6               	addwf	(??___flmul+0)^080h+0,w
  4154  0032  0736               	movwf	(??___flmul+1)^080h+0
  4155  0033  00B7               	movf	(??___flmul+1)^080h+0,w
  4156  0034  0837               	movwf	(___flmul@bexp)^080h
  4157  0035  00C1               	line	19
  4158                           	
  4159                           l2299:	
  4160  0036                     	btfss	0+(___flmul@b)^080h+02h,(7)&7
  4161  0036  1FB0               	goto	u2561
  4162  0037  2839               	goto	u2560
  4163  0038  283A               u2561:
  4164  0039                     	goto	l2303
  4165  0039  283C               u2560:
  4166  003A                     	line	20
  4167                           	
  4168                           l2301:	
  4169  003A                     	bsf	(___flmul@bexp)^080h+(0/8),(0)&7
  4170  003A  1441               	goto	l2303
  4171  003B  283C               	line	21
  4172                           	
  4173                           l788:	
  4174  003C                     	line	24
  4175                           	
  4176                           l2303:	
  4177  003C                     	movf	((___flmul@bexp)^080h),w
  4178  003C  0841               	btfsc	status,2
  4179  003D  1903               	goto	u2571
  4180  003E  2840               	goto	u2570
  4181  003F  2841               u2571:
  4182  0040                     	goto	l2311
  4183  0040  2851               u2570:
  4184  0041                     	line	26
  4185                           	
  4186                           l2305:	
  4187  0041                     		incf	((___flmul@bexp)^080h),w
  4188  0041  0A41               	btfss	status,2
  4189  0042  1D03               	goto	u2581
  4190  0043  2845               	goto	u2580
  4191  0044  2846               u2581:
  4192  0045                     	goto	l2309
  4193  0045  284F               u2580:
  4194  0046                     	line	28
  4195                           	
  4196                           l2307:	
  4197  0046                     	movlw	0x0
  4198  0046  3000               	movwf	(___flmul@b+3)^080h
  4199  0047  00B1               	movlw	0x0
  4200  0048  3000               	movwf	(___flmul@b+2)^080h
  4201  0049  00B0               	movlw	0x0
  4202  004A  3000               	movwf	(___flmul@b+1)^080h
  4203  004B  00AF               	movlw	0x0
  4204  004C  3000               	movwf	(___flmul@b)^080h
  4205  004D  00AE               
  4206                           	goto	l2309
  4207  004E  284F               	line	29
  4208                           	
  4209                           l790:	
  4210  004F                     	line	31
  4211                           	
  4212                           l2309:	
  4213  004F                     	bsf	(___flmul@b)^080h+(23/8),(23)&7
  4214  004F  17B0               	line	33
  4215                           	goto	l2313
  4216  0050  285A               	line	34
  4217                           	
  4218                           l789:	
  4219  0051                     	line	36
  4220                           	
  4221                           l2311:	
  4222  0051                     	movlw	0x0
  4223  0051  3000               	movwf	(___flmul@b+3)^080h
  4224  0052  00B1               	movlw	0x0
  4225  0053  3000               	movwf	(___flmul@b+2)^080h
  4226  0054  00B0               	movlw	0x0
  4227  0055  3000               	movwf	(___flmul@b+1)^080h
  4228  0056  00AF               	movlw	0x0
  4229  0057  3000               	movwf	(___flmul@b)^080h
  4230  0058  00AE               
  4231                           	goto	l2313
  4232  0059  285A               	line	37
  4233                           	
  4234                           l791:	
  4235  005A                     	line	39
  4236                           	
  4237                           l2313:	
  4238  005A                     	movf	0+(___flmul@a)^080h+03h,w
  4239  005A  0835               	andlw	080h
  4240  005B  3980               	movwf	(??___flmul+0)^080h+0
  4241  005C  00B6               	movf	(??___flmul+0)^080h+0,w
  4242  005D  0836               	xorwf	(___flmul@sign)^080h,f
  4243  005E  06BB               	line	40
  4244                           	
  4245                           l2315:	
  4246  005F                     	movf	0+(___flmul@a)^080h+03h,w
  4247  005F  0835               	movwf	(??___flmul+0)^080h+0
  4248  0060  00B6               	addwf	(??___flmul+0)^080h+0,w
  4249  0061  0736               	movwf	(??___flmul+1)^080h+0
  4250  0062  00B7               	movf	(??___flmul+1)^080h+0,w
  4251  0063  0837               	movwf	(___flmul@aexp)^080h
  4252  0064  00C0               	line	41
  4253                           	
  4254                           l2317:	
  4255  0065                     	btfss	0+(___flmul@a)^080h+02h,(7)&7
  4256  0065  1FB4               	goto	u2591
  4257  0066  2868               	goto	u2590
  4258  0067  2869               u2591:
  4259  0068                     	goto	l2321
  4260  0068  286B               u2590:
  4261  0069                     	line	42
  4262                           	
  4263                           l2319:	
  4264  0069                     	bsf	(___flmul@aexp)^080h+(0/8),(0)&7
  4265  0069  1440               	goto	l2321
  4266  006A  286B               	line	43
  4267                           	
  4268                           l792:	
  4269  006B                     	line	45
  4270                           	
  4271                           l2321:	
  4272  006B                     	movf	((___flmul@aexp)^080h),w
  4273  006B  0840               	btfsc	status,2
  4274  006C  1903               	goto	u2601
  4275  006D  286F               	goto	u2600
  4276  006E  2870               u2601:
  4277  006F                     	goto	l2329
  4278  006F  2880               u2600:
  4279  0070                     	line	48
  4280                           	
  4281                           l2323:	
  4282  0070                     		incf	((___flmul@aexp)^080h),w
  4283  0070  0A40               	btfss	status,2
  4284  0071  1D03               	goto	u2611
  4285  0072  2874               	goto	u2610
  4286  0073  2875               u2611:
  4287  0074                     	goto	l2327
  4288  0074  287E               u2610:
  4289  0075                     	line	50
  4290                           	
  4291                           l2325:	
  4292  0075                     	movlw	0x0
  4293  0075  3000               	movwf	(___flmul@a+3)^080h
  4294  0076  00B5               	movlw	0x0
  4295  0077  3000               	movwf	(___flmul@a+2)^080h
  4296  0078  00B4               	movlw	0x0
  4297  0079  3000               	movwf	(___flmul@a+1)^080h
  4298  007A  00B3               	movlw	0x0
  4299  007B  3000               	movwf	(___flmul@a)^080h
  4300  007C  00B2               
  4301                           	goto	l2327
  4302  007D  287E               	line	51
  4303                           	
  4304                           l794:	
  4305  007E                     	line	53
  4306                           	
  4307                           l2327:	
  4308  007E                     	bsf	(___flmul@a)^080h+(23/8),(23)&7
  4309  007E  17B4               	line	54
  4310                           	goto	l2331
  4311  007F  2889               	line	55
  4312                           	
  4313                           l793:	
  4314  0080                     	line	57
  4315                           	
  4316                           l2329:	
  4317  0080                     	movlw	0x0
  4318  0080  3000               	movwf	(___flmul@a+3)^080h
  4319  0081  00B5               	movlw	0x0
  4320  0082  3000               	movwf	(___flmul@a+2)^080h
  4321  0083  00B4               	movlw	0x0
  4322  0084  3000               	movwf	(___flmul@a+1)^080h
  4323  0085  00B3               	movlw	0x0
  4324  0086  3000               	movwf	(___flmul@a)^080h
  4325  0087  00B2               
  4326                           	goto	l2331
  4327  0088  2889               	line	58
  4328                           	
  4329                           l795:	
  4330  0089                     	line	65
  4331                           	
  4332                           l2331:	
  4333  0089                     	movf	((___flmul@aexp)^080h),w
  4334  0089  0840               	btfsc	status,2
  4335  008A  1903               	goto	u2621
  4336  008B  288D               	goto	u2620
  4337  008C  288E               u2621:
  4338  008D                     	goto	l2335
  4339  008D  2894               u2620:
  4340  008E                     	
  4341                           l2333:	
  4342  008E                     	movf	((___flmul@bexp)^080h),w
  4343  008E  0841               	btfss	status,2
  4344  008F  1D03               	goto	u2631
  4345  0090  2892               	goto	u2630
  4346  0091  2893               u2631:
  4347  0092                     	goto	l2339
  4348  0092  289E               u2630:
  4349  0093                     	goto	l2335
  4350  0093  2894               	
  4351                           l798:	
  4352  0094                     	line	66
  4353                           	
  4354                           l2335:	
  4355  0094                     	movlw	0x0
  4356  0094  3000               	movwf	(?___flmul+3)^080h
  4357  0095  00B1               	movlw	0x0
  4358  0096  3000               	movwf	(?___flmul+2)^080h
  4359  0097  00B0               	movlw	0x0
  4360  0098  3000               	movwf	(?___flmul+1)^080h
  4361  0099  00AF               	movlw	0x0
  4362  009A  3000               	movwf	(?___flmul)^080h
  4363  009B  00AE               
  4364                           	goto	l799
  4365  009C  2B9D               	
  4366                           l2337:	
  4367  009D                     	goto	l799
  4368  009D  2B9D               	line	67
  4369                           	
  4370                           l796:	
  4371  009E                     	line	119
  4372                           	
  4373                           l2339:	
  4374  009E                     	movf	(___flmul@b)^080h,w
  4375  009E  082E               	movwf	(??___flmul+0)^080h+0
  4376  009F  00B6               	movf	(??___flmul+0)^080h+0,w
  4377  00A0  0836               	movwf	(__Umul8_16@multiplicand)^080h
  4378  00A1  00A0               	movf	0+(___flmul@a)^080h+02h,w
  4379  00A2  0834               	fcall	__Umul8_16
  4380  00A3  160A  118A  25AA  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4381  00A8  1683               	bcf	status, 6	;RP1=0, select bank1
  4382  00A9  1303               	movf	(1+(?__Umul8_16))^080h,w
  4383  00AA  0821               	movwf	(___flmul@temp+1)^080h
  4384  00AB  00C7               	movf	(0+(?__Umul8_16))^080h,w
  4385  00AC  0820               	movwf	(___flmul@temp)^080h
  4386  00AD  00C6               	line	120
  4387                           	
  4388                           l2341:	
  4389  00AE                     	movf	(___flmul@temp)^080h,w
  4390  00AE  0846               	movwf	(??___flmul+0)^080h+0
  4391  00AF  00B6               	clrf	(??___flmul+0)^080h+0+1
  4392  00B0  01B7               	clrf	(??___flmul+0)^080h+0+2
  4393  00B1  01B8               	clrf	(??___flmul+0)^080h+0+3
  4394  00B2  01B9               	movf	3+(??___flmul+0)^080h+0,w
  4395  00B3  0839               	movwf	(___flmul@grs+3)^080h
  4396  00B4  00BF               	movf	2+(??___flmul+0)^080h+0,w
  4397  00B5  0838               	movwf	(___flmul@grs+2)^080h
  4398  00B6  00BE               	movf	1+(??___flmul+0)^080h+0,w
  4399  00B7  0837               	movwf	(___flmul@grs+1)^080h
  4400  00B8  00BD               	movf	0+(??___flmul+0)^080h+0,w
  4401  00B9  0836               	movwf	(___flmul@grs)^080h
  4402  00BA  00BC               
  4403                           	line	121
  4404                           	
  4405                           l2343:	
  4406  00BB                     	movf	0+(___flmul@temp)^080h+01h,w
  4407  00BB  0847               	movwf	(??___flmul+0)^080h+0
  4408  00BC  00B6               	clrf	(??___flmul+0)^080h+0+1
  4409  00BD  01B7               	clrf	(??___flmul+0)^080h+0+2
  4410  00BE  01B8               	clrf	(??___flmul+0)^080h+0+3
  4411  00BF  01B9               	movf	3+(??___flmul+0)^080h+0,w
  4412  00C0  0839               	movwf	(___flmul@prod+3)^080h
  4413  00C1  00C5               	movf	2+(??___flmul+0)^080h+0,w
  4414  00C2  0838               	movwf	(___flmul@prod+2)^080h
  4415  00C3  00C4               	movf	1+(??___flmul+0)^080h+0,w
  4416  00C4  0837               	movwf	(___flmul@prod+1)^080h
  4417  00C5  00C3               	movf	0+(??___flmul+0)^080h+0,w
  4418  00C6  0836               	movwf	(___flmul@prod)^080h
  4419  00C7  00C2               
  4420                           	line	122
  4421                           	movf	0+(___flmul@b)^080h+01h,w
  4422  00C8  082F               	movwf	(??___flmul+0)^080h+0
  4423  00C9  00B6               	movf	(??___flmul+0)^080h+0,w
  4424  00CA  0836               	movwf	(__Umul8_16@multiplicand)^080h
  4425  00CB  00A0               	movf	0+(___flmul@a)^080h+01h,w
  4426  00CC  0833               	fcall	__Umul8_16
  4427  00CD  160A  118A  25AA  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4428  00D2  1683               	bcf	status, 6	;RP1=0, select bank1
  4429  00D3  1303               	movf	(1+(?__Umul8_16))^080h,w
  4430  00D4  0821               	movwf	(___flmul@temp+1)^080h
  4431  00D5  00C7               	movf	(0+(?__Umul8_16))^080h,w
  4432  00D6  0820               	movwf	(___flmul@temp)^080h
  4433  00D7  00C6               	line	123
  4434                           	
  4435                           l2345:	
  4436  00D8                     	movf	(___flmul@temp)^080h,w
  4437  00D8  0846               	movwf	(??___flmul+0)^080h+0
  4438  00D9  00B6               	clrf	(??___flmul+0)^080h+0+1
  4439  00DA  01B7               	clrf	(??___flmul+0)^080h+0+2
  4440  00DB  01B8               	clrf	(??___flmul+0)^080h+0+3
  4441  00DC  01B9               	movf	0+(??___flmul+0)^080h+0,w
  4442  00DD  0836               	addwf	(___flmul@grs)^080h,f
  4443  00DE  07BC               	movf	1+(??___flmul+0)^080h+0,w
  4444  00DF  0837               	clrz
  4445  00E0  1103               	skipnc
  4446  00E1  1803               	addlw	1
  4447  00E2  3E01               	skipnz
  4448  00E3  1903               	goto	u2641
  4449  00E4  28E6               	addwf	(___flmul@grs+1)^080h,f
  4450  00E5  07BD               u2641:
  4451  00E6                     	movf	2+(??___flmul+0)^080h+0,w
  4452  00E6  0838               	clrz
  4453  00E7  1103               	skipnc
  4454  00E8  1803               	addlw	1
  4455  00E9  3E01               	skipnz
  4456  00EA  1903               	goto	u2642
  4457  00EB  28ED               	addwf	(___flmul@grs+2)^080h,f
  4458  00EC  07BE               u2642:
  4459  00ED                     	movf	3+(??___flmul+0)^080h+0,w
  4460  00ED  0839               	clrz
  4461  00EE  1103               	skipnc
  4462  00EF  1803               	addlw	1
  4463  00F0  3E01               	skipnz
  4464  00F1  1903               	goto	u2643
  4465  00F2  28F4               	addwf	(___flmul@grs+3)^080h,f
  4466  00F3  07BF               u2643:
  4467  00F4                     
  4468                           	line	124
  4469                           	
  4470                           l2347:	
  4471  00F4                     	movf	0+(___flmul@temp)^080h+01h,w
  4472  00F4  0847               	movwf	(??___flmul+0)^080h+0
  4473  00F5  00B6               	clrf	(??___flmul+0)^080h+0+1
  4474  00F6  01B7               	clrf	(??___flmul+0)^080h+0+2
  4475  00F7  01B8               	clrf	(??___flmul+0)^080h+0+3
  4476  00F8  01B9               	movf	0+(??___flmul+0)^080h+0,w
  4477  00F9  0836               	addwf	(___flmul@prod)^080h,f
  4478  00FA  07C2               	movf	1+(??___flmul+0)^080h+0,w
  4479  00FB  0837               	clrz
  4480  00FC  1103               	skipnc
  4481  00FD  1803               	addlw	1
  4482  00FE  3E01               	skipnz
  4483  00FF  1903               	goto	u2651
  4484  0100  2902               	addwf	(___flmul@prod+1)^080h,f
  4485  0101  07C3               u2651:
  4486  0102                     	movf	2+(??___flmul+0)^080h+0,w
  4487  0102  0838               	clrz
  4488  0103  1103               	skipnc
  4489  0104  1803               	addlw	1
  4490  0105  3E01               	skipnz
  4491  0106  1903               	goto	u2652
  4492  0107  2909               	addwf	(___flmul@prod+2)^080h,f
  4493  0108  07C4               u2652:
  4494  0109                     	movf	3+(??___flmul+0)^080h+0,w
  4495  0109  0839               	clrz
  4496  010A  1103               	skipnc
  4497  010B  1803               	addlw	1
  4498  010C  3E01               	skipnz
  4499  010D  1903               	goto	u2653
  4500  010E  2910               	addwf	(___flmul@prod+3)^080h,f
  4501  010F  07C5               u2653:
  4502  0110                     
  4503                           	line	125
  4504                           	movf	0+(___flmul@b)^080h+02h,w
  4505  0110  0830               	movwf	(??___flmul+0)^080h+0
  4506  0111  00B6               	movf	(??___flmul+0)^080h+0,w
  4507  0112  0836               	movwf	(__Umul8_16@multiplicand)^080h
  4508  0113  00A0               	movf	(___flmul@a)^080h,w
  4509  0114  0832               	fcall	__Umul8_16
  4510  0115  160A  118A  25AA  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4511  011A  1683               	bcf	status, 6	;RP1=0, select bank1
  4512  011B  1303               	movf	(1+(?__Umul8_16))^080h,w
  4513  011C  0821               	movwf	(___flmul@temp+1)^080h
  4514  011D  00C7               	movf	(0+(?__Umul8_16))^080h,w
  4515  011E  0820               	movwf	(___flmul@temp)^080h
  4516  011F  00C6               	line	126
  4517                           	
  4518                           l2349:	
  4519  0120                     	movf	(___flmul@temp)^080h,w
  4520  0120  0846               	movwf	(??___flmul+0)^080h+0
  4521  0121  00B6               	clrf	(??___flmul+0)^080h+0+1
  4522  0122  01B7               	clrf	(??___flmul+0)^080h+0+2
  4523  0123  01B8               	clrf	(??___flmul+0)^080h+0+3
  4524  0124  01B9               	movf	0+(??___flmul+0)^080h+0,w
  4525  0125  0836               	addwf	(___flmul@grs)^080h,f
  4526  0126  07BC               	movf	1+(??___flmul+0)^080h+0,w
  4527  0127  0837               	clrz
  4528  0128  1103               	skipnc
  4529  0129  1803               	addlw	1
  4530  012A  3E01               	skipnz
  4531  012B  1903               	goto	u2661
  4532  012C  292E               	addwf	(___flmul@grs+1)^080h,f
  4533  012D  07BD               u2661:
  4534  012E                     	movf	2+(??___flmul+0)^080h+0,w
  4535  012E  0838               	clrz
  4536  012F  1103               	skipnc
  4537  0130  1803               	addlw	1
  4538  0131  3E01               	skipnz
  4539  0132  1903               	goto	u2662
  4540  0133  2935               	addwf	(___flmul@grs+2)^080h,f
  4541  0134  07BE               u2662:
  4542  0135                     	movf	3+(??___flmul+0)^080h+0,w
  4543  0135  0839               	clrz
  4544  0136  1103               	skipnc
  4545  0137  1803               	addlw	1
  4546  0138  3E01               	skipnz
  4547  0139  1903               	goto	u2663
  4548  013A  293C               	addwf	(___flmul@grs+3)^080h,f
  4549  013B  07BF               u2663:
  4550  013C                     
  4551                           	line	127
  4552                           	
  4553                           l2351:	
  4554  013C                     	movf	0+(___flmul@temp)^080h+01h,w
  4555  013C  0847               	movwf	(??___flmul+0)^080h+0
  4556  013D  00B6               	clrf	(??___flmul+0)^080h+0+1
  4557  013E  01B7               	clrf	(??___flmul+0)^080h+0+2
  4558  013F  01B8               	clrf	(??___flmul+0)^080h+0+3
  4559  0140  01B9               	movf	0+(??___flmul+0)^080h+0,w
  4560  0141  0836               	addwf	(___flmul@prod)^080h,f
  4561  0142  07C2               	movf	1+(??___flmul+0)^080h+0,w
  4562  0143  0837               	clrz
  4563  0144  1103               	skipnc
  4564  0145  1803               	addlw	1
  4565  0146  3E01               	skipnz
  4566  0147  1903               	goto	u2671
  4567  0148  294A               	addwf	(___flmul@prod+1)^080h,f
  4568  0149  07C3               u2671:
  4569  014A                     	movf	2+(??___flmul+0)^080h+0,w
  4570  014A  0838               	clrz
  4571  014B  1103               	skipnc
  4572  014C  1803               	addlw	1
  4573  014D  3E01               	skipnz
  4574  014E  1903               	goto	u2672
  4575  014F  2951               	addwf	(___flmul@prod+2)^080h,f
  4576  0150  07C4               u2672:
  4577  0151                     	movf	3+(??___flmul+0)^080h+0,w
  4578  0151  0839               	clrz
  4579  0152  1103               	skipnc
  4580  0153  1803               	addlw	1
  4581  0154  3E01               	skipnz
  4582  0155  1903               	goto	u2673
  4583  0156  2958               	addwf	(___flmul@prod+3)^080h,f
  4584  0157  07C5               u2673:
  4585  0158                     
  4586                           	line	128
  4587                           	
  4588                           l2353:	
  4589  0158                     	movlw	08h
  4590  0158  3008               	movwf	(??___flmul+0)^080h+0
  4591  0159  00B6               u2685:
  4592  015A                     	clrc
  4593  015A  1003               	rlf	(___flmul@grs)^080h,f
  4594  015B  0DBC               	rlf	(___flmul@grs+1)^080h,f
  4595  015C  0DBD               	rlf	(___flmul@grs+2)^080h,f
  4596  015D  0DBE               	rlf	(___flmul@grs+3)^080h,f
  4597  015E  0DBF               	decfsz	(??___flmul+0)^080h+0
  4598  015F  0BB6               	goto	u2685
  4599  0160  295A               	line	129
  4600                           	
  4601                           l2355:	
  4602  0161                     	movf	0+(___flmul@b)^080h+01h,w
  4603  0161  082F               	movwf	(??___flmul+0)^080h+0
  4604  0162  00B6               	movf	(??___flmul+0)^080h+0,w
  4605  0163  0836               	movwf	(__Umul8_16@multiplicand)^080h
  4606  0164  00A0               	movf	(___flmul@a)^080h,w
  4607  0165  0832               	fcall	__Umul8_16
  4608  0166  160A  118A  25AA  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4609  016B  1683               	bcf	status, 6	;RP1=0, select bank1
  4610  016C  1303               	movf	(1+(?__Umul8_16))^080h,w
  4611  016D  0821               	movwf	(___flmul@temp+1)^080h
  4612  016E  00C7               	movf	(0+(?__Umul8_16))^080h,w
  4613  016F  0820               	movwf	(___flmul@temp)^080h
  4614  0170  00C6               	line	130
  4615                           	
  4616                           l2357:	
  4617  0171                     	movf	(___flmul@temp)^080h,w
  4618  0171  0846               	movwf	((??___flmul+0)^080h+0)
  4619  0172  00B6               	movf	(___flmul@temp+1)^080h,w
  4620  0173  0847               	movwf	((??___flmul+0)^080h+0+1)
  4621  0174  00B7               	clrf	((??___flmul+0)^080h+0+2)
  4622  0175  01B8               	clrf	((??___flmul+0)^080h+0+3)
  4623  0176  01B9               	movf	0+(??___flmul+0)^080h+0,w
  4624  0177  0836               	addwf	(___flmul@grs)^080h,f
  4625  0178  07BC               	movf	1+(??___flmul+0)^080h+0,w
  4626  0179  0837               	clrz
  4627  017A  1103               	skipnc
  4628  017B  1803               	addlw	1
  4629  017C  3E01               	skipnz
  4630  017D  1903               	goto	u2691
  4631  017E  2980               	addwf	(___flmul@grs+1)^080h,f
  4632  017F  07BD               u2691:
  4633  0180                     	movf	2+(??___flmul+0)^080h+0,w
  4634  0180  0838               	clrz
  4635  0181  1103               	skipnc
  4636  0182  1803               	addlw	1
  4637  0183  3E01               	skipnz
  4638  0184  1903               	goto	u2692
  4639  0185  2987               	addwf	(___flmul@grs+2)^080h,f
  4640  0186  07BE               u2692:
  4641  0187                     	movf	3+(??___flmul+0)^080h+0,w
  4642  0187  0839               	clrz
  4643  0188  1103               	skipnc
  4644  0189  1803               	addlw	1
  4645  018A  3E01               	skipnz
  4646  018B  1903               	goto	u2693
  4647  018C  298E               	addwf	(___flmul@grs+3)^080h,f
  4648  018D  07BF               u2693:
  4649  018E                     
  4650                           	line	131
  4651                           	
  4652                           l2359:	
  4653  018E                     	movf	(___flmul@b)^080h,w
  4654  018E  082E               	movwf	(??___flmul+0)^080h+0
  4655  018F  00B6               	movf	(??___flmul+0)^080h+0,w
  4656  0190  0836               	movwf	(__Umul8_16@multiplicand)^080h
  4657  0191  00A0               	movf	0+(___flmul@a)^080h+01h,w
  4658  0192  0833               	fcall	__Umul8_16
  4659  0193  160A  118A  25AA  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4660  0198  1683               	bcf	status, 6	;RP1=0, select bank1
  4661  0199  1303               	movf	(1+(?__Umul8_16))^080h,w
  4662  019A  0821               	movwf	(___flmul@temp+1)^080h
  4663  019B  00C7               	movf	(0+(?__Umul8_16))^080h,w
  4664  019C  0820               	movwf	(___flmul@temp)^080h
  4665  019D  00C6               	line	132
  4666                           	
  4667                           l2361:	
  4668  019E                     	movf	(___flmul@temp)^080h,w
  4669  019E  0846               	movwf	((??___flmul+0)^080h+0)
  4670  019F  00B6               	movf	(___flmul@temp+1)^080h,w
  4671  01A0  0847               	movwf	((??___flmul+0)^080h+0+1)
  4672  01A1  00B7               	clrf	((??___flmul+0)^080h+0+2)
  4673  01A2  01B8               	clrf	((??___flmul+0)^080h+0+3)
  4674  01A3  01B9               	movf	0+(??___flmul+0)^080h+0,w
  4675  01A4  0836               	addwf	(___flmul@grs)^080h,f
  4676  01A5  07BC               	movf	1+(??___flmul+0)^080h+0,w
  4677  01A6  0837               	clrz
  4678  01A7  1103               	skipnc
  4679  01A8  1803               	addlw	1
  4680  01A9  3E01               	skipnz
  4681  01AA  1903               	goto	u2701
  4682  01AB  29AD               	addwf	(___flmul@grs+1)^080h,f
  4683  01AC  07BD               u2701:
  4684  01AD                     	movf	2+(??___flmul+0)^080h+0,w
  4685  01AD  0838               	clrz
  4686  01AE  1103               	skipnc
  4687  01AF  1803               	addlw	1
  4688  01B0  3E01               	skipnz
  4689  01B1  1903               	goto	u2702
  4690  01B2  29B4               	addwf	(___flmul@grs+2)^080h,f
  4691  01B3  07BE               u2702:
  4692  01B4                     	movf	3+(??___flmul+0)^080h+0,w
  4693  01B4  0839               	clrz
  4694  01B5  1103               	skipnc
  4695  01B6  1803               	addlw	1
  4696  01B7  3E01               	skipnz
  4697  01B8  1903               	goto	u2703
  4698  01B9  29BB               	addwf	(___flmul@grs+3)^080h,f
  4699  01BA  07BF               u2703:
  4700  01BB                     
  4701                           	line	133
  4702                           	
  4703                           l2363:	
  4704  01BB                     	movlw	08h
  4705  01BB  3008               	movwf	(??___flmul+0)^080h+0
  4706  01BC  00B6               u2715:
  4707  01BD                     	clrc
  4708  01BD  1003               	rlf	(___flmul@grs)^080h,f
  4709  01BE  0DBC               	rlf	(___flmul@grs+1)^080h,f
  4710  01BF  0DBD               	rlf	(___flmul@grs+2)^080h,f
  4711  01C0  0DBE               	rlf	(___flmul@grs+3)^080h,f
  4712  01C1  0DBF               	decfsz	(??___flmul+0)^080h+0
  4713  01C2  0BB6               	goto	u2715
  4714  01C3  29BD               	line	134
  4715                           	movf	(___flmul@b)^080h,w
  4716  01C4  082E               	movwf	(??___flmul+0)^080h+0
  4717  01C5  00B6               	movf	(??___flmul+0)^080h+0,w
  4718  01C6  0836               	movwf	(__Umul8_16@multiplicand)^080h
  4719  01C7  00A0               	movf	(___flmul@a)^080h,w
  4720  01C8  0832               	fcall	__Umul8_16
  4721  01C9  160A  118A  25AA  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4722  01CE  1683               	bcf	status, 6	;RP1=0, select bank1
  4723  01CF  1303               	movf	(1+(?__Umul8_16))^080h,w
  4724  01D0  0821               	movwf	(___flmul@temp+1)^080h
  4725  01D1  00C7               	movf	(0+(?__Umul8_16))^080h,w
  4726  01D2  0820               	movwf	(___flmul@temp)^080h
  4727  01D3  00C6               	line	135
  4728                           	
  4729                           l2365:	
  4730  01D4                     	movf	(___flmul@temp)^080h,w
  4731  01D4  0846               	movwf	((??___flmul+0)^080h+0)
  4732  01D5  00B6               	movf	(___flmul@temp+1)^080h,w
  4733  01D6  0847               	movwf	((??___flmul+0)^080h+0+1)
  4734  01D7  00B7               	clrf	((??___flmul+0)^080h+0+2)
  4735  01D8  01B8               	clrf	((??___flmul+0)^080h+0+3)
  4736  01D9  01B9               	movf	0+(??___flmul+0)^080h+0,w
  4737  01DA  0836               	addwf	(___flmul@grs)^080h,f
  4738  01DB  07BC               	movf	1+(??___flmul+0)^080h+0,w
  4739  01DC  0837               	clrz
  4740  01DD  1103               	skipnc
  4741  01DE  1803               	addlw	1
  4742  01DF  3E01               	skipnz
  4743  01E0  1903               	goto	u2721
  4744  01E1  29E3               	addwf	(___flmul@grs+1)^080h,f
  4745  01E2  07BD               u2721:
  4746  01E3                     	movf	2+(??___flmul+0)^080h+0,w
  4747  01E3  0838               	clrz
  4748  01E4  1103               	skipnc
  4749  01E5  1803               	addlw	1
  4750  01E6  3E01               	skipnz
  4751  01E7  1903               	goto	u2722
  4752  01E8  29EA               	addwf	(___flmul@grs+2)^080h,f
  4753  01E9  07BE               u2722:
  4754  01EA                     	movf	3+(??___flmul+0)^080h+0,w
  4755  01EA  0839               	clrz
  4756  01EB  1103               	skipnc
  4757  01EC  1803               	addlw	1
  4758  01ED  3E01               	skipnz
  4759  01EE  1903               	goto	u2723
  4760  01EF  29F1               	addwf	(___flmul@grs+3)^080h,f
  4761  01F0  07BF               u2723:
  4762  01F1                     
  4763                           	line	136
  4764                           	
  4765                           l2367:	
  4766  01F1                     	movf	0+(___flmul@b)^080h+01h,w
  4767  01F1  082F               	movwf	(??___flmul+0)^080h+0
  4768  01F2  00B6               	movf	(??___flmul+0)^080h+0,w
  4769  01F3  0836               	movwf	(__Umul8_16@multiplicand)^080h
  4770  01F4  00A0               	movf	0+(___flmul@a)^080h+02h,w
  4771  01F5  0834               	fcall	__Umul8_16
  4772  01F6  160A  118A  25AA  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4773  01FB  1683               	bcf	status, 6	;RP1=0, select bank1
  4774  01FC  1303               	movf	(1+(?__Umul8_16))^080h,w
  4775  01FD  0821               	movwf	(___flmul@temp+1)^080h
  4776  01FE  00C7               	movf	(0+(?__Umul8_16))^080h,w
  4777  01FF  0820               	movwf	(___flmul@temp)^080h
  4778  0200  00C6               	line	137
  4779                           	movf	(___flmul@temp)^080h,w
  4780  0201  0846               	movwf	((??___flmul+0)^080h+0)
  4781  0202  00B6               	movf	(___flmul@temp+1)^080h,w
  4782  0203  0847               	movwf	((??___flmul+0)^080h+0+1)
  4783  0204  00B7               	clrf	((??___flmul+0)^080h+0+2)
  4784  0205  01B8               	clrf	((??___flmul+0)^080h+0+3)
  4785  0206  01B9               	movf	0+(??___flmul+0)^080h+0,w
  4786  0207  0836               	addwf	(___flmul@prod)^080h,f
  4787  0208  07C2               	movf	1+(??___flmul+0)^080h+0,w
  4788  0209  0837               	clrz
  4789  020A  1103               	skipnc
  4790  020B  1803               	addlw	1
  4791  020C  3E01               	skipnz
  4792  020D  1903               	goto	u2731
  4793  020E  2A10               	addwf	(___flmul@prod+1)^080h,f
  4794  020F  07C3               u2731:
  4795  0210                     	movf	2+(??___flmul+0)^080h+0,w
  4796  0210  0838               	clrz
  4797  0211  1103               	skipnc
  4798  0212  1803               	addlw	1
  4799  0213  3E01               	skipnz
  4800  0214  1903               	goto	u2732
  4801  0215  2A17               	addwf	(___flmul@prod+2)^080h,f
  4802  0216  07C4               u2732:
  4803  0217                     	movf	3+(??___flmul+0)^080h+0,w
  4804  0217  0839               	clrz
  4805  0218  1103               	skipnc
  4806  0219  1803               	addlw	1
  4807  021A  3E01               	skipnz
  4808  021B  1903               	goto	u2733
  4809  021C  2A1E               	addwf	(___flmul@prod+3)^080h,f
  4810  021D  07C5               u2733:
  4811  021E                     
  4812                           	line	138
  4813                           	
  4814                           l2369:	
  4815  021E                     	movf	0+(___flmul@b)^080h+02h,w
  4816  021E  0830               	movwf	(??___flmul+0)^080h+0
  4817  021F  00B6               	movf	(??___flmul+0)^080h+0,w
  4818  0220  0836               	movwf	(__Umul8_16@multiplicand)^080h
  4819  0221  00A0               	movf	0+(___flmul@a)^080h+01h,w
  4820  0222  0833               	fcall	__Umul8_16
  4821  0223  160A  118A  25AA  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4822  0228  1683               	bcf	status, 6	;RP1=0, select bank1
  4823  0229  1303               	movf	(1+(?__Umul8_16))^080h,w
  4824  022A  0821               	movwf	(___flmul@temp+1)^080h
  4825  022B  00C7               	movf	(0+(?__Umul8_16))^080h,w
  4826  022C  0820               	movwf	(___flmul@temp)^080h
  4827  022D  00C6               	line	139
  4828                           	
  4829                           l2371:	
  4830  022E                     	movf	(___flmul@temp)^080h,w
  4831  022E  0846               	movwf	((??___flmul+0)^080h+0)
  4832  022F  00B6               	movf	(___flmul@temp+1)^080h,w
  4833  0230  0847               	movwf	((??___flmul+0)^080h+0+1)
  4834  0231  00B7               	clrf	((??___flmul+0)^080h+0+2)
  4835  0232  01B8               	clrf	((??___flmul+0)^080h+0+3)
  4836  0233  01B9               	movf	0+(??___flmul+0)^080h+0,w
  4837  0234  0836               	addwf	(___flmul@prod)^080h,f
  4838  0235  07C2               	movf	1+(??___flmul+0)^080h+0,w
  4839  0236  0837               	clrz
  4840  0237  1103               	skipnc
  4841  0238  1803               	addlw	1
  4842  0239  3E01               	skipnz
  4843  023A  1903               	goto	u2741
  4844  023B  2A3D               	addwf	(___flmul@prod+1)^080h,f
  4845  023C  07C3               u2741:
  4846  023D                     	movf	2+(??___flmul+0)^080h+0,w
  4847  023D  0838               	clrz
  4848  023E  1103               	skipnc
  4849  023F  1803               	addlw	1
  4850  0240  3E01               	skipnz
  4851  0241  1903               	goto	u2742
  4852  0242  2A44               	addwf	(___flmul@prod+2)^080h,f
  4853  0243  07C4               u2742:
  4854  0244                     	movf	3+(??___flmul+0)^080h+0,w
  4855  0244  0839               	clrz
  4856  0245  1103               	skipnc
  4857  0246  1803               	addlw	1
  4858  0247  3E01               	skipnz
  4859  0248  1903               	goto	u2743
  4860  0249  2A4B               	addwf	(___flmul@prod+3)^080h,f
  4861  024A  07C5               u2743:
  4862  024B                     
  4863                           	line	140
  4864                           	movf	0+(___flmul@b)^080h+02h,w
  4865  024B  0830               	movwf	(??___flmul+0)^080h+0
  4866  024C  00B6               	movf	(??___flmul+0)^080h+0,w
  4867  024D  0836               	movwf	(__Umul8_16@multiplicand)^080h
  4868  024E  00A0               	movf	0+(___flmul@a)^080h+02h,w
  4869  024F  0834               	fcall	__Umul8_16
  4870  0250  160A  118A  25AA  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4871  0255  1683               	bcf	status, 6	;RP1=0, select bank1
  4872  0256  1303               	movf	(1+(?__Umul8_16))^080h,w
  4873  0257  0821               	movwf	(___flmul@temp+1)^080h
  4874  0258  00C7               	movf	(0+(?__Umul8_16))^080h,w
  4875  0259  0820               	movwf	(___flmul@temp)^080h
  4876  025A  00C6               	line	141
  4877                           	
  4878                           l2373:	
  4879  025B                     	movf	(___flmul@temp)^080h,w
  4880  025B  0846               	movwf	((??___flmul+0)^080h+0)
  4881  025C  00B6               	movf	(___flmul@temp+1)^080h,w
  4882  025D  0847               	movwf	((??___flmul+0)^080h+0+1)
  4883  025E  00B7               	clrf	((??___flmul+0)^080h+0+2)
  4884  025F  01B8               	clrf	((??___flmul+0)^080h+0+3)
  4885  0260  01B9               	movlw	08h
  4886  0261  3008               u2755:
  4887  0262                     	clrc
  4888  0262  1003               	rlf	(??___flmul+0)^080h+0,f
  4889  0263  0DB6               	rlf	(??___flmul+0)^080h+1,f
  4890  0264  0DB7               	rlf	(??___flmul+0)^080h+2,f
  4891  0265  0DB8               	rlf	(??___flmul+0)^080h+3,f
  4892  0266  0DB9               u2750:
  4893  0267                     	addlw	-1
  4894  0267  3EFF               	skipz
  4895  0268  1D03               	goto	u2755
  4896  0269  2A62               	movf	0+(??___flmul+0)^080h+0,w
  4897  026A  0836               	addwf	(___flmul@prod)^080h,f
  4898  026B  07C2               	movf	1+(??___flmul+0)^080h+0,w
  4899  026C  0837               	clrz
  4900  026D  1103               	skipnc
  4901  026E  1803               	addlw	1
  4902  026F  3E01               	skipnz
  4903  0270  1903               	goto	u2761
  4904  0271  2A73               	addwf	(___flmul@prod+1)^080h,f
  4905  0272  07C3               u2761:
  4906  0273                     	movf	2+(??___flmul+0)^080h+0,w
  4907  0273  0838               	clrz
  4908  0274  1103               	skipnc
  4909  0275  1803               	addlw	1
  4910  0276  3E01               	skipnz
  4911  0277  1903               	goto	u2762
  4912  0278  2A7A               	addwf	(___flmul@prod+2)^080h,f
  4913  0279  07C4               u2762:
  4914  027A                     	movf	3+(??___flmul+0)^080h+0,w
  4915  027A  0839               	clrz
  4916  027B  1103               	skipnc
  4917  027C  1803               	addlw	1
  4918  027D  3E01               	skipnz
  4919  027E  1903               	goto	u2763
  4920  027F  2A81               	addwf	(___flmul@prod+3)^080h,f
  4921  0280  07C5               u2763:
  4922  0281                     
  4923                           	line	145
  4924                           	
  4925                           l2375:	
  4926  0281                     	movf	(___flmul@grs)^080h,w
  4927  0281  083C               	movwf	(??___flmul+0)^080h+0
  4928  0282  00B6               	movf	(___flmul@grs+1)^080h,w
  4929  0283  083D               	movwf	((??___flmul+0)^080h+0+1)
  4930  0284  00B7               	movf	(___flmul@grs+2)^080h,w
  4931  0285  083E               	movwf	((??___flmul+0)^080h+0+2)
  4932  0286  00B8               	movf	(___flmul@grs+3)^080h,w
  4933  0287  083F               	movwf	((??___flmul+0)^080h+0+3)
  4934  0288  00B9               	movlw	018h
  4935  0289  3018               u2775:
  4936  028A                     	clrc
  4937  028A  1003               	rrf	(??___flmul+0)^080h+3,f
  4938  028B  0CB9               	rrf	(??___flmul+0)^080h+2,f
  4939  028C  0CB8               	rrf	(??___flmul+0)^080h+1,f
  4940  028D  0CB7               	rrf	(??___flmul+0)^080h+0,f
  4941  028E  0CB6               u2770:
  4942  028F                     	addlw	-1
  4943  028F  3EFF               	skipz
  4944  0290  1D03               	goto	u2775
  4945  0291  2A8A               	movf	0+(??___flmul+0)^080h+0,w
  4946  0292  0836               	addwf	(___flmul@prod)^080h,f
  4947  0293  07C2               	movf	1+(??___flmul+0)^080h+0,w
  4948  0294  0837               	clrz
  4949  0295  1103               	skipnc
  4950  0296  1803               	addlw	1
  4951  0297  3E01               	skipnz
  4952  0298  1903               	goto	u2781
  4953  0299  2A9B               	addwf	(___flmul@prod+1)^080h,f
  4954  029A  07C3               u2781:
  4955  029B                     	movf	2+(??___flmul+0)^080h+0,w
  4956  029B  0838               	clrz
  4957  029C  1103               	skipnc
  4958  029D  1803               	addlw	1
  4959  029E  3E01               	skipnz
  4960  029F  1903               	goto	u2782
  4961  02A0  2AA2               	addwf	(___flmul@prod+2)^080h,f
  4962  02A1  07C4               u2782:
  4963  02A2                     	movf	3+(??___flmul+0)^080h+0,w
  4964  02A2  0839               	clrz
  4965  02A3  1103               	skipnc
  4966  02A4  1803               	addlw	1
  4967  02A5  3E01               	skipnz
  4968  02A6  1903               	goto	u2783
  4969  02A7  2AA9               	addwf	(___flmul@prod+3)^080h,f
  4970  02A8  07C5               u2783:
  4971  02A9                     
  4972                           	line	146
  4973                           	
  4974                           l2377:	
  4975  02A9                     	movlw	08h
  4976  02A9  3008               	movwf	(??___flmul+0)^080h+0
  4977  02AA  00B6               u2795:
  4978  02AB                     	clrc
  4979  02AB  1003               	rlf	(___flmul@grs)^080h,f
  4980  02AC  0DBC               	rlf	(___flmul@grs+1)^080h,f
  4981  02AD  0DBD               	rlf	(___flmul@grs+2)^080h,f
  4982  02AE  0DBE               	rlf	(___flmul@grs+3)^080h,f
  4983  02AF  0DBF               	decfsz	(??___flmul+0)^080h+0
  4984  02B0  0BB6               	goto	u2795
  4985  02B1  2AAB               	line	149
  4986                           	
  4987                           l2379:	
  4988  02B2                     	movf	(___flmul@bexp)^080h,w
  4989  02B2  0841               	addwf	(___flmul@aexp)^080h,w
  4990  02B3  0740               	movwf	(??___flmul+0)^080h+0
  4991  02B4  00B6               	clrf	(??___flmul+0)^080h+0+1
  4992  02B5  01B7               	rlf	1+(??___flmul+0)^080h+0,f
  4993  02B6  0DB7               	
  4994                           	movf	0+(??___flmul+0)^080h+0,w
  4995  02B7  0836               	addlw	low(-126)
  4996  02B8  3E82               	movwf	(___flmul@temp)^080h
  4997  02B9  00C6               	movf	1+(??___flmul+0)^080h+0,w
  4998  02BA  0837               	skipnc
  4999  02BB  1803               	addlw	1
  5000  02BC  3E01               	addlw	high(-126)
  5001  02BD  3EFF               	movwf	1+(___flmul@temp)^080h
  5002  02BE  00C7               	line	152
  5003                           	goto	l2391
  5004  02BF  2ADF               	
  5005                           l801:	
  5006  02C0                     	line	153
  5007                           	
  5008                           l2381:	
  5009  02C0                     	movlw	01h
  5010  02C0  3001               	movwf	(??___flmul+0)^080h+0
  5011  02C1  00B6               u2805:
  5012  02C2                     	clrc
  5013  02C2  1003               	rlf	(___flmul@prod)^080h,f
  5014  02C3  0DC2               	rlf	(___flmul@prod+1)^080h,f
  5015  02C4  0DC3               	rlf	(___flmul@prod+2)^080h,f
  5016  02C5  0DC4               	rlf	(___flmul@prod+3)^080h,f
  5017  02C6  0DC5               	decfsz	(??___flmul+0)^080h+0
  5018  02C7  0BB6               	goto	u2805
  5019  02C8  2AC2               	line	154
  5020                           	
  5021                           l2383:	
  5022  02C9                     	btfss	(___flmul@grs+3)^080h,(31)&7
  5023  02C9  1FBF               	goto	u2811
  5024  02CA  2ACC               	goto	u2810
  5025  02CB  2ACD               u2811:
  5026  02CC                     	goto	l2387
  5027  02CC  2ACF               u2810:
  5028  02CD                     	line	155
  5029                           	
  5030                           l2385:	
  5031  02CD                     	bsf	(___flmul@prod)^080h+(0/8),(0)&7
  5032  02CD  1442               	goto	l2387
  5033  02CE  2ACF               	line	156
  5034                           	
  5035                           l802:	
  5036  02CF                     	line	157
  5037                           	
  5038                           l2387:	
  5039  02CF                     	movlw	01h
  5040  02CF  3001               	movwf	(??___flmul+0)^080h+0
  5041  02D0  00B6               u2825:
  5042  02D1                     	clrc
  5043  02D1  1003               	rlf	(___flmul@grs)^080h,f
  5044  02D2  0DBC               	rlf	(___flmul@grs+1)^080h,f
  5045  02D3  0DBD               	rlf	(___flmul@grs+2)^080h,f
  5046  02D4  0DBE               	rlf	(___flmul@grs+3)^080h,f
  5047  02D5  0DBF               	decfsz	(??___flmul+0)^080h+0
  5048  02D6  0BB6               	goto	u2825
  5049  02D7  2AD1               	line	158
  5050                           	
  5051                           l2389:	
  5052  02D8                     	movlw	0FFh
  5053  02D8  30FF               	addwf	(___flmul@temp)^080h,f
  5054  02D9  07C6               	skipnc
  5055  02DA  1803               	incf	(___flmul@temp+1)^080h,f
  5056  02DB  0AC7               	movlw	0FFh
  5057  02DC  30FF               	addwf	(___flmul@temp+1)^080h,f
  5058  02DD  07C7               	goto	l2391
  5059  02DE  2ADF               	line	159
  5060                           	
  5061                           l800:	
  5062  02DF                     	line	152
  5063                           	
  5064                           l2391:	
  5065  02DF                     	btfss	(___flmul@prod+2)^080h,(23)&7
  5066  02DF  1FC4               	goto	u2831
  5067  02E0  2AE2               	goto	u2830
  5068  02E1  2AE3               u2831:
  5069  02E2                     	goto	l2381
  5070  02E2  2AC0               u2830:
  5071  02E3                     	goto	l2393
  5072  02E3  2AE4               	
  5073                           l803:	
  5074  02E4                     	line	163
  5075                           	
  5076                           l2393:	
  5077  02E4                     	clrf	(___flmul@aexp)^080h
  5078  02E4  01C0               	line	164
  5079                           	
  5080                           l2395:	
  5081  02E5                     	btfss	(___flmul@grs+3)^080h,(31)&7
  5082  02E5  1FBF               	goto	u2841
  5083  02E6  2AE8               	goto	u2840
  5084  02E7  2AE9               u2841:
  5085  02E8                     	goto	l2403
  5086  02E8  2B09               u2840:
  5087  02E9                     	line	165
  5088                           	
  5089                           l2397:	
  5090  02E9                     	movlw	0FFh
  5091  02E9  30FF               	andwf	(___flmul@grs)^080h,w
  5092  02EA  053C               	movwf	(??___flmul+0)^080h+0
  5093  02EB  00B6               	movlw	0FFh
  5094  02EC  30FF               	andwf	(___flmul@grs+1)^080h,w
  5095  02ED  053D               	movwf	((??___flmul+0)^080h+0+1)
  5096  02EE  00B7               	movlw	0FFh
  5097  02EF  30FF               	andwf	(___flmul@grs+2)^080h,w
  5098  02F0  053E               	movwf	((??___flmul+0)^080h+0+2)
  5099  02F1  00B8               	movlw	07Fh
  5100  02F2  307F               	andwf	(___flmul@grs+3)^080h,w
  5101  02F3  053F               	movwf	((??___flmul+0)^080h+0+3)
  5102  02F4  00B9               	movf	3+(??___flmul+0)^080h+0,w
  5103  02F5  0839               	iorwf	2+(??___flmul+0)^080h+0,w
  5104  02F6  0438               	iorwf	1+(??___flmul+0)^080h+0,w
  5105  02F7  0437               	iorwf	0+(??___flmul+0)^080h+0,w
  5106  02F8  0436               	skipnz
  5107  02F9  1903               	goto	u2851
  5108  02FA  2AFC               	goto	u2850
  5109  02FB  2AFD               u2851:
  5110  02FC                     	goto	l805
  5111  02FC  2B00               u2850:
  5112  02FD                     	line	166
  5113                           	
  5114                           l2399:	
  5115  02FD                     	clrf	(___flmul@aexp)^080h
  5116  02FD  01C0               	incf	(___flmul@aexp)^080h,f
  5117  02FE  0AC0               	line	167
  5118                           	goto	l2403
  5119  02FF  2B09               	line	168
  5120                           	
  5121                           l805:	
  5122  0300                     	line	169
  5123                           	btfss	(___flmul@prod)^080h,(0)&7
  5124  0300  1C42               	goto	u2861
  5125  0301  2B03               	goto	u2860
  5126  0302  2B04               u2861:
  5127  0303                     	goto	l2403
  5128  0303  2B09               u2860:
  5129  0304                     	line	170
  5130                           	
  5131                           l2401:	
  5132  0304                     	clrf	(___flmul@aexp)^080h
  5133  0304  01C0               	incf	(___flmul@aexp)^080h,f
  5134  0305  0AC0               	goto	l2403
  5135  0306  2B09               	line	171
  5136                           	
  5137                           l807:	
  5138  0307                     	goto	l2403
  5139  0307  2B09               	line	172
  5140                           	
  5141                           l806:	
  5142  0308                     	goto	l2403
  5143  0308  2B09               	line	173
  5144                           	
  5145                           l804:	
  5146  0309                     	line	174
  5147                           	
  5148                           l2403:	
  5149  0309                     	movf	((___flmul@aexp)^080h),w
  5150  0309  0840               	btfsc	status,2
  5151  030A  1903               	goto	u2871
  5152  030B  2B0D               	goto	u2870
  5153  030C  2B0E               u2871:
  5154  030D                     	goto	l2413
  5155  030D  2B41               u2870:
  5156  030E                     	line	175
  5157                           	
  5158                           l2405:	
  5159  030E                     	movlw	01h
  5160  030E  3001               	addwf	(___flmul@prod)^080h,f
  5161  030F  07C2               	movlw	0
  5162  0310  3000               	skipnc
  5163  0311  1803               movlw 1
  5164  0312  3001               	addwf	(___flmul@prod+1)^080h,f
  5165  0313  07C3               	movlw	0
  5166  0314  3000               	skipnc
  5167  0315  1803               movlw 1
  5168  0316  3001               	addwf	(___flmul@prod+2)^080h,f
  5169  0317  07C4               	movlw	0
  5170  0318  3000               	skipnc
  5171  0319  1803               movlw 1
  5172  031A  3001               	addwf	(___flmul@prod+3)^080h,f
  5173  031B  07C5               	line	176
  5174                           	
  5175                           l2407:	
  5176  031C                     	btfss	(___flmul@prod+3)^080h,(24)&7
  5177  031C  1C45               	goto	u2881
  5178  031D  2B1F               	goto	u2880
  5179  031E  2B20               u2881:
  5180  031F                     	goto	l2413
  5181  031F  2B41               u2880:
  5182  0320                     	line	177
  5183                           	
  5184                           l2409:	
  5185  0320                     	movf	(___flmul@prod)^080h,w
  5186  0320  0842               	movwf	(??___flmul+0)^080h+0
  5187  0321  00B6               	movf	(___flmul@prod+1)^080h,w
  5188  0322  0843               	movwf	((??___flmul+0)^080h+0+1)
  5189  0323  00B7               	movf	(___flmul@prod+2)^080h,w
  5190  0324  0844               	movwf	((??___flmul+0)^080h+0+2)
  5191  0325  00B8               	movf	(___flmul@prod+3)^080h,w
  5192  0326  0845               	movwf	((??___flmul+0)^080h+0+3)
  5193  0327  00B9               	movlw	01h
  5194  0328  3001               	movwf	(??___flmul+4)^080h+0
  5195  0329  00BA               u2895:
  5196  032A                     	rlf	(??___flmul+0)^080h+3,w
  5197  032A  0D39               	rrf	(??___flmul+0)^080h+3,f
  5198  032B  0CB9               	rrf	(??___flmul+0)^080h+2,f
  5199  032C  0CB8               	rrf	(??___flmul+0)^080h+1,f
  5200  032D  0CB7               	rrf	(??___flmul+0)^080h+0,f
  5201  032E  0CB6               u2890:
  5202  032F                     	decfsz	(??___flmul+4)^080h+0,f
  5203  032F  0BBA               	goto	u2895
  5204  0330  2B2A               	movf	3+(??___flmul+0)^080h+0,w
  5205  0331  0839               	movwf	(___flmul@prod+3)^080h
  5206  0332  00C5               	movf	2+(??___flmul+0)^080h+0,w
  5207  0333  0838               	movwf	(___flmul@prod+2)^080h
  5208  0334  00C4               	movf	1+(??___flmul+0)^080h+0,w
  5209  0335  0837               	movwf	(___flmul@prod+1)^080h
  5210  0336  00C3               	movf	0+(??___flmul+0)^080h+0,w
  5211  0337  0836               	movwf	(___flmul@prod)^080h
  5212  0338  00C2               
  5213                           	line	178
  5214                           	
  5215                           l2411:	
  5216  0339                     	movlw	01h
  5217  0339  3001               	addwf	(___flmul@temp)^080h,f
  5218  033A  07C6               	skipnc
  5219  033B  1803               	incf	(___flmul@temp+1)^080h,f
  5220  033C  0AC7               	movlw	0
  5221  033D  3000               	addwf	(___flmul@temp+1)^080h,f
  5222  033E  07C7               	goto	l2413
  5223  033F  2B41               	line	179
  5224                           	
  5225                           l809:	
  5226  0340                     	goto	l2413
  5227  0340  2B41               	line	180
  5228                           	
  5229                           l808:	
  5230  0341                     	line	183
  5231                           	
  5232                           l2413:	
  5233  0341                     	movf	(___flmul@temp+1)^080h,w
  5234  0341  0847               	xorlw	80h
  5235  0342  3A80               	movwf	btemp+1
  5236  0343  00FF               	movlw	(0)^80h
  5237  0344  3080               	subwf	btemp+1,w
  5238  0345  027F               	skipz
  5239  0346  1D03               	goto	u2905
  5240  0347  2B4A               	movlw	0FFh
  5241  0348  30FF               	subwf	(___flmul@temp)^080h,w
  5242  0349  0246               u2905:
  5243  034A                     
  5244                           	skipc
  5245  034A  1C03               	goto	u2901
  5246  034B  2B4D               	goto	u2900
  5247  034C  2B4E               u2901:
  5248  034D                     	goto	l2417
  5249  034D  2B59               u2900:
  5250  034E                     	line	184
  5251                           	
  5252                           l2415:	
  5253  034E                     	movlw	07Fh
  5254  034E  307F               	bsf	status, 5	;RP0=1, select bank1
  5255  034F  1683               	bcf	status, 6	;RP1=0, select bank1
  5256  0350  1303               	movwf	(___flmul@prod+3)^080h
  5257  0351  00C5               	movlw	080h
  5258  0352  3080               	movwf	(___flmul@prod+2)^080h
  5259  0353  00C4               	movlw	0
  5260  0354  3000               	movwf	(___flmul@prod+1)^080h
  5261  0355  00C3               	movlw	0
  5262  0356  3000               	movwf	(___flmul@prod)^080h
  5263  0357  00C2               
  5264                           	line	185
  5265                           	goto	l811
  5266  0358  2B90               	line	187
  5267                           	
  5268                           l810:	
  5269  0359                     	
  5270                           l2417:	
  5271  0359                     	bsf	status, 5	;RP0=1, select bank1
  5272  0359  1683               	bcf	status, 6	;RP1=0, select bank1
  5273  035A  1303               	movf	(___flmul@temp+1)^080h,w
  5274  035B  0847               	xorlw	80h
  5275  035C  3A80               	movwf	btemp+1
  5276  035D  00FF               	movlw	(0)^80h
  5277  035E  3080               	subwf	btemp+1,w
  5278  035F  027F               	skipz
  5279  0360  1D03               	goto	u2915
  5280  0361  2B64               	movlw	01h
  5281  0362  3001               	subwf	(___flmul@temp)^080h,w
  5282  0363  0246               u2915:
  5283  0364                     
  5284                           	skipnc
  5285  0364  1803               	goto	u2911
  5286  0365  2B67               	goto	u2910
  5287  0366  2B68               u2911:
  5288  0367                     	goto	l2423
  5289  0367  2B74               u2910:
  5290  0368                     	line	188
  5291                           	
  5292                           l2419:	
  5293  0368                     	movlw	high highword(0)
  5294  0368  3000               	bsf	status, 5	;RP0=1, select bank1
  5295  0369  1683               	bcf	status, 6	;RP1=0, select bank1
  5296  036A  1303               	movwf	(___flmul@prod+3)^080h
  5297  036B  00C5               	movlw	low highword(0)
  5298  036C  3000               	movwf	(___flmul@prod+2)^080h
  5299  036D  00C4               	movlw	high(0)
  5300  036E  3000               	movwf	(___flmul@prod+1)^080h
  5301  036F  00C3               	movlw	low(0)
  5302  0370  3000               	movwf	(___flmul@prod)^080h
  5303  0371  00C2               
  5304                           	line	190
  5305                           	
  5306                           l2421:	
  5307  0372                     	clrf	(___flmul@sign)^080h
  5308  0372  01BB               	line	191
  5309                           	goto	l811
  5310  0373  2B90               	line	192
  5311                           	
  5312                           l812:	
  5313  0374                     	line	194
  5314                           	
  5315                           l2423:	
  5316  0374                     	bsf	status, 5	;RP0=1, select bank1
  5317  0374  1683               	bcf	status, 6	;RP1=0, select bank1
  5318  0375  1303               	movf	(___flmul@temp)^080h,w
  5319  0376  0846               	movwf	(??___flmul+0)^080h+0
  5320  0377  00B6               	movf	(??___flmul+0)^080h+0,w
  5321  0378  0836               	movwf	(___flmul@bexp)^080h
  5322  0379  00C1               	line	195
  5323                           	movlw	0FFh
  5324  037A  30FF               	andwf	(___flmul@prod)^080h,f
  5325  037B  05C2               	movlw	0FFh
  5326  037C  30FF               	andwf	(___flmul@prod+1)^080h,f
  5327  037D  05C3               	movlw	07Fh
  5328  037E  307F               	andwf	(___flmul@prod+2)^080h,f
  5329  037F  05C4               	movlw	0
  5330  0380  3000               	andwf	(___flmul@prod+3)^080h,f
  5331  0381  05C5               	line	196
  5332                           	
  5333                           l2425:	
  5334  0382                     	btfss	(___flmul@bexp)^080h,(0)&7
  5335  0382  1C41               	goto	u2921
  5336  0383  2B85               	goto	u2920
  5337  0384  2B86               u2921:
  5338  0385                     	goto	l2429
  5339  0385  2B88               u2920:
  5340  0386                     	line	197
  5341                           	
  5342                           l2427:	
  5343  0386                     	bsf	0+(___flmul@prod)^080h+02h+(7/8),(7)&7
  5344  0386  17C4               	goto	l2429
  5345  0387  2B88               	line	198
  5346                           	
  5347                           l814:	
  5348  0388                     	line	199
  5349                           	
  5350                           l2429:	
  5351  0388                     	movf	(___flmul@bexp)^080h,w
  5352  0388  0841               	movwf	(??___flmul+0)^080h+0
  5353  0389  00B6               	clrc
  5354  038A  1003               	rrf	(??___flmul+0)^080h+0,w
  5355  038B  0C36               	movwf	(??___flmul+1)^080h+0
  5356  038C  00B7               	movf	(??___flmul+1)^080h+0,w
  5357  038D  0837               	movwf	0+(___flmul@prod)^080h+03h
  5358  038E  00C5               	goto	l811
  5359  038F  2B90               	line	200
  5360                           	
  5361                           l813:	
  5362  0390                     	
  5363                           l811:	
  5364  0390                     	line	201
  5365                           	movf	(___flmul@sign)^080h,w
  5366  0390  083B               	movwf	(??___flmul+0)^080h+0
  5367  0391  00B6               	movf	(??___flmul+0)^080h+0,w
  5368  0392  0836               	iorwf	0+(___flmul@prod)^080h+03h,f
  5369  0393  04C5               	line	203
  5370                           	
  5371                           l2431:	
  5372  0394                     	movf	(___flmul@prod+3)^080h,w
  5373  0394  0845               	movwf	(?___flmul+3)^080h
  5374  0395  00B1               	movf	(___flmul@prod+2)^080h,w
  5375  0396  0844               	movwf	(?___flmul+2)^080h
  5376  0397  00B0               	movf	(___flmul@prod+1)^080h,w
  5377  0398  0843               	movwf	(?___flmul+1)^080h
  5378  0399  00AF               	movf	(___flmul@prod)^080h,w
  5379  039A  0842               	movwf	(?___flmul)^080h
  5380  039B  00AE               
  5381                           	goto	l799
  5382  039C  2B9D               	
  5383                           l2433:	
  5384  039D                     	line	205
  5385                           	
  5386                           l799:	
  5387  039D                     	return
  5388  039D  0008               	opt stack 0
  5389                           GLOBAL	__end_of___flmul
  5390                           	__end_of___flmul:
  5391  039E                     	signat	___flmul,8316
  5392                           	global	__Umul8_16
  5393                           
  5394 ;; *************** function __Umul8_16 *****************
  5395 ;; Defined at:
  5396 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;  multiplier      1    wreg     unsigned char 
  5399 ;;  multiplicand    1    0[BANK1 ] unsigned char 
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;  multiplier      1    8[BANK1 ] unsigned char 
  5402 ;;  word_mpld       2    6[BANK1 ] unsigned int 
  5403 ;;  product         2    4[BANK1 ] unsigned int 
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  2    0[BANK1 ] unsigned int 
  5406 ;; Registers used:
  5407 ;;		wreg, status,2, status,0
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5413 ;;      Params:         0       0       2       0       0
  5414 ;;      Locals:         0       0       5       0       0
  5415 ;;      Temps:          0       0       2       0       0
  5416 ;;      Totals:         0       0       9       0       0
  5417 ;;Total ram usage:        9 bytes
  5418 ;; Hardware stack levels used:    1
  5419 ;; Hardware stack levels required when called:    5
  5420 ;; This function calls:
  5421 ;;		Nothing
  5422 ;; This function is called by:
  5423 ;;		___flmul
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           psect	text9,local,class=CODE,delta=2,merge=1,group=1
  5427                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  5428                           	line	4
  5429                           global __ptext9
  5430                           __ptext9:	;psect for function __Umul8_16
  5431  15AA                     psect	text9
  5432                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  5433                           	line	4
  5434                           	global	__size_of__Umul8_16
  5435                           	__size_of__Umul8_16	equ	__end_of__Umul8_16-__Umul8_16
  5436  002C                     	
  5437                           __Umul8_16:	
  5438  15AA                     ;incstack = 0
  5439                           	opt	stack 0
  5440                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5441                           ;__Umul8_16@multiplier stored from wreg
  5442                           	bsf	status, 5	;RP0=1, select bank1
  5443  15AA  1683               	bcf	status, 6	;RP1=0, select bank1
  5444  15AB  1303               	movwf	(__Umul8_16@multiplier)^080h
  5445  15AC  00A8               	line	5
  5446                           	
  5447                           l2139:	
  5448  15AD                     	clrf	(__Umul8_16@product)^080h
  5449  15AD  01A4               	clrf	(__Umul8_16@product+1)^080h
  5450  15AE  01A5               	line	6
  5451                           	
  5452                           l2141:	
  5453  15AF                     	movf	(__Umul8_16@multiplicand)^080h,w
  5454  15AF  0820               	movwf	(??__Umul8_16+0)^080h+0
  5455  15B0  00A2               	clrf	(??__Umul8_16+0)^080h+0+1
  5456  15B1  01A3               	movf	0+(??__Umul8_16+0)^080h+0,w
  5457  15B2  0822               	movwf	(__Umul8_16@word_mpld)^080h
  5458  15B3  00A6               	movf	1+(??__Umul8_16+0)^080h+0,w
  5459  15B4  0823               	movwf	(__Umul8_16@word_mpld+1)^080h
  5460  15B5  00A7               	goto	l2143
  5461  15B6  2DB7               	line	50
  5462                           	
  5463                           l836:	
  5464  15B7                     	line	51
  5465                           	
  5466                           l2143:	
  5467  15B7                     	btfss	(__Umul8_16@multiplier)^080h,(0)&7
  5468  15B7  1C28               	goto	u2261
  5469  15B8  2DBA               	goto	u2260
  5470  15B9  2DBB               u2261:
  5471  15BA                     	goto	l837
  5472  15BA  2DC1               u2260:
  5473  15BB                     	line	52
  5474                           	
  5475                           l2145:	
  5476  15BB                     	movf	(__Umul8_16@word_mpld)^080h,w
  5477  15BB  0826               	addwf	(__Umul8_16@product)^080h,f
  5478  15BC  07A4               	skipnc
  5479  15BD  1803               	incf	(__Umul8_16@product+1)^080h,f
  5480  15BE  0AA5               	movf	(__Umul8_16@word_mpld+1)^080h,w
  5481  15BF  0827               	addwf	(__Umul8_16@product+1)^080h,f
  5482  15C0  07A5               	line	53
  5483                           	
  5484                           l837:	
  5485  15C1                     	line	54
  5486                           	movlw	01h
  5487  15C1  3001               	
  5488                           u2275:
  5489  15C2                     	clrc
  5490  15C2  1003               	rlf	(__Umul8_16@word_mpld)^080h,f
  5491  15C3  0DA6               	rlf	(__Umul8_16@word_mpld+1)^080h,f
  5492  15C4  0DA7               	addlw	-1
  5493  15C5  3EFF               	skipz
  5494  15C6  1D03               	goto	u2275
  5495  15C7  2DC2               	line	55
  5496                           	clrc
  5497  15C8  1003               	rrf	(__Umul8_16@multiplier)^080h,f
  5498  15C9  0CA8               
  5499                           	line	56
  5500                           	
  5501                           l2147:	
  5502  15CA                     	movf	((__Umul8_16@multiplier)^080h),w
  5503  15CA  0828               	btfss	status,2
  5504  15CB  1D03               	goto	u2281
  5505  15CC  2DCE               	goto	u2280
  5506  15CD  2DCF               u2281:
  5507  15CE                     	goto	l2143
  5508  15CE  2DB7               u2280:
  5509  15CF                     	goto	l2149
  5510  15CF  2DD0               	
  5511                           l838:	
  5512  15D0                     	line	59
  5513                           	
  5514                           l2149:	
  5515  15D0                     	movf	(__Umul8_16@product+1)^080h,w
  5516  15D0  0825               	movwf	(?__Umul8_16+1)^080h
  5517  15D1  00A1               	movf	(__Umul8_16@product)^080h,w
  5518  15D2  0824               	movwf	(?__Umul8_16)^080h
  5519  15D3  00A0               	goto	l839
  5520  15D4  2DD5               	
  5521                           l2151:	
  5522  15D5                     	line	60
  5523                           	
  5524                           l839:	
  5525  15D5                     	return
  5526  15D5  0008               	opt stack 0
  5527                           GLOBAL	__end_of__Umul8_16
  5528                           	__end_of__Umul8_16:
  5529  15D6                     	signat	__Umul8_16,8314
  5530                           	global	_tecladoLer
  5531                           
  5532 ;; *************** function _tecladoLer *****************
  5533 ;; Defined at:
  5534 ;;		line 40 in file "./teclado.h"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;		None
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;		None
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  1    wreg      unsigned char 
  5541 ;; Registers used:
  5542 ;;		wreg, fsr0l, fsr0h, status,2, pclath
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5548 ;;      Params:         0       0       0       0       0
  5549 ;;      Locals:         0       0       0       0       0
  5550 ;;      Temps:          0       0       1       0       0
  5551 ;;      Totals:         0       0       1       0       0
  5552 ;;Total ram usage:        1 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:    5
  5555 ;; This function calls:
  5556 ;;		Nothing
  5557 ;; This function is called by:
  5558 ;;		_main
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5562                           	file	"./teclado.h"
  5563                           	line	40
  5564                           global __ptext10
  5565                           __ptext10:	;psect for function _tecladoLer
  5566  0E8B                     psect	text10
  5567                           	file	"./teclado.h"
  5568                           	line	40
  5569                           	global	__size_of_tecladoLer
  5570                           	__size_of_tecladoLer	equ	__end_of_tecladoLer-_tecladoLer
  5571  0175                     	
  5572                           _tecladoLer:	
  5573  0E8B                     ;incstack = 0
  5574                           	opt	stack 2
  5575                           ; Regs used in _tecladoLer: [wreg-fsr0h+status,2+pclath]
  5576                           	line	42
  5577                           	
  5578                           l2971:	
  5579  0E8B                     ;./teclado.h: 42:     PORTBbits.RB7=1,PORTBbits.RB6=1,PORTBbits.RB5=1,PORTBbits.RB4=0;
  5580                           	bcf	status, 5	;RP0=0, select bank0
  5581  0E8B  1283               	bcf	status, 6	;RP1=0, select bank0
  5582  0E8C  1303               	bsf	(6),7	;volatile
  5583  0E8D  1786               	bsf	(6),6	;volatile
  5584  0E8E  1706               	bsf	(6),5	;volatile
  5585  0E8F  1686               	bcf	(6),4	;volatile
  5586  0E90  1206               	line	43
  5587                           ;./teclado.h: 43:     __nop();__nop();
  5588                           	opt	asmopt_push
  5589                           	opt	asmopt_off
  5590                           	nop
  5591  0E91  0000               	opt	asmopt_pop
  5592                           	opt	asmopt_push
  5593                           	opt	asmopt_off
  5594                           	nop
  5595  0E92  0000               	opt	asmopt_pop
  5596                           	line	44
  5597                           ;./teclado.h: 44:     if(!PORTBbits.RB0) tecAtual = tabTeclas[0];
  5598                           	bcf	status, 5	;RP0=0, select bank0
  5599  0E93  1283               	bcf	status, 6	;RP1=0, select bank0
  5600  0E94  1303               	btfsc	(6),0	;volatile
  5601  0E95  1806               	goto	u4011
  5602  0E96  2E98               	goto	u4010
  5603  0E97  2E99               u4011:
  5604  0E98                     	goto	l183
  5605  0E98  2EA8               u4010:
  5606  0E99                     	
  5607                           l2973:	
  5608  0E99                     	movlw	low((_tabTeclas-__stringbase))
  5609  0E99  3001               	movwf	fsr0
  5610  0E9A  0084               	fcall	stringdir
  5611  0E9B  120A  158A  200A  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  5612  0EA0  1683               	bcf	status, 6	;RP1=0, select bank1
  5613  0EA1  1303               	movwf	(??_tecladoLer+0)^080h+0
  5614  0EA2  00A0               	movf	(??_tecladoLer+0)^080h+0,w
  5615  0EA3  0820               	bcf	status, 5	;RP0=0, select bank0
  5616  0EA4  1283               	bcf	status, 6	;RP1=0, select bank0
  5617  0EA5  1303               	movwf	(_tecAtual)
  5618  0EA6  00CE               	goto	l2981
  5619  0EA7  2EE4               	line	45
  5620                           ;./teclado.h: 45:     else if(!PORTBbits.RB1) tecAtual = tabTeclas[1];
  5621                           	
  5622                           l183:	
  5623  0EA8                     	btfsc	(6),1	;volatile
  5624  0EA8  1886               	goto	u4021
  5625  0EA9  2EAB               	goto	u4020
  5626  0EAA  2EAC               u4021:
  5627  0EAB                     	goto	l185
  5628  0EAB  2EBB               u4020:
  5629  0EAC                     	
  5630                           l2975:	
  5631  0EAC                     	movlw	low((((_tabTeclas+01h)-__stringbase)|8000h))
  5632  0EAC  3002               	movwf	fsr0
  5633  0EAD  0084               	fcall	stringdir
  5634  0EAE  120A  158A  200A  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  5635  0EB3  1683               	bcf	status, 6	;RP1=0, select bank1
  5636  0EB4  1303               	movwf	(??_tecladoLer+0)^080h+0
  5637  0EB5  00A0               	movf	(??_tecladoLer+0)^080h+0,w
  5638  0EB6  0820               	bcf	status, 5	;RP0=0, select bank0
  5639  0EB7  1283               	bcf	status, 6	;RP1=0, select bank0
  5640  0EB8  1303               	movwf	(_tecAtual)
  5641  0EB9  00CE               	goto	l2981
  5642  0EBA  2EE4               	line	46
  5643                           ;./teclado.h: 46:     else if(!PORTBbits.RB2) tecAtual = tabTeclas[2];
  5644                           	
  5645                           l185:	
  5646  0EBB                     	btfsc	(6),2	;volatile
  5647  0EBB  1906               	goto	u4031
  5648  0EBC  2EBE               	goto	u4030
  5649  0EBD  2EBF               u4031:
  5650  0EBE                     	goto	l187
  5651  0EBE  2ECE               u4030:
  5652  0EBF                     	
  5653                           l2977:	
  5654  0EBF                     	movlw	low((((_tabTeclas+02h)-__stringbase)|8000h))
  5655  0EBF  3003               	movwf	fsr0
  5656  0EC0  0084               	fcall	stringdir
  5657  0EC1  120A  158A  200A  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  5658  0EC6  1683               	bcf	status, 6	;RP1=0, select bank1
  5659  0EC7  1303               	movwf	(??_tecladoLer+0)^080h+0
  5660  0EC8  00A0               	movf	(??_tecladoLer+0)^080h+0,w
  5661  0EC9  0820               	bcf	status, 5	;RP0=0, select bank0
  5662  0ECA  1283               	bcf	status, 6	;RP1=0, select bank0
  5663  0ECB  1303               	movwf	(_tecAtual)
  5664  0ECC  00CE               	goto	l2981
  5665  0ECD  2EE4               	line	47
  5666                           ;./teclado.h: 47:     else if(!PORTBbits.RB3) tecAtual = tabTeclas[3];
  5667                           	
  5668                           l187:	
  5669  0ECE                     	btfsc	(6),3	;volatile
  5670  0ECE  1986               	goto	u4041
  5671  0ECF  2ED1               	goto	u4040
  5672  0ED0  2ED2               u4041:
  5673  0ED1                     	goto	l2981
  5674  0ED1  2EE4               u4040:
  5675  0ED2                     	
  5676                           l2979:	
  5677  0ED2                     	movlw	low((((_tabTeclas+03h)-__stringbase)|8000h))
  5678  0ED2  3004               	movwf	fsr0
  5679  0ED3  0084               	fcall	stringdir
  5680  0ED4  120A  158A  200A  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  5681  0ED9  1683               	bcf	status, 6	;RP1=0, select bank1
  5682  0EDA  1303               	movwf	(??_tecladoLer+0)^080h+0
  5683  0EDB  00A0               	movf	(??_tecladoLer+0)^080h+0,w
  5684  0EDC  0820               	bcf	status, 5	;RP0=0, select bank0
  5685  0EDD  1283               	bcf	status, 6	;RP1=0, select bank0
  5686  0EDE  1303               	movwf	(_tecAtual)
  5687  0EDF  00CE               	goto	l2981
  5688  0EE0  2EE4               	
  5689                           l189:	
  5690  0EE1                     	goto	l2981
  5691  0EE1  2EE4               	
  5692                           l188:	
  5693  0EE2                     	goto	l2981
  5694  0EE2  2EE4               	
  5695                           l186:	
  5696  0EE3                     	goto	l2981
  5697  0EE3  2EE4               	
  5698                           l184:	
  5699  0EE4                     	line	49
  5700                           	
  5701                           l2981:	
  5702  0EE4                     ;./teclado.h: 49:     PORTBbits.RB7=1,PORTBbits.RB6=1,PORTBbits.RB5=0,PORTBbits.RB4=1;
  5703                           	bsf	(6),7	;volatile
  5704  0EE4  1786               	
  5705                           l2983:	
  5706  0EE5                     	bsf	(6),6	;volatile
  5707  0EE5  1706               	
  5708                           l2985:	
  5709  0EE6                     	bcf	(6),5	;volatile
  5710  0EE6  1286               	
  5711                           l2987:	
  5712  0EE7                     	bsf	(6),4	;volatile
  5713  0EE7  1606               	line	50
  5714                           	
  5715                           l2989:	
  5716  0EE8                     ;./teclado.h: 50:     __nop();__nop();
  5717                           	opt	asmopt_push
  5718                           	opt	asmopt_off
  5719                           	nop
  5720  0EE8  0000               	opt	asmopt_pop
  5721                           	
  5722                           l2991:	
  5723  0EE9                     	opt	asmopt_push
  5724                           	opt	asmopt_off
  5725                           	nop
  5726  0EE9  0000               	opt	asmopt_pop
  5727                           	line	51
  5728                           	
  5729                           l2993:	
  5730  0EEA                     ;./teclado.h: 51:     if(!PORTBbits.RB0) tecAtual = tabTeclas[4];
  5731                           	bcf	status, 5	;RP0=0, select bank0
  5732  0EEA  1283               	bcf	status, 6	;RP1=0, select bank0
  5733  0EEB  1303               	btfsc	(6),0	;volatile
  5734  0EEC  1806               	goto	u4051
  5735  0EED  2EEF               	goto	u4050
  5736  0EEE  2EF0               u4051:
  5737  0EEF                     	goto	l190
  5738  0EEF  2EFF               u4050:
  5739  0EF0                     	
  5740                           l2995:	
  5741  0EF0                     	movlw	low((((_tabTeclas+04h)-__stringbase)|8000h))
  5742  0EF0  3005               	movwf	fsr0
  5743  0EF1  0084               	fcall	stringdir
  5744  0EF2  120A  158A  200A  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  5745  0EF7  1683               	bcf	status, 6	;RP1=0, select bank1
  5746  0EF8  1303               	movwf	(??_tecladoLer+0)^080h+0
  5747  0EF9  00A0               	movf	(??_tecladoLer+0)^080h+0,w
  5748  0EFA  0820               	bcf	status, 5	;RP0=0, select bank0
  5749  0EFB  1283               	bcf	status, 6	;RP1=0, select bank0
  5750  0EFC  1303               	movwf	(_tecAtual)
  5751  0EFD  00CE               	goto	l3003
  5752  0EFE  2F3B               	line	52
  5753                           ;./teclado.h: 52:     else if(!PORTBbits.RB1) tecAtual = tabTeclas[5];
  5754                           	
  5755                           l190:	
  5756  0EFF                     	btfsc	(6),1	;volatile
  5757  0EFF  1886               	goto	u4061
  5758  0F00  2F02               	goto	u4060
  5759  0F01  2F03               u4061:
  5760  0F02                     	goto	l192
  5761  0F02  2F12               u4060:
  5762  0F03                     	
  5763                           l2997:	
  5764  0F03                     	movlw	low((((_tabTeclas+05h)-__stringbase)|8000h))
  5765  0F03  3006               	movwf	fsr0
  5766  0F04  0084               	fcall	stringdir
  5767  0F05  120A  158A  200A  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  5768  0F0A  1683               	bcf	status, 6	;RP1=0, select bank1
  5769  0F0B  1303               	movwf	(??_tecladoLer+0)^080h+0
  5770  0F0C  00A0               	movf	(??_tecladoLer+0)^080h+0,w
  5771  0F0D  0820               	bcf	status, 5	;RP0=0, select bank0
  5772  0F0E  1283               	bcf	status, 6	;RP1=0, select bank0
  5773  0F0F  1303               	movwf	(_tecAtual)
  5774  0F10  00CE               	goto	l3003
  5775  0F11  2F3B               	line	53
  5776                           ;./teclado.h: 53:     else if(!PORTBbits.RB2) tecAtual = tabTeclas[6];
  5777                           	
  5778                           l192:	
  5779  0F12                     	btfsc	(6),2	;volatile
  5780  0F12  1906               	goto	u4071
  5781  0F13  2F15               	goto	u4070
  5782  0F14  2F16               u4071:
  5783  0F15                     	goto	l194
  5784  0F15  2F25               u4070:
  5785  0F16                     	
  5786                           l2999:	
  5787  0F16                     	movlw	low((((_tabTeclas+06h)-__stringbase)|8000h))
  5788  0F16  3007               	movwf	fsr0
  5789  0F17  0084               	fcall	stringdir
  5790  0F18  120A  158A  200A  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  5791  0F1D  1683               	bcf	status, 6	;RP1=0, select bank1
  5792  0F1E  1303               	movwf	(??_tecladoLer+0)^080h+0
  5793  0F1F  00A0               	movf	(??_tecladoLer+0)^080h+0,w
  5794  0F20  0820               	bcf	status, 5	;RP0=0, select bank0
  5795  0F21  1283               	bcf	status, 6	;RP1=0, select bank0
  5796  0F22  1303               	movwf	(_tecAtual)
  5797  0F23  00CE               	goto	l3003
  5798  0F24  2F3B               	line	54
  5799                           ;./teclado.h: 54:     else if(!PORTBbits.RB3) tecAtual = tabTeclas[7];
  5800                           	
  5801                           l194:	
  5802  0F25                     	btfsc	(6),3	;volatile
  5803  0F25  1986               	goto	u4081
  5804  0F26  2F28               	goto	u4080
  5805  0F27  2F29               u4081:
  5806  0F28                     	goto	l3003
  5807  0F28  2F3B               u4080:
  5808  0F29                     	
  5809                           l3001:	
  5810  0F29                     	movlw	low((((_tabTeclas+07h)-__stringbase)|8000h))
  5811  0F29  3008               	movwf	fsr0
  5812  0F2A  0084               	fcall	stringdir
  5813  0F2B  120A  158A  200A  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  5814  0F30  1683               	bcf	status, 6	;RP1=0, select bank1
  5815  0F31  1303               	movwf	(??_tecladoLer+0)^080h+0
  5816  0F32  00A0               	movf	(??_tecladoLer+0)^080h+0,w
  5817  0F33  0820               	bcf	status, 5	;RP0=0, select bank0
  5818  0F34  1283               	bcf	status, 6	;RP1=0, select bank0
  5819  0F35  1303               	movwf	(_tecAtual)
  5820  0F36  00CE               	goto	l3003
  5821  0F37  2F3B               	
  5822                           l196:	
  5823  0F38                     	goto	l3003
  5824  0F38  2F3B               	
  5825                           l195:	
  5826  0F39                     	goto	l3003
  5827  0F39  2F3B               	
  5828                           l193:	
  5829  0F3A                     	goto	l3003
  5830  0F3A  2F3B               	
  5831                           l191:	
  5832  0F3B                     	line	56
  5833                           	
  5834                           l3003:	
  5835  0F3B                     ;./teclado.h: 56:     PORTBbits.RB7=1,PORTBbits.RB6=0,PORTBbits.RB5=1,PORTBbits.RB4=1;
  5836                           	bsf	(6),7	;volatile
  5837  0F3B  1786               	
  5838                           l3005:	
  5839  0F3C                     	bcf	(6),6	;volatile
  5840  0F3C  1306               	
  5841                           l3007:	
  5842  0F3D                     	bsf	(6),5	;volatile
  5843  0F3D  1686               	
  5844                           l3009:	
  5845  0F3E                     	bsf	(6),4	;volatile
  5846  0F3E  1606               	line	57
  5847                           	
  5848                           l3011:	
  5849  0F3F                     ;./teclado.h: 57:     __nop();__nop();
  5850                           	opt	asmopt_push
  5851                           	opt	asmopt_off
  5852                           	nop
  5853  0F3F  0000               	opt	asmopt_pop
  5854                           	
  5855                           l3013:	
  5856  0F40                     	opt	asmopt_push
  5857                           	opt	asmopt_off
  5858                           	nop
  5859  0F40  0000               	opt	asmopt_pop
  5860                           	line	58
  5861                           	
  5862                           l3015:	
  5863  0F41                     ;./teclado.h: 58:     if(!PORTBbits.RB0) tecAtual = tabTeclas[8];
  5864                           	bcf	status, 5	;RP0=0, select bank0
  5865  0F41  1283               	bcf	status, 6	;RP1=0, select bank0
  5866  0F42  1303               	btfsc	(6),0	;volatile
  5867  0F43  1806               	goto	u4091
  5868  0F44  2F46               	goto	u4090
  5869  0F45  2F47               u4091:
  5870  0F46                     	goto	l197
  5871  0F46  2F56               u4090:
  5872  0F47                     	
  5873                           l3017:	
  5874  0F47                     	movlw	low((((_tabTeclas+08h)-__stringbase)|8000h))
  5875  0F47  3009               	movwf	fsr0
  5876  0F48  0084               	fcall	stringdir
  5877  0F49  120A  158A  200A  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  5878  0F4E  1683               	bcf	status, 6	;RP1=0, select bank1
  5879  0F4F  1303               	movwf	(??_tecladoLer+0)^080h+0
  5880  0F50  00A0               	movf	(??_tecladoLer+0)^080h+0,w
  5881  0F51  0820               	bcf	status, 5	;RP0=0, select bank0
  5882  0F52  1283               	bcf	status, 6	;RP1=0, select bank0
  5883  0F53  1303               	movwf	(_tecAtual)
  5884  0F54  00CE               	goto	l3025
  5885  0F55  2F92               	line	59
  5886                           ;./teclado.h: 59:     else if(!PORTBbits.RB1) tecAtual = tabTeclas[9];
  5887                           	
  5888                           l197:	
  5889  0F56                     	btfsc	(6),1	;volatile
  5890  0F56  1886               	goto	u4101
  5891  0F57  2F59               	goto	u4100
  5892  0F58  2F5A               u4101:
  5893  0F59                     	goto	l199
  5894  0F59  2F69               u4100:
  5895  0F5A                     	
  5896                           l3019:	
  5897  0F5A                     	movlw	low((((_tabTeclas+09h)-__stringbase)|8000h))
  5898  0F5A  300A               	movwf	fsr0
  5899  0F5B  0084               	fcall	stringdir
  5900  0F5C  120A  158A  200A  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  5901  0F61  1683               	bcf	status, 6	;RP1=0, select bank1
  5902  0F62  1303               	movwf	(??_tecladoLer+0)^080h+0
  5903  0F63  00A0               	movf	(??_tecladoLer+0)^080h+0,w
  5904  0F64  0820               	bcf	status, 5	;RP0=0, select bank0
  5905  0F65  1283               	bcf	status, 6	;RP1=0, select bank0
  5906  0F66  1303               	movwf	(_tecAtual)
  5907  0F67  00CE               	goto	l3025
  5908  0F68  2F92               	line	60
  5909                           ;./teclado.h: 60:     else if(!PORTBbits.RB2) tecAtual = tabTeclas[10];
  5910                           	
  5911                           l199:	
  5912  0F69                     	btfsc	(6),2	;volatile
  5913  0F69  1906               	goto	u4111
  5914  0F6A  2F6C               	goto	u4110
  5915  0F6B  2F6D               u4111:
  5916  0F6C                     	goto	l201
  5917  0F6C  2F7C               u4110:
  5918  0F6D                     	
  5919                           l3021:	
  5920  0F6D                     	movlw	low((((_tabTeclas+0Ah)-__stringbase)|8000h))
  5921  0F6D  300B               	movwf	fsr0
  5922  0F6E  0084               	fcall	stringdir
  5923  0F6F  120A  158A  200A  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  5924  0F74  1683               	bcf	status, 6	;RP1=0, select bank1
  5925  0F75  1303               	movwf	(??_tecladoLer+0)^080h+0
  5926  0F76  00A0               	movf	(??_tecladoLer+0)^080h+0,w
  5927  0F77  0820               	bcf	status, 5	;RP0=0, select bank0
  5928  0F78  1283               	bcf	status, 6	;RP1=0, select bank0
  5929  0F79  1303               	movwf	(_tecAtual)
  5930  0F7A  00CE               	goto	l3025
  5931  0F7B  2F92               	line	61
  5932                           ;./teclado.h: 61:     else if(!PORTBbits.RB3) tecAtual = tabTeclas[11];
  5933                           	
  5934                           l201:	
  5935  0F7C                     	btfsc	(6),3	;volatile
  5936  0F7C  1986               	goto	u4121
  5937  0F7D  2F7F               	goto	u4120
  5938  0F7E  2F80               u4121:
  5939  0F7F                     	goto	l3025
  5940  0F7F  2F92               u4120:
  5941  0F80                     	
  5942                           l3023:	
  5943  0F80                     	movlw	low((((_tabTeclas+0Bh)-__stringbase)|8000h))
  5944  0F80  300C               	movwf	fsr0
  5945  0F81  0084               	fcall	stringdir
  5946  0F82  120A  158A  200A  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  5947  0F87  1683               	bcf	status, 6	;RP1=0, select bank1
  5948  0F88  1303               	movwf	(??_tecladoLer+0)^080h+0
  5949  0F89  00A0               	movf	(??_tecladoLer+0)^080h+0,w
  5950  0F8A  0820               	bcf	status, 5	;RP0=0, select bank0
  5951  0F8B  1283               	bcf	status, 6	;RP1=0, select bank0
  5952  0F8C  1303               	movwf	(_tecAtual)
  5953  0F8D  00CE               	goto	l3025
  5954  0F8E  2F92               	
  5955                           l203:	
  5956  0F8F                     	goto	l3025
  5957  0F8F  2F92               	
  5958                           l202:	
  5959  0F90                     	goto	l3025
  5960  0F90  2F92               	
  5961                           l200:	
  5962  0F91                     	goto	l3025
  5963  0F91  2F92               	
  5964                           l198:	
  5965  0F92                     	line	63
  5966                           	
  5967                           l3025:	
  5968  0F92                     ;./teclado.h: 63:     PORTBbits.RB7=0,PORTBbits.RB6=1,PORTBbits.RB5=1,PORTBbits.RB4=1;
  5969                           	bcf	(6),7	;volatile
  5970  0F92  1386               	
  5971                           l3027:	
  5972  0F93                     	bsf	(6),6	;volatile
  5973  0F93  1706               	
  5974                           l3029:	
  5975  0F94                     	bsf	(6),5	;volatile
  5976  0F94  1686               	
  5977                           l3031:	
  5978  0F95                     	bsf	(6),4	;volatile
  5979  0F95  1606               	line	64
  5980                           	
  5981                           l3033:	
  5982  0F96                     ;./teclado.h: 64:     __nop();__nop();
  5983                           	opt	asmopt_push
  5984                           	opt	asmopt_off
  5985                           	nop
  5986  0F96  0000               	opt	asmopt_pop
  5987                           	
  5988                           l3035:	
  5989  0F97                     	opt	asmopt_push
  5990                           	opt	asmopt_off
  5991                           	nop
  5992  0F97  0000               	opt	asmopt_pop
  5993                           	line	65
  5994                           	
  5995                           l3037:	
  5996  0F98                     ;./teclado.h: 65:     if(!PORTBbits.RB0) tecAtual = tabTeclas[12];
  5997                           	bcf	status, 5	;RP0=0, select bank0
  5998  0F98  1283               	bcf	status, 6	;RP1=0, select bank0
  5999  0F99  1303               	btfsc	(6),0	;volatile
  6000  0F9A  1806               	goto	u4131
  6001  0F9B  2F9D               	goto	u4130
  6002  0F9C  2F9E               u4131:
  6003  0F9D                     	goto	l204
  6004  0F9D  2FAD               u4130:
  6005  0F9E                     	
  6006                           l3039:	
  6007  0F9E                     	movlw	low((((_tabTeclas+0Ch)-__stringbase)|8000h))
  6008  0F9E  300D               	movwf	fsr0
  6009  0F9F  0084               	fcall	stringdir
  6010  0FA0  120A  158A  200A  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  6011  0FA5  1683               	bcf	status, 6	;RP1=0, select bank1
  6012  0FA6  1303               	movwf	(??_tecladoLer+0)^080h+0
  6013  0FA7  00A0               	movf	(??_tecladoLer+0)^080h+0,w
  6014  0FA8  0820               	bcf	status, 5	;RP0=0, select bank0
  6015  0FA9  1283               	bcf	status, 6	;RP1=0, select bank0
  6016  0FAA  1303               	movwf	(_tecAtual)
  6017  0FAB  00CE               	goto	l3047
  6018  0FAC  2FE9               	line	66
  6019                           ;./teclado.h: 66:     else if(!PORTBbits.RB1) tecAtual = tabTeclas[13];
  6020                           	
  6021                           l204:	
  6022  0FAD                     	btfsc	(6),1	;volatile
  6023  0FAD  1886               	goto	u4141
  6024  0FAE  2FB0               	goto	u4140
  6025  0FAF  2FB1               u4141:
  6026  0FB0                     	goto	l206
  6027  0FB0  2FC0               u4140:
  6028  0FB1                     	
  6029                           l3041:	
  6030  0FB1                     	movlw	low((((_tabTeclas+0Dh)-__stringbase)|8000h))
  6031  0FB1  300E               	movwf	fsr0
  6032  0FB2  0084               	fcall	stringdir
  6033  0FB3  120A  158A  200A  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  6034  0FB8  1683               	bcf	status, 6	;RP1=0, select bank1
  6035  0FB9  1303               	movwf	(??_tecladoLer+0)^080h+0
  6036  0FBA  00A0               	movf	(??_tecladoLer+0)^080h+0,w
  6037  0FBB  0820               	bcf	status, 5	;RP0=0, select bank0
  6038  0FBC  1283               	bcf	status, 6	;RP1=0, select bank0
  6039  0FBD  1303               	movwf	(_tecAtual)
  6040  0FBE  00CE               	goto	l3047
  6041  0FBF  2FE9               	line	67
  6042                           ;./teclado.h: 67:     else if(!PORTBbits.RB2) tecAtual = tabTeclas[14];
  6043                           	
  6044                           l206:	
  6045  0FC0                     	btfsc	(6),2	;volatile
  6046  0FC0  1906               	goto	u4151
  6047  0FC1  2FC3               	goto	u4150
  6048  0FC2  2FC4               u4151:
  6049  0FC3                     	goto	l208
  6050  0FC3  2FD3               u4150:
  6051  0FC4                     	
  6052                           l3043:	
  6053  0FC4                     	movlw	low((((_tabTeclas+0Eh)-__stringbase)|8000h))
  6054  0FC4  300F               	movwf	fsr0
  6055  0FC5  0084               	fcall	stringdir
  6056  0FC6  120A  158A  200A  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  6057  0FCB  1683               	bcf	status, 6	;RP1=0, select bank1
  6058  0FCC  1303               	movwf	(??_tecladoLer+0)^080h+0
  6059  0FCD  00A0               	movf	(??_tecladoLer+0)^080h+0,w
  6060  0FCE  0820               	bcf	status, 5	;RP0=0, select bank0
  6061  0FCF  1283               	bcf	status, 6	;RP1=0, select bank0
  6062  0FD0  1303               	movwf	(_tecAtual)
  6063  0FD1  00CE               	goto	l3047
  6064  0FD2  2FE9               	line	68
  6065                           ;./teclado.h: 68:     else if(!PORTBbits.RB3) tecAtual = tabTeclas[15];
  6066                           	
  6067                           l208:	
  6068  0FD3                     	btfsc	(6),3	;volatile
  6069  0FD3  1986               	goto	u4161
  6070  0FD4  2FD6               	goto	u4160
  6071  0FD5  2FD7               u4161:
  6072  0FD6                     	goto	l3047
  6073  0FD6  2FE9               u4160:
  6074  0FD7                     	
  6075                           l3045:	
  6076  0FD7                     	movlw	low((((_tabTeclas+0Fh)-__stringbase)|8000h))
  6077  0FD7  3010               	movwf	fsr0
  6078  0FD8  0084               	fcall	stringdir
  6079  0FD9  120A  158A  200A  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  6080  0FDE  1683               	bcf	status, 6	;RP1=0, select bank1
  6081  0FDF  1303               	movwf	(??_tecladoLer+0)^080h+0
  6082  0FE0  00A0               	movf	(??_tecladoLer+0)^080h+0,w
  6083  0FE1  0820               	bcf	status, 5	;RP0=0, select bank0
  6084  0FE2  1283               	bcf	status, 6	;RP1=0, select bank0
  6085  0FE3  1303               	movwf	(_tecAtual)
  6086  0FE4  00CE               	goto	l3047
  6087  0FE5  2FE9               	
  6088                           l210:	
  6089  0FE6                     	goto	l3047
  6090  0FE6  2FE9               	
  6091                           l209:	
  6092  0FE7                     	goto	l3047
  6093  0FE7  2FE9               	
  6094                           l207:	
  6095  0FE8                     	goto	l3047
  6096  0FE8  2FE9               	
  6097                           l205:	
  6098  0FE9                     	line	71
  6099                           	
  6100                           l3047:	
  6101  0FE9                     ;./teclado.h: 71:     if(tecAtual!=tecAnterior)
  6102                           	movf	(_tecAtual),w
  6103  0FE9  084E               	xorwf	(_tecAnterior),w
  6104  0FEA  064F               	skipnz
  6105  0FEB  1903               	goto	u4171
  6106  0FEC  2FEE               	goto	u4170
  6107  0FED  2FEF               u4171:
  6108  0FEE                     	goto	l3055
  6109  0FEE  2FFB               u4170:
  6110  0FEF                     	line	73
  6111                           	
  6112                           l3049:	
  6113  0FEF                     ;./teclado.h: 72:     {;./teclado.h: 73:         tecAnterior=tecAtual;
  6114                           	movf	(_tecAtual),w
  6115  0FEF  084E               	bsf	status, 5	;RP0=1, select bank1
  6116  0FF0  1683               	bcf	status, 6	;RP1=0, select bank1
  6117  0FF1  1303               	movwf	(??_tecladoLer+0)^080h+0
  6118  0FF2  00A0               	movf	(??_tecladoLer+0)^080h+0,w
  6119  0FF3  0820               	bcf	status, 5	;RP0=0, select bank0
  6120  0FF4  1283               	bcf	status, 6	;RP1=0, select bank0
  6121  0FF5  1303               	movwf	(_tecAnterior)
  6122  0FF6  00CF               	line	74
  6123                           ;./teclado.h: 74:         return tecAtual;
  6124                           	movf	(_tecAtual),w
  6125  0FF7  084E               	goto	l212
  6126  0FF8  2FFF               	
  6127                           l3051:	
  6128  0FF9                     	goto	l212
  6129  0FF9  2FFF               	line	75
  6130                           	
  6131                           l3053:	
  6132  0FFA                     ;./teclado.h: 75:     }
  6133                           	goto	l212
  6134  0FFA  2FFF               	line	76
  6135                           ;./teclado.h: 76:     else
  6136                           	
  6137                           l211:	
  6138  0FFB                     	line	78
  6139                           	
  6140                           l3055:	
  6141  0FFB                     ;./teclado.h: 77:     {;./teclado.h: 78:  tecAtual=0x00;
  6142                           	clrf	(_tecAtual)
  6143  0FFB  01CE               	line	79
  6144                           	
  6145                           l3057:	
  6146  0FFC                     ;./teclado.h: 79:         return tecAtual;
  6147                           	movf	(_tecAtual),w
  6148  0FFC  084E               	goto	l212
  6149  0FFD  2FFF               	
  6150                           l3059:	
  6151  0FFE                     	goto	l212
  6152  0FFE  2FFF               	line	80
  6153                           ;./teclado.h: 80:     }
  6154                           	
  6155                           l213:	
  6156  0FFF                     	line	81
  6157                           	
  6158                           l212:	
  6159  0FFF                     	return
  6160  0FFF  0008               	opt stack 0
  6161                           GLOBAL	__end_of_tecladoLer
  6162                           	__end_of_tecladoLer:
  6163  1000                     	signat	_tecladoLer,89
  6164                           	global	_tecladoIniciar
  6165                           
  6166 ;; *************** function _tecladoIniciar *****************
  6167 ;; Defined at:
  6168 ;;		line 25 in file "./teclado.h"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;		None
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;		None
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  1    wreg      void 
  6175 ;; Registers used:
  6176 ;;		wreg, status,2
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6182 ;;      Params:         0       0       0       0       0
  6183 ;;      Locals:         0       0       0       0       0
  6184 ;;      Temps:          0       0       0       0       0
  6185 ;;      Totals:         0       0       0       0       0
  6186 ;;Total ram usage:        0 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; Hardware stack levels required when called:    5
  6189 ;; This function calls:
  6190 ;;		Nothing
  6191 ;; This function is called by:
  6192 ;;		_main
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  6196                           	line	25
  6197                           global __ptext11
  6198                           __ptext11:	;psect for function _tecladoIniciar
  6199  1357                     psect	text11
  6200                           	file	"./teclado.h"
  6201                           	line	25
  6202                           	global	__size_of_tecladoIniciar
  6203                           	__size_of_tecladoIniciar	equ	__end_of_tecladoIniciar-_tecladoIniciar
  6204  0010                     	
  6205                           _tecladoIniciar:	
  6206  1357                     ;incstack = 0
  6207                           	opt	stack 2
  6208                           ; Regs used in _tecladoIniciar: [wreg+status,2]
  6209                           	line	28
  6210                           	
  6211                           l2959:	
  6212  1357                     ;./teclado.h: 28:  OPTION_REGbits.nRBPU=0;
  6213                           	bsf	status, 5	;RP0=1, select bank1
  6214  1357  1683               	bcf	status, 6	;RP1=0, select bank1
  6215  1358  1303               	bcf	(129)^080h,7	;volatile
  6216  1359  1381               	line	29
  6217                           	
  6218                           l2961:	
  6219  135A                     ;./teclado.h: 29:  ANSELH=0x00;
  6220                           	bsf	status, 5	;RP0=1, select bank3
  6221  135A  1683               	bsf	status, 6	;RP1=1, select bank3
  6222  135B  1703               	clrf	(393)^0180h	;volatile
  6223  135C  0189               	line	34
  6224                           	
  6225                           l2963:	
  6226  135D                     ;./teclado.h: 34:  TRISB=0B00001111;
  6227                           	movlw	low(0Fh)
  6228  135D  300F               	bsf	status, 5	;RP0=1, select bank1
  6229  135E  1683               	bcf	status, 6	;RP1=0, select bank1
  6230  135F  1303               	movwf	(134)^080h	;volatile
  6231  1360  0086               	line	35
  6232                           	
  6233                           l2965:	
  6234  1361                     ;./teclado.h: 35:  PORTB=0x00;
  6235                           	bcf	status, 5	;RP0=0, select bank0
  6236  1361  1283               	bcf	status, 6	;RP1=0, select bank0
  6237  1362  1303               	clrf	(6)	;volatile
  6238  1363  0186               	line	36
  6239                           	
  6240                           l2967:	
  6241  1364                     ;./teclado.h: 36:  tecAnterior=0x00;
  6242                           	clrf	(_tecAnterior)
  6243  1364  01CF               	line	37
  6244                           	
  6245                           l2969:	
  6246  1365                     ;./teclado.h: 37:  tecAtual=0x00;
  6247                           	clrf	(_tecAtual)
  6248  1365  01CE               	line	38
  6249                           	
  6250                           l180:	
  6251  1366                     	return
  6252  1366  0008               	opt stack 0
  6253                           GLOBAL	__end_of_tecladoIniciar
  6254                           	__end_of_tecladoIniciar:
  6255  1367                     	signat	_tecladoIniciar,89
  6256                           	global	_showtemp
  6257                           
  6258 ;; *************** function _showtemp *****************
  6259 ;; Defined at:
  6260 ;;		line 144 in file "lcd.c"
  6261 ;; Parameters:    Size  Location     Type
  6262 ;;		None
  6263 ;; Auto vars:     Size  Location     Type
  6264 ;;		None
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  1    wreg      void 
  6267 ;; Registers used:
  6268 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6274 ;;      Params:         0       0       0       0       0
  6275 ;;      Locals:         0       0       0       0       0
  6276 ;;      Temps:          0       0       0       0       0
  6277 ;;      Totals:         0       0       0       0       0
  6278 ;;Total ram usage:        0 bytes
  6279 ;; Hardware stack levels used:    1
  6280 ;; Hardware stack levels required when called:    9
  6281 ;; This function calls:
  6282 ;;		_writeLCD
  6283 ;; This function is called by:
  6284 ;;		_main
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  6288                           	file	"lcd.c"
  6289                           	line	144
  6290                           global __ptext12
  6291                           __ptext12:	;psect for function _showtemp
  6292  1349                     psect	text12
  6293                           	file	"lcd.c"
  6294                           	line	144
  6295                           	global	__size_of_showtemp
  6296                           	__size_of_showtemp	equ	__end_of_showtemp-_showtemp
  6297  000E                     	
  6298                           _showtemp:	
  6299  1349                     ;incstack = 0
  6300 ;; hardware stack exceeded
  6301                           	opt	stack 0
  6302                           ; Regs used in _showtemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6303                           	line	146
  6304                           	
  6305                           l2949:	
  6306  1349                     ;lcd.c: 146:     writeLCD(0,0, "Saving...");
  6307                           	bsf	status, 5	;RP0=1, select bank1
  6308  1349  1683               	bcf	status, 6	;RP1=0, select bank1
  6309  134A  1303               	clrf	(writeLCD@y)^080h
  6310  134B  01AB               	movlw	(low((((STR_9)-__stringbase)|8000h)))&0ffh
  6311  134C  305C               	movwf	(writeLCD@ptr)^080h
  6312  134D  00AC               	movlw	80h
  6313  134E  3080               	movwf	(writeLCD@ptr+1)^080h
  6314  134F  00AD               	movlw	low(0)
  6315  1350  3000               	fcall	_writeLCD
  6316  1351  160A  118A  26EA  160A  118A  	line	150
  6317                           	
  6318                           l80:	
  6319  1356                     	return
  6320  1356  0008               	opt stack 0
  6321                           GLOBAL	__end_of_showtemp
  6322                           	__end_of_showtemp:
  6323  1357                     	signat	_showtemp,89
  6324                           	global	_salvatemp
  6325                           
  6326 ;; *************** function _salvatemp *****************
  6327 ;; Defined at:
  6328 ;;		line 33 in file "recept.c"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;  temp            1    wreg     unsigned char 
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;  temp            1   13[BANK1 ] unsigned char 
  6333 ;;  valor           2   11[BANK1 ] unsigned int 
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  1    wreg      void 
  6336 ;; Registers used:
  6337 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6343 ;;      Params:         0       0       0       0       0
  6344 ;;      Locals:         0       0       3       0       0
  6345 ;;      Temps:          0       0       0       0       0
  6346 ;;      Totals:         0       0       3       0       0
  6347 ;;Total ram usage:        3 bytes
  6348 ;; Hardware stack levels used:    1
  6349 ;; Hardware stack levels required when called:    8
  6350 ;; This function calls:
  6351 ;;		_EEPROM_read
  6352 ;;		_EEPROM_write
  6353 ;; This function is called by:
  6354 ;;		_main
  6355 ;; This function uses a non-reentrant model
  6356 ;;
  6357                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  6358                           	file	"recept.c"
  6359                           	line	33
  6360                           global __ptext13
  6361                           __ptext13:	;psect for function _salvatemp
  6362  14A7                     psect	text13
  6363                           	file	"recept.c"
  6364                           	line	33
  6365                           	global	__size_of_salvatemp
  6366                           	__size_of_salvatemp	equ	__end_of_salvatemp-_salvatemp
  6367  0020                     	
  6368                           _salvatemp:	
  6369  14A7                     ;incstack = 0
  6370 ;; hardware stack exceeded
  6371                           	opt	stack 0
  6372                           ; Regs used in _salvatemp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6373                           ;salvatemp@temp stored from wreg
  6374                           	bsf	status, 5	;RP0=1, select bank1
  6375  14A7  1683               	bcf	status, 6	;RP1=0, select bank1
  6376  14A8  1303               	movwf	(salvatemp@temp)^080h
  6377  14A9  00AD               	line	36
  6378                           	
  6379                           l3061:	
  6380  14AA                     ;recept.c: 33: void salvatemp(unsigned char temp);recept.c: 34: {;recept.c: 35:     unsi
                                 gned int valor;;recept.c: 36:     valor = EEPROM_read(temp);
  6381                           	movf	(salvatemp@temp)^080h,w
  6382  14AA  082D               	fcall	_EEPROM_read
  6383  14AB  160A  118A  24E8  160A  118A  	bsf	status, 5	;RP0=1, select bank1
  6384  14B0  1683               	bcf	status, 6	;RP1=0, select bank1
  6385  14B1  1303               	movf	(1+(?_EEPROM_read))^080h,w
  6386  14B2  0822               	movwf	(salvatemp@valor+1)^080h
  6387  14B3  00AC               	movf	(0+(?_EEPROM_read))^080h,w
  6388  14B4  0821               	movwf	(salvatemp@valor)^080h
  6389  14B5  00AB               	line	37
  6390                           	
  6391                           l3063:	
  6392  14B6                     ;recept.c: 37:     valor++;
  6393                           	movlw	01h
  6394  14B6  3001               	addwf	(salvatemp@valor)^080h,f
  6395  14B7  07AB               	skipnc
  6396  14B8  1803               	incf	(salvatemp@valor+1)^080h,f
  6397  14B9  0AAC               	movlw	0
  6398  14BA  3000               	addwf	(salvatemp@valor+1)^080h,f
  6399  14BB  07AC               	line	38
  6400                           	
  6401                           l3065:	
  6402  14BC                     ;recept.c: 38:     EEPROM_write(temp,valor);
  6403                           	movf	(salvatemp@valor+1)^080h,w
  6404  14BC  082C               	movwf	(EEPROM_write@value+1)^080h
  6405  14BD  00A8               	movf	(salvatemp@valor)^080h,w
  6406  14BE  082B               	movwf	(EEPROM_write@value)^080h
  6407  14BF  00A7               	movf	(salvatemp@temp)^080h,w
  6408  14C0  082D               	fcall	_EEPROM_write
  6409  14C1  160A  118A  23DE  160A  118A  	line	39
  6410                           	
  6411                           l279:	
  6412  14C6                     	return
  6413  14C6  0008               	opt stack 0
  6414                           GLOBAL	__end_of_salvatemp
  6415                           	__end_of_salvatemp:
  6416  14C7                     	signat	_salvatemp,4217
  6417                           	global	_resetemp
  6418                           
  6419 ;; *************** function _resetemp *****************
  6420 ;; Defined at:
  6421 ;;		line 42 in file "recept.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;		None
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;  i               1   12[BANK1 ] unsigned char 
  6426 ;; Return value:  Size  Location     Type
  6427 ;;                  1    wreg      void 
  6428 ;; Registers used:
  6429 ;;		wreg, status,2, status,0, pclath, cstack
  6430 ;; Tracked objects:
  6431 ;;		On entry : 0/0
  6432 ;;		On exit  : 0/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6435 ;;      Params:         0       0       0       0       0
  6436 ;;      Locals:         0       0       1       0       0
  6437 ;;      Temps:          0       0       1       0       0
  6438 ;;      Totals:         0       0       2       0       0
  6439 ;;Total ram usage:        2 bytes
  6440 ;; Hardware stack levels used:    1
  6441 ;; Hardware stack levels required when called:    8
  6442 ;; This function calls:
  6443 ;;		_EEPROM_write
  6444 ;; This function is called by:
  6445 ;;		_main
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  6449                           	line	42
  6450                           global __ptext14
  6451                           __ptext14:	;psect for function _resetemp
  6452  150A                     psect	text14
  6453                           	file	"recept.c"
  6454                           	line	42
  6455                           	global	__size_of_resetemp
  6456                           	__size_of_resetemp	equ	__end_of_resetemp-_resetemp
  6457  0022                     	
  6458                           _resetemp:	
  6459  150A                     ;incstack = 0
  6460 ;; hardware stack exceeded
  6461                           	opt	stack 0
  6462                           ; Regs used in _resetemp: [wreg+status,2+status,0+pclath+cstack]
  6463                           	line	44
  6464                           	
  6465                           l3073:	
  6466  150A                     ;recept.c: 44:    for(char i=0; i<100; i++)
  6467                           	bsf	status, 5	;RP0=1, select bank1
  6468  150A  1683               	bcf	status, 6	;RP1=0, select bank1
  6469  150B  1303               	clrf	(resetemp@i)^080h
  6470  150C  01AC               	
  6471                           l3075:	
  6472  150D                     	movlw	low(064h)
  6473  150D  3064               	subwf	(resetemp@i)^080h,w
  6474  150E  022C               	skipc
  6475  150F  1C03               	goto	u4181
  6476  1510  2D12               	goto	u4180
  6477  1511  2D13               u4181:
  6478  1512                     	goto	l3079
  6479  1512  2D15               u4180:
  6480  1513                     	goto	l284
  6481  1513  2D2B               	
  6482                           l3077:	
  6483  1514                     	goto	l284
  6484  1514  2D2B               	
  6485                           l282:	
  6486  1515                     	line	46
  6487                           	
  6488                           l3079:	
  6489  1515                     ;recept.c: 45:     {;recept.c: 46:         EEPROM_write(i,0b0);
  6490                           	movlw	0
  6491  1515  3000               	movwf	(EEPROM_write@value)^080h
  6492  1516  00A7               	movwf	(EEPROM_write@value+1)^080h
  6493  1517  00A8               	movf	(resetemp@i)^080h,w
  6494  1518  082C               	fcall	_EEPROM_write
  6495  1519  160A  118A  23DE  160A  118A  	line	47
  6496                           	
  6497                           l3081:	
  6498  151E                     ;recept.c: 47:     }
  6499                           	movlw	low(01h)
  6500  151E  3001               	bsf	status, 5	;RP0=1, select bank1
  6501  151F  1683               	bcf	status, 6	;RP1=0, select bank1
  6502  1520  1303               	movwf	(??_resetemp+0)^080h+0
  6503  1521  00AB               	movf	(??_resetemp+0)^080h+0,w
  6504  1522  082B               	addwf	(resetemp@i)^080h,f
  6505  1523  07AC               	
  6506                           l3083:	
  6507  1524                     	movlw	low(064h)
  6508  1524  3064               	subwf	(resetemp@i)^080h,w
  6509  1525  022C               	skipc
  6510  1526  1C03               	goto	u4191
  6511  1527  2D29               	goto	u4190
  6512  1528  2D2A               u4191:
  6513  1529                     	goto	l3079
  6514  1529  2D15               u4190:
  6515  152A                     	goto	l284
  6516  152A  2D2B               	
  6517                           l283:	
  6518  152B                     	line	48
  6519                           	
  6520                           l284:	
  6521  152B                     	return
  6522  152B  0008               	opt stack 0
  6523                           GLOBAL	__end_of_resetemp
  6524                           	__end_of_resetemp:
  6525  152C                     	signat	_resetemp,89
  6526                           	global	_EEPROM_write
  6527                           
  6528 ;; *************** function _EEPROM_write *****************
  6529 ;; Defined at:
  6530 ;;		line 105 in file "recept.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;  pont            1    wreg     unsigned char 
  6533 ;;  value           2    7[BANK1 ] unsigned int 
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;  pont            1   10[BANK1 ] unsigned char 
  6536 ;; Return value:  Size  Location     Type
  6537 ;;                  1    wreg      void 
  6538 ;; Registers used:
  6539 ;;		wreg, status,2, status,0, pclath, cstack
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6545 ;;      Params:         0       0       2       0       0
  6546 ;;      Locals:         0       0       1       0       0
  6547 ;;      Temps:          0       0       1       0       0
  6548 ;;      Totals:         0       0       4       0       0
  6549 ;;Total ram usage:        4 bytes
  6550 ;; Hardware stack levels used:    1
  6551 ;; Hardware stack levels required when called:    7
  6552 ;; This function calls:
  6553 ;;		_EEPROM_WriteByte
  6554 ;; This function is called by:
  6555 ;;		_salvatemp
  6556 ;;		_resetemp
  6557 ;; This function uses a non-reentrant model
  6558 ;;
  6559                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  6560                           	line	105
  6561                           global __ptext15
  6562                           __ptext15:	;psect for function _EEPROM_write
  6563  13DE                     psect	text15
  6564                           	file	"recept.c"
  6565                           	line	105
  6566                           	global	__size_of_EEPROM_write
  6567                           	__size_of_EEPROM_write	equ	__end_of_EEPROM_write-_EEPROM_write
  6568  001B                     	
  6569                           _EEPROM_write:	
  6570  13DE                     ;incstack = 0
  6571 ;; hardware stack exceeded
  6572                           	opt	stack 0
  6573                           ; Regs used in _EEPROM_write: [wreg+status,2+status,0+pclath+cstack]
  6574                           ;EEPROM_write@pont stored from wreg
  6575                           	bsf	status, 5	;RP0=1, select bank1
  6576  13DE  1683               	bcf	status, 6	;RP1=0, select bank1
  6577  13DF  1303               	movwf	(EEPROM_write@pont)^080h
  6578  13E0  00AA               	line	107
  6579                           	
  6580                           l2571:	
  6581  13E1                     ;recept.c: 105: void EEPROM_write(unsigned char pont,unsigned int value);recept.c: 106: 
                                 {;recept.c: 107:     EEPROM_WriteByte(pont,value/256);
  6582                           	movf	(EEPROM_write@value+1)^080h,w
  6583  13E1  0828               	movwf	(??_EEPROM_write+0)^080h+0
  6584  13E2  00A9               	movf	(??_EEPROM_write+0)^080h+0,w
  6585  13E3  0829               	movwf	(EEPROM_WriteByte@eepromData)^080h
  6586  13E4  00A4               	movf	(EEPROM_write@pont)^080h,w
  6587  13E5  082A               	fcall	_EEPROM_WriteByte
  6588  13E6  160A  118A  2669  160A  118A  	line	108
  6589                           ;recept.c: 108:     EEPROM_WriteByte(pont+100,value%256);
  6590                           	bsf	status, 5	;RP0=1, select bank1
  6591  13EB  1683               	bcf	status, 6	;RP1=0, select bank1
  6592  13EC  1303               	movf	(EEPROM_write@value)^080h,w
  6593  13ED  0827               	movwf	(??_EEPROM_write+0)^080h+0
  6594  13EE  00A9               	movf	(??_EEPROM_write+0)^080h+0,w
  6595  13EF  0829               	movwf	(EEPROM_WriteByte@eepromData)^080h
  6596  13F0  00A4               	movf	(EEPROM_write@pont)^080h,w
  6597  13F1  082A               	addlw	064h
  6598  13F2  3E64               	fcall	_EEPROM_WriteByte
  6599  13F3  160A  118A  2669  160A  118A  	line	109
  6600                           	
  6601                           l306:	
  6602  13F8                     	return
  6603  13F8  0008               	opt stack 0
  6604                           GLOBAL	__end_of_EEPROM_write
  6605                           	__end_of_EEPROM_write:
  6606  13F9                     	signat	_EEPROM_write,8313
  6607                           	global	_EEPROM_WriteByte
  6608                           
  6609 ;; *************** function _EEPROM_WriteByte *****************
  6610 ;; Defined at:
  6611 ;;		line 115 in file "recept.c"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;  eepromAddres    1    wreg     unsigned char 
  6614 ;;  eepromData      1    4[BANK1 ] unsigned char 
  6615 ;; Auto vars:     Size  Location     Type
  6616 ;;  eepromAddres    1    5[BANK1 ] unsigned char 
  6617 ;;  gie_Status      1    6[BANK1 ] unsigned char 
  6618 ;; Return value:  Size  Location     Type
  6619 ;;                  1    wreg      void 
  6620 ;; Registers used:
  6621 ;;		wreg, status,2, status,0, pclath, cstack
  6622 ;; Tracked objects:
  6623 ;;		On entry : 0/0
  6624 ;;		On exit  : 0/0
  6625 ;;		Unchanged: 0/0
  6626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6627 ;;      Params:         0       0       1       0       0
  6628 ;;      Locals:         0       0       2       0       0
  6629 ;;      Temps:          0       0       0       0       0
  6630 ;;      Totals:         0       0       3       0       0
  6631 ;;Total ram usage:        3 bytes
  6632 ;; Hardware stack levels used:    1
  6633 ;; Hardware stack levels required when called:    6
  6634 ;; This function calls:
  6635 ;;		_delay
  6636 ;; This function is called by:
  6637 ;;		_EEPROM_write
  6638 ;; This function uses a non-reentrant model
  6639 ;;
  6640                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  6641                           	line	115
  6642                           global __ptext16
  6643                           __ptext16:	;psect for function _EEPROM_WriteByte
  6644  1669                     psect	text16
  6645                           	file	"recept.c"
  6646                           	line	115
  6647                           	global	__size_of_EEPROM_WriteByte
  6648                           	__size_of_EEPROM_WriteByte	equ	__end_of_EEPROM_WriteByte-_EEPROM_WriteByte
  6649  0040                     	
  6650                           _EEPROM_WriteByte:	
  6651  1669                     ;incstack = 0
  6652 ;; hardware stack exceeded
  6653                           	opt	stack 0
  6654                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  6655                           ;EEPROM_WriteByte@eepromAddress stored from wreg
  6656                           	bsf	status, 5	;RP0=1, select bank1
  6657  1669  1683               	bcf	status, 6	;RP1=0, select bank1
  6658  166A  1303               	movwf	(EEPROM_WriteByte@eepromAddress)^080h
  6659  166B  00A5               	line	118
  6660                           	
  6661                           l2197:	
  6662  166C                     ;recept.c: 115: void EEPROM_WriteByte(unsigned char eepromAddress, unsigned char eepromD
                                 ata);recept.c: 116: {;recept.c: 117:     unsigned char gie_Status;;recept.c: 118:     wh
                                 ile(WR);
  6663                           	goto	l312
  6664  166C  2E6D               	
  6665                           l313:	
  6666  166D                     	
  6667                           l312:	
  6668  166D                     	bsf	status, 5	;RP0=1, select bank3
  6669  166D  1683               	bsf	status, 6	;RP1=1, select bank3
  6670  166E  1703               	btfsc	(3169/8)^0180h,(3169)&7	;volsfr
  6671  166F  188C               	goto	u2321
  6672  1670  2E72               	goto	u2320
  6673  1671  2E73               u2321:
  6674  1672                     	goto	l312
  6675  1672  2E6D               u2320:
  6676  1673                     	goto	l2199
  6677  1673  2E74               	
  6678                           l314:	
  6679  1674                     	line	119
  6680                           	
  6681                           l2199:	
  6682  1674                     ;recept.c: 119:     EEADR=eepromAddress;
  6683                           	bsf	status, 5	;RP0=1, select bank1
  6684  1674  1683               	bcf	status, 6	;RP1=0, select bank1
  6685  1675  1303               	movf	(EEPROM_WriteByte@eepromAddress)^080h,w
  6686  1676  0825               	bcf	status, 5	;RP0=0, select bank2
  6687  1677  1283               	bsf	status, 6	;RP1=1, select bank2
  6688  1678  1703               	movwf	(269)^0100h	;volatile
  6689  1679  008D               	line	120
  6690                           ;recept.c: 120:     EEDATA=eepromData;
  6691                           	bsf	status, 5	;RP0=1, select bank1
  6692  167A  1683               	bcf	status, 6	;RP1=0, select bank1
  6693  167B  1303               	movf	(EEPROM_WriteByte@eepromData)^080h,w
  6694  167C  0824               	bcf	status, 5	;RP0=0, select bank2
  6695  167D  1283               	bsf	status, 6	;RP1=1, select bank2
  6696  167E  1703               	movwf	(268)^0100h	;volatile
  6697  167F  008C               	line	121
  6698                           	
  6699                           l2201:	
  6700  1680                     ;recept.c: 121:     EECON1bits.EEPGD = 0;
  6701                           	bsf	status, 5	;RP0=1, select bank3
  6702  1680  1683               	bsf	status, 6	;RP1=1, select bank3
  6703  1681  1703               	bcf	(396)^0180h,7	;volsfr
  6704  1682  138C               	line	122
  6705                           	
  6706                           l2203:	
  6707  1683                     ;recept.c: 122:     WREN=1;
  6708                           	bsf	(3170/8)^0180h,(3170)&7	;volsfr
  6709  1683  150C               	line	123
  6710                           	
  6711                           l2205:	
  6712  1684                     ;recept.c: 123:     gie_Status = GIE;
  6713                           	movlw	0
  6714  1684  3000               	btfsc	(95/8),(95)&7	;volatile
  6715  1685  1B8B               	movlw	1
  6716  1686  3001               	bsf	status, 5	;RP0=1, select bank1
  6717  1687  1683               	bcf	status, 6	;RP1=0, select bank1
  6718  1688  1303               	movwf	(EEPROM_WriteByte@gie_Status)^080h
  6719  1689  00A6               	line	124
  6720                           	
  6721                           l2207:	
  6722  168A                     ;recept.c: 124:     GIE = 0;
  6723                           	bcf	(95/8),(95)&7	;volatile
  6724  168A  138B               	line	125
  6725                           	
  6726                           l2209:	
  6727  168B                     ;recept.c: 125:     EECON2=0x55;
  6728                           	movlw	low(055h)
  6729  168B  3055               	bsf	status, 5	;RP0=1, select bank3
  6730  168C  1683               	bsf	status, 6	;RP1=1, select bank3
  6731  168D  1703               	movwf	(397)^0180h	;volsfr
  6732  168E  008D               	line	126
  6733                           	
  6734                           l2211:	
  6735  168F                     ;recept.c: 126:     EECON2=0xaa;
  6736                           	movlw	low(0AAh)
  6737  168F  30AA               	movwf	(397)^0180h	;volsfr
  6738  1690  008D               	line	127
  6739                           	
  6740                           l2213:	
  6741  1691                     ;recept.c: 127:     WR=1;
  6742                           	bsf	(3169/8)^0180h,(3169)&7	;volsfr
  6743  1691  148C               	line	128
  6744                           	
  6745                           l2215:	
  6746  1692                     ;recept.c: 128:     GIE = gie_Status;
  6747                           	bsf	status, 5	;RP0=1, select bank1
  6748  1692  1683               	bcf	status, 6	;RP1=0, select bank1
  6749  1693  1303               	btfsc	(EEPROM_WriteByte@gie_Status)^080h,0
  6750  1694  1826               	goto	u2331
  6751  1695  2E97               	goto	u2330
  6752  1696  2E99               	
  6753                           u2331:
  6754  1697                     	bsf	(95/8),(95)&7	;volatile
  6755  1697  178B               	goto	u2344
  6756  1698  2E9A               u2330:
  6757  1699                     	bcf	(95/8),(95)&7	;volatile
  6758  1699  138B               u2344:
  6759  169A                     	line	129
  6760                           	
  6761                           l2217:	
  6762  169A                     ;recept.c: 129:     delay(1);
  6763                           	movlw	01h
  6764  169A  3001               	bsf	status, 5	;RP0=1, select bank1
  6765  169B  1683               	bcf	status, 6	;RP1=0, select bank1
  6766  169C  1303               	movwf	(delay@t)^080h
  6767  169D  00A0               	movlw	0
  6768  169E  3000               	movwf	((delay@t)^080h)+1
  6769  169F  00A1               	fcall	_delay
  6770  16A0  160A  118A  2488  160A  118A  	line	130
  6771                           	
  6772                           l2219:	
  6773  16A5                     ;recept.c: 130:     WREN=0;
  6774                           	bsf	status, 5	;RP0=1, select bank3
  6775  16A5  1683               	bsf	status, 6	;RP1=1, select bank3
  6776  16A6  1703               	bcf	(3170/8)^0180h,(3170)&7	;volsfr
  6777  16A7  110C               	line	131
  6778                           	
  6779                           l315:	
  6780  16A8                     	return
  6781  16A8  0008               	opt stack 0
  6782                           GLOBAL	__end_of_EEPROM_WriteByte
  6783                           	__end_of_EEPROM_WriteByte:
  6784  16A9                     	signat	_EEPROM_WriteByte,8313
  6785                           	global	_initLCD
  6786                           
  6787 ;; *************** function _initLCD *****************
  6788 ;; Defined at:
  6789 ;;		line 13 in file "lcd.c"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;		None
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;		None
  6794 ;; Return value:  Size  Location     Type
  6795 ;;                  1    wreg      void 
  6796 ;; Registers used:
  6797 ;;		wreg, status,2, status,0, pclath, cstack
  6798 ;; Tracked objects:
  6799 ;;		On entry : 0/0
  6800 ;;		On exit  : 0/0
  6801 ;;		Unchanged: 0/0
  6802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6803 ;;      Params:         0       0       0       0       0
  6804 ;;      Locals:         0       0       0       0       0
  6805 ;;      Temps:          0       0       0       0       0
  6806 ;;      Totals:         0       0       0       0       0
  6807 ;;Total ram usage:        0 bytes
  6808 ;; Hardware stack levels used:    1
  6809 ;; Hardware stack levels required when called:    7
  6810 ;; This function calls:
  6811 ;;		_cmdLCD
  6812 ;;		_delay
  6813 ;; This function is called by:
  6814 ;;		_main
  6815 ;; This function uses a non-reentrant model
  6816 ;;
  6817                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  6818                           	file	"lcd.c"
  6819                           	line	13
  6820                           global __ptext17
  6821                           __ptext17:	;psect for function _initLCD
  6822  16A9                     psect	text17
  6823                           	file	"lcd.c"
  6824                           	line	13
  6825                           	global	__size_of_initLCD
  6826                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  6827  0041                     	
  6828                           _initLCD:	
  6829  16A9                     ;incstack = 0
  6830                           	opt	stack 0
  6831                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  6832                           	line	15
  6833                           	
  6834                           l2891:	
  6835  16A9                     ;lcd.c: 15:         LCD.B0 = 0;
  6836                           	bcf	status, 5	;RP0=0, select bank0
  6837  16A9  1283               	bcf	status, 6	;RP1=0, select bank0
  6838  16AA  1303               	bcf	(8),6	;volatile
  6839  16AB  1308               	line	16
  6840                           ;lcd.c: 16:         LCD.B1 = 0;
  6841                           	bcf	(8),7	;volatile
  6842  16AC  1388               	line	17
  6843                           ;lcd.c: 17:         LCD.RS = 0;
  6844                           	bcf	(8),4	;volatile
  6845  16AD  1208               	line	18
  6846                           	
  6847                           l2893:	
  6848  16AE                     ;lcd.c: 18:         LCD.BUS = 0x3;
  6849                           	movf	(8),w	;volatile
  6850  16AE  0808               	andlw	not (((1<<4)-1)<<0)
  6851  16AF  39F0               	iorlw	(03h & ((1<<4)-1))<<0
  6852  16B0  3803               	movwf	(8)	;volatile
  6853  16B1  0088               	line	19
  6854                           	
  6855                           l2895:	
  6856  16B2                     ;lcd.c: 19:         LCD.EN = 1;
  6857                           	bsf	(8),5	;volatile
  6858  16B2  1688               	line	20
  6859                           	
  6860                           l2897:	
  6861  16B3                     ;lcd.c: 20:         TRISD = 0xC0;
  6862                           	movlw	low(0C0h)
  6863  16B3  30C0               	bsf	status, 5	;RP0=1, select bank1
  6864  16B4  1683               	bcf	status, 6	;RP1=0, select bank1
  6865  16B5  1303               	movwf	(136)^080h	;volatile
  6866  16B6  0088               	line	22
  6867                           	
  6868                           l2899:	
  6869  16B7                     ;lcd.c: 22:         delay(10);
  6870                           	movlw	0Ah
  6871  16B7  300A               	movwf	(delay@t)^080h
  6872  16B8  00A0               	movlw	0
  6873  16B9  3000               	movwf	((delay@t)^080h)+1
  6874  16BA  00A1               	fcall	_delay
  6875  16BB  160A  118A  2488  160A  118A  	line	24
  6876                           	
  6877                           l2901:	
  6878  16C0                     ;lcd.c: 24:         cmdLCD(0x20);
  6879                           	movlw	low(020h)
  6880  16C0  3020               	fcall	_cmdLCD
  6881  16C1  120A  158A  22AC  160A  118A  	line	25
  6882                           	
  6883                           l2903:	
  6884  16C6                     ;lcd.c: 25:         cmdLCD(0x28);
  6885                           	movlw	low(028h)
  6886  16C6  3028               	fcall	_cmdLCD
  6887  16C7  120A  158A  22AC  160A  118A  	line	26
  6888                           	
  6889                           l2905:	
  6890  16CC                     ;lcd.c: 26:         cmdLCD(0x0C);
  6891                           	movlw	low(0Ch)
  6892  16CC  300C               	fcall	_cmdLCD
  6893  16CD  120A  158A  22AC  160A  118A  	line	27
  6894                           	
  6895                           l2907:	
  6896  16D2                     ;lcd.c: 27:         cmdLCD(0x01);
  6897                           	movlw	low(01h)
  6898  16D2  3001               	fcall	_cmdLCD
  6899  16D3  120A  158A  22AC  160A  118A  	line	28
  6900                           	
  6901                           l2909:	
  6902  16D8                     ;lcd.c: 28:         cmdLCD(0x02);
  6903                           	movlw	low(02h)
  6904  16D8  3002               	fcall	_cmdLCD
  6905  16D9  120A  158A  22AC  160A  118A  	line	30
  6906                           	
  6907                           l2911:	
  6908  16DE                     ;lcd.c: 30:         delay(10);
  6909                           	movlw	0Ah
  6910  16DE  300A               	bsf	status, 5	;RP0=1, select bank1
  6911  16DF  1683               	bcf	status, 6	;RP1=0, select bank1
  6912  16E0  1303               	movwf	(delay@t)^080h
  6913  16E1  00A0               	movlw	0
  6914  16E2  3000               	movwf	((delay@t)^080h)+1
  6915  16E3  00A1               	fcall	_delay
  6916  16E4  160A  118A  2488  160A  118A  	line	31
  6917                           	
  6918                           l25:	
  6919  16E9                     	return
  6920  16E9  0008               	opt stack 0
  6921                           GLOBAL	__end_of_initLCD
  6922                           	__end_of_initLCD:
  6923  16EA                     	signat	_initLCD,89
  6924                           	global	_erasertemp
  6925                           
  6926 ;; *************** function _erasertemp *****************
  6927 ;; Defined at:
  6928 ;;		line 151 in file "lcd.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;		None
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;		None
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  1    wreg      void 
  6935 ;; Registers used:
  6936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6942 ;;      Params:         0       0       0       0       0
  6943 ;;      Locals:         0       0       0       0       0
  6944 ;;      Temps:          0       0       0       0       0
  6945 ;;      Totals:         0       0       0       0       0
  6946 ;;Total ram usage:        0 bytes
  6947 ;; Hardware stack levels used:    1
  6948 ;; Hardware stack levels required when called:    9
  6949 ;; This function calls:
  6950 ;;		_writeLCD
  6951 ;; This function is called by:
  6952 ;;		_main
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  6956                           	line	151
  6957                           global __ptext18
  6958                           __ptext18:	;psect for function _erasertemp
  6959  133B                     psect	text18
  6960                           	file	"lcd.c"
  6961                           	line	151
  6962                           	global	__size_of_erasertemp
  6963                           	__size_of_erasertemp	equ	__end_of_erasertemp-_erasertemp
  6964  000E                     	
  6965                           _erasertemp:	
  6966  133B                     ;incstack = 0
  6967 ;; hardware stack exceeded
  6968                           	opt	stack 0
  6969                           ; Regs used in _erasertemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6970                           	line	153
  6971                           	
  6972                           l2951:	
  6973  133B                     ;lcd.c: 153:     writeLCD(0,0, "Apagando...");
  6974                           	bsf	status, 5	;RP0=1, select bank1
  6975  133B  1683               	bcf	status, 6	;RP1=0, select bank1
  6976  133C  1303               	clrf	(writeLCD@y)^080h
  6977  133D  01AB               	movlw	(low((((STR_10)-__stringbase)|8000h)))&0ffh
  6978  133E  3044               	movwf	(writeLCD@ptr)^080h
  6979  133F  00AC               	movlw	80h
  6980  1340  3080               	movwf	(writeLCD@ptr+1)^080h
  6981  1341  00AD               	movlw	low(0)
  6982  1342  3000               	fcall	_writeLCD
  6983  1343  160A  118A  26EA  160A  118A  	line	154
  6984                           	
  6985                           l83:	
  6986  1348                     	return
  6987  1348  0008               	opt stack 0
  6988                           GLOBAL	__end_of_erasertemp
  6989                           	__end_of_erasertemp:
  6990  1349                     	signat	_erasertemp,89
  6991                           	global	_TempMed
  6992                           
  6993 ;; *************** function _TempMed *****************
  6994 ;; Defined at:
  6995 ;;		line 131 in file "lcd.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;		None
  6998 ;; Auto vars:     Size  Location     Type
  6999 ;;  md              3   35[BANK1 ] unsigned char [3]
  7000 ;;  Media           1   38[BANK1 ] unsigned char 
  7001 ;; Return value:  Size  Location     Type
  7002 ;;                  1    wreg      void 
  7003 ;; Registers used:
  7004 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7005 ;; Tracked objects:
  7006 ;;		On entry : 0/0
  7007 ;;		On exit  : 0/0
  7008 ;;		Unchanged: 0/0
  7009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7010 ;;      Params:         0       0       0       0       0
  7011 ;;      Locals:         0       0       4       0       0
  7012 ;;      Temps:          0       0       3       0       0
  7013 ;;      Totals:         0       0       7       0       0
  7014 ;;Total ram usage:        7 bytes
  7015 ;; Hardware stack levels used:    1
  7016 ;; Hardware stack levels required when called:    9
  7017 ;; This function calls:
  7018 ;;		___awdiv
  7019 ;;		___awmod
  7020 ;;		_gotoxy
  7021 ;;		_media
  7022 ;;		_putLCD
  7023 ;;		_writeLCD
  7024 ;; This function is called by:
  7025 ;;		_main
  7026 ;; This function uses a non-reentrant model
  7027 ;;
  7028                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  7029                           	line	131
  7030                           global __ptext19
  7031                           __ptext19:	;psect for function _TempMed
  7032  0964                     psect	text19
  7033                           	file	"lcd.c"
  7034                           	line	131
  7035                           	global	__size_of_TempMed
  7036                           	__size_of_TempMed	equ	__end_of_TempMed-_TempMed
  7037  0066                     	
  7038                           _TempMed:	
  7039  0964                     ;incstack = 0
  7040 ;; hardware stack exceeded
  7041                           	opt	stack 0
  7042                           ; Regs used in _TempMed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7043                           	line	134
  7044                           	
  7045                           l2933:	
  7046  0964                     ;lcd.c: 133:     unsigned char Media;;lcd.c: 134:     char md[] = {"00"};
  7047                           	bsf	status, 5	;RP0=1, select bank1
  7048  0964  1683               	bcf	status, 6	;RP1=0, select bank1
  7049  0965  1303               	movf	(TempMed@F1409)^080h,w
  7050  0966  0861               	movwf	(TempMed@md)^080h
  7051  0967  00C3               	movf	(TempMed@F1409+1)^080h,w
  7052  0968  0862               	movwf	(TempMed@md+1)^080h
  7053  0969  00C4               	movf	(TempMed@F1409+2)^080h,w
  7054  096A  0863               	movwf	(TempMed@md+2)^080h
  7055  096B  00C5               	line	135
  7056                           	
  7057                           l2935:	
  7058  096C                     ;lcd.c: 135:     writeLCD(0,0, "Temp. Med.:    C");
  7059                           	clrf	(writeLCD@y)^080h
  7060  096C  01AB               	movlw	(low((((STR_8)-__stringbase)|8000h)))&0ffh
  7061  096D  3011               	movwf	(writeLCD@ptr)^080h
  7062  096E  00AC               	movlw	80h
  7063  096F  3080               	movwf	(writeLCD@ptr+1)^080h
  7064  0970  00AD               	movlw	low(0)
  7065  0971  3000               	fcall	_writeLCD
  7066  0972  160A  118A  26EA  120A  158A  	line	136
  7067                           	
  7068                           l2937:	
  7069  0977                     ;lcd.c: 136:     gotoxy(14,0);putLCD(0xDF);
  7070                           	bsf	status, 5	;RP0=1, select bank1
  7071  0977  1683               	bcf	status, 6	;RP1=0, select bank1
  7072  0978  1303               	clrf	(gotoxy@y)^080h
  7073  0979  01A7               	movlw	low(0Eh)
  7074  097A  300E               	fcall	_gotoxy
  7075  097B  160A  118A  23C4  120A  158A  	
  7076                           l2939:	
  7077  0980                     	movlw	low(0DFh)
  7078  0980  30DF               	fcall	_putLCD
  7079  0981  120A  158A  20B5  120A  158A  	line	137
  7080                           	
  7081                           l2941:	
  7082  0986                     ;lcd.c: 137:     Media = media();
  7083                           	fcall	_media
  7084  0986  120A  158A  2467  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  7085  098B  1683               	bcf	status, 6	;RP1=0, select bank1
  7086  098C  1303               	movwf	(??_TempMed+0)^080h+0
  7087  098D  00C0               	movf	(??_TempMed+0)^080h+0,w
  7088  098E  0840               	movwf	(TempMed@Media)^080h
  7089  098F  00C6               	line	138
  7090                           	
  7091                           l2943:	
  7092  0990                     ;lcd.c: 138:     md[0] =(Media/10)+0x30;
  7093                           	movlw	0Ah
  7094  0990  300A               	movwf	(___awdiv@divisor)^080h
  7095  0991  00A0               	movlw	0
  7096  0992  3000               	movwf	((___awdiv@divisor)^080h)+1
  7097  0993  00A1               	movf	(TempMed@Media)^080h,w
  7098  0994  0846               	movwf	(??_TempMed+0)^080h+0
  7099  0995  00C0               	clrf	(??_TempMed+0)^080h+0+1
  7100  0996  01C1               	movf	0+(??_TempMed+0)^080h+0,w
  7101  0997  0840               	movwf	(___awdiv@dividend)^080h
  7102  0998  00A2               	movf	1+(??_TempMed+0)^080h+0,w
  7103  0999  0841               	movwf	(___awdiv@dividend+1)^080h
  7104  099A  00A3               	fcall	___awdiv
  7105  099B  120A  158A  2239  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  7106  09A0  1683               	bcf	status, 6	;RP1=0, select bank1
  7107  09A1  1303               	movf	(0+(?___awdiv))^080h,w
  7108  09A2  0820               	addlw	030h
  7109  09A3  3E30               	movwf	(??_TempMed+2)^080h+0
  7110  09A4  00C2               	movf	(??_TempMed+2)^080h+0,w
  7111  09A5  0842               	movwf	(TempMed@md)^080h
  7112  09A6  00C3               	line	139
  7113                           	
  7114                           l2945:	
  7115  09A7                     ;lcd.c: 139:     md[1] =(Media%10)+0x30;
  7116                           	movlw	0Ah
  7117  09A7  300A               	movwf	(___awmod@divisor)^080h
  7118  09A8  00A0               	movlw	0
  7119  09A9  3000               	movwf	((___awmod@divisor)^080h)+1
  7120  09AA  00A1               	movf	(TempMed@Media)^080h,w
  7121  09AB  0846               	movwf	(??_TempMed+0)^080h+0
  7122  09AC  00C0               	clrf	(??_TempMed+0)^080h+0+1
  7123  09AD  01C1               	movf	0+(??_TempMed+0)^080h+0,w
  7124  09AE  0840               	movwf	(___awmod@dividend)^080h
  7125  09AF  00A2               	movf	1+(??_TempMed+0)^080h+0,w
  7126  09B0  0841               	movwf	(___awmod@dividend+1)^080h
  7127  09B1  00A3               	fcall	___awmod
  7128  09B2  120A  158A  20FF  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  7129  09B7  1683               	bcf	status, 6	;RP1=0, select bank1
  7130  09B8  1303               	movf	(0+(?___awmod))^080h,w
  7131  09B9  0820               	addlw	030h
  7132  09BA  3E30               	movwf	(??_TempMed+2)^080h+0
  7133  09BB  00C2               	movf	(??_TempMed+2)^080h+0,w
  7134  09BC  0842               	movwf	0+(TempMed@md)^080h+01h
  7135  09BD  00C4               	line	140
  7136                           	
  7137                           l2947:	
  7138  09BE                     ;lcd.c: 140:     writeLCD(12,0,md);
  7139                           	clrf	(writeLCD@y)^080h
  7140  09BE  01AB               	movlw	(low(TempMed@md|((0x0)<<8))&0ffh)
  7141  09BF  30C3               	movwf	(writeLCD@ptr)^080h
  7142  09C0  00AC               	movlw	(0x0)
  7143  09C1  3000               	movwf	(writeLCD@ptr+1)^080h
  7144  09C2  00AD               	movlw	low(0Ch)
  7145  09C3  300C               	fcall	_writeLCD
  7146  09C4  160A  118A  26EA  120A  158A  	line	142
  7147                           	
  7148                           l77:	
  7149  09C9                     	return
  7150  09C9  0008               	opt stack 0
  7151                           GLOBAL	__end_of_TempMed
  7152                           	__end_of_TempMed:
  7153  09CA                     	signat	_TempMed,89
  7154                           	global	_media
  7155                           
  7156 ;; *************** function _media *****************
  7157 ;; Defined at:
  7158 ;;		line 51 in file "recept.c"
  7159 ;; Parameters:    Size  Location     Type
  7160 ;;		None
  7161 ;; Auto vars:     Size  Location     Type
  7162 ;;  ee              2   29[BANK1 ] unsigned int 
  7163 ;;  i               1   31[BANK1 ] unsigned char 
  7164 ;;  valor           4   24[BANK1 ] unsigned long 
  7165 ;;  divisao         4   20[BANK1 ] unsigned long 
  7166 ;;  retorno         1   28[BANK1 ] unsigned char 
  7167 ;; Return value:  Size  Location     Type
  7168 ;;                  1    wreg      unsigned char 
  7169 ;; Registers used:
  7170 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7171 ;; Tracked objects:
  7172 ;;		On entry : 0/0
  7173 ;;		On exit  : 0/0
  7174 ;;		Unchanged: 0/0
  7175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7176 ;;      Params:         0       0       0       0       0
  7177 ;;      Locals:         0       0      12       0       0
  7178 ;;      Temps:          0       0       6       0       0
  7179 ;;      Totals:         0       0      18       0       0
  7180 ;;Total ram usage:       18 bytes
  7181 ;; Hardware stack levels used:    1
  7182 ;; Hardware stack levels required when called:    7
  7183 ;; This function calls:
  7184 ;;		_EEPROM_read
  7185 ;;		___lldiv
  7186 ;;		___wmul
  7187 ;; This function is called by:
  7188 ;;		_TempMed
  7189 ;; This function uses a non-reentrant model
  7190 ;;
  7191                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  7192                           	file	"recept.c"
  7193                           	line	51
  7194                           global __ptext20
  7195                           __ptext20:	;psect for function _media
  7196  0C67                     psect	text20
  7197                           	file	"recept.c"
  7198                           	line	51
  7199                           	global	__size_of_media
  7200                           	__size_of_media	equ	__end_of_media-_media
  7201  009E                     	
  7202                           _media:	
  7203  0C67                     ;incstack = 0
  7204 ;; hardware stack exceeded
  7205                           	opt	stack 0
  7206                           ; Regs used in _media: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7207                           	line	53
  7208                           	
  7209                           l2545:	
  7210  0C67                     ;recept.c: 53:     unsigned long divisao = 0;
  7211                           	movlw	high highword(0)
  7212  0C67  3000               	bsf	status, 5	;RP0=1, select bank1
  7213  0C68  1683               	bcf	status, 6	;RP1=0, select bank1
  7214  0C69  1303               	movwf	(media@divisao+3)^080h
  7215  0C6A  00B7               	movlw	low highword(0)
  7216  0C6B  3000               	movwf	(media@divisao+2)^080h
  7217  0C6C  00B6               	movlw	high(0)
  7218  0C6D  3000               	movwf	(media@divisao+1)^080h
  7219  0C6E  00B5               	movlw	low(0)
  7220  0C6F  3000               	movwf	(media@divisao)^080h
  7221  0C70  00B4               
  7222                           	line	54
  7223                           ;recept.c: 54:     unsigned long valor = 0;
  7224                           	movlw	high highword(0)
  7225  0C71  3000               	movwf	(media@valor+3)^080h
  7226  0C72  00BB               	movlw	low highword(0)
  7227  0C73  3000               	movwf	(media@valor+2)^080h
  7228  0C74  00BA               	movlw	high(0)
  7229  0C75  3000               	movwf	(media@valor+1)^080h
  7230  0C76  00B9               	movlw	low(0)
  7231  0C77  3000               	movwf	(media@valor)^080h
  7232  0C78  00B8               
  7233                           	line	55
  7234                           	
  7235                           l2547:	
  7236  0C79                     ;recept.c: 55:     for(char i=0; i<100; i++)
  7237                           	clrf	(media@i)^080h
  7238  0C79  01BF               	
  7239                           l2549:	
  7240  0C7A                     	movlw	low(064h)
  7241  0C7A  3064               	subwf	(media@i)^080h,w
  7242  0C7B  023F               	skipc
  7243  0C7C  1C03               	goto	u3161
  7244  0C7D  2C7F               	goto	u3160
  7245  0C7E  2C80               u3161:
  7246  0C7F                     	goto	l2553
  7247  0C7F  2C82               u3160:
  7248  0C80                     	goto	l2565
  7249  0C80  2CE7               	
  7250                           l2551:	
  7251  0C81                     	goto	l2565
  7252  0C81  2CE7               	
  7253                           l287:	
  7254  0C82                     	line	57
  7255                           	
  7256                           l2553:	
  7257  0C82                     ;recept.c: 56:     {;recept.c: 57:         unsigned int ee = 0;
  7258                           	clrf	(media@ee)^080h
  7259  0C82  01BD               	clrf	(media@ee+1)^080h
  7260  0C83  01BE               	line	58
  7261                           	
  7262                           l2555:	
  7263  0C84                     ;recept.c: 58:         ee = EEPROM_read(i);
  7264                           	movf	(media@i)^080h,w
  7265  0C84  083F               	fcall	_EEPROM_read
  7266  0C85  160A  118A  24E8  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  7267  0C8A  1683               	bcf	status, 6	;RP1=0, select bank1
  7268  0C8B  1303               	movf	(1+(?_EEPROM_read))^080h,w
  7269  0C8C  0822               	movwf	(media@ee+1)^080h
  7270  0C8D  00BE               	movf	(0+(?_EEPROM_read))^080h,w
  7271  0C8E  0821               	movwf	(media@ee)^080h
  7272  0C8F  00BD               	line	59
  7273                           	
  7274                           l2557:	
  7275  0C90                     ;recept.c: 59:         valor += ee * i;
  7276                           	movf	(media@i)^080h,w
  7277  0C90  083F               	movwf	(??_media+0)^080h+0
  7278  0C91  00AE               	clrf	(??_media+0)^080h+0+1
  7279  0C92  01AF               	movf	0+(??_media+0)^080h+0,w
  7280  0C93  082E               	movwf	(___wmul@multiplier)^080h
  7281  0C94  00A0               	movf	1+(??_media+0)^080h+0,w
  7282  0C95  082F               	movwf	(___wmul@multiplier+1)^080h
  7283  0C96  00A1               	movf	(media@ee+1)^080h,w
  7284  0C97  083E               	movwf	(___wmul@multiplicand+1)^080h
  7285  0C98  00A3               	movf	(media@ee)^080h,w
  7286  0C99  083D               	movwf	(___wmul@multiplicand)^080h
  7287  0C9A  00A2               	fcall	___wmul
  7288  0C9B  160A  118A  2580  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  7289  0CA0  1683               	bcf	status, 6	;RP1=0, select bank1
  7290  0CA1  1303               	movf	(0+(?___wmul))^080h,w
  7291  0CA2  0820               	movwf	((??_media+2)^080h+0)
  7292  0CA3  00B0               	movf	(1+(?___wmul))^080h,w
  7293  0CA4  0821               	movwf	((??_media+2)^080h+0+1)
  7294  0CA5  00B1               	clrf	((??_media+2)^080h+0+2)
  7295  0CA6  01B2               	clrf	((??_media+2)^080h+0+3)
  7296  0CA7  01B3               	movf	0+(??_media+2)^080h+0,w
  7297  0CA8  0830               	addwf	(media@valor)^080h,f
  7298  0CA9  07B8               	movf	1+(??_media+2)^080h+0,w
  7299  0CAA  0831               	clrz
  7300  0CAB  1103               	skipnc
  7301  0CAC  1803               	addlw	1
  7302  0CAD  3E01               	skipnz
  7303  0CAE  1903               	goto	u3171
  7304  0CAF  2CB1               	addwf	(media@valor+1)^080h,f
  7305  0CB0  07B9               u3171:
  7306  0CB1                     	movf	2+(??_media+2)^080h+0,w
  7307  0CB1  0832               	clrz
  7308  0CB2  1103               	skipnc
  7309  0CB3  1803               	addlw	1
  7310  0CB4  3E01               	skipnz
  7311  0CB5  1903               	goto	u3172
  7312  0CB6  2CB8               	addwf	(media@valor+2)^080h,f
  7313  0CB7  07BA               u3172:
  7314  0CB8                     	movf	3+(??_media+2)^080h+0,w
  7315  0CB8  0833               	clrz
  7316  0CB9  1103               	skipnc
  7317  0CBA  1803               	addlw	1
  7318  0CBB  3E01               	skipnz
  7319  0CBC  1903               	goto	u3173
  7320  0CBD  2CBF               	addwf	(media@valor+3)^080h,f
  7321  0CBE  07BB               u3173:
  7322  0CBF                     
  7323                           	line	60
  7324                           	
  7325                           l2559:	
  7326  0CBF                     ;recept.c: 60:         divisao += ee;
  7327                           	movf	(media@ee)^080h,w
  7328  0CBF  083D               	movwf	((??_media+0)^080h+0)
  7329  0CC0  00AE               	movf	(media@ee+1)^080h,w
  7330  0CC1  083E               	movwf	((??_media+0)^080h+0+1)
  7331  0CC2  00AF               	clrf	((??_media+0)^080h+0+2)
  7332  0CC3  01B0               	clrf	((??_media+0)^080h+0+3)
  7333  0CC4  01B1               	movf	0+(??_media+0)^080h+0,w
  7334  0CC5  082E               	addwf	(media@divisao)^080h,f
  7335  0CC6  07B4               	movf	1+(??_media+0)^080h+0,w
  7336  0CC7  082F               	clrz
  7337  0CC8  1103               	skipnc
  7338  0CC9  1803               	addlw	1
  7339  0CCA  3E01               	skipnz
  7340  0CCB  1903               	goto	u3181
  7341  0CCC  2CCE               	addwf	(media@divisao+1)^080h,f
  7342  0CCD  07B5               u3181:
  7343  0CCE                     	movf	2+(??_media+0)^080h+0,w
  7344  0CCE  0830               	clrz
  7345  0CCF  1103               	skipnc
  7346  0CD0  1803               	addlw	1
  7347  0CD1  3E01               	skipnz
  7348  0CD2  1903               	goto	u3182
  7349  0CD3  2CD5               	addwf	(media@divisao+2)^080h,f
  7350  0CD4  07B6               u3182:
  7351  0CD5                     	movf	3+(??_media+0)^080h+0,w
  7352  0CD5  0831               	clrz
  7353  0CD6  1103               	skipnc
  7354  0CD7  1803               	addlw	1
  7355  0CD8  3E01               	skipnz
  7356  0CD9  1903               	goto	u3183
  7357  0CDA  2CDC               	addwf	(media@divisao+3)^080h,f
  7358  0CDB  07B7               u3183:
  7359  0CDC                     
  7360                           	line	61
  7361                           	
  7362                           l2561:	
  7363  0CDC                     ;recept.c: 61:     }
  7364                           	movlw	low(01h)
  7365  0CDC  3001               	movwf	(??_media+0)^080h+0
  7366  0CDD  00AE               	movf	(??_media+0)^080h+0,w
  7367  0CDE  082E               	addwf	(media@i)^080h,f
  7368  0CDF  07BF               	
  7369                           l2563:	
  7370  0CE0                     	movlw	low(064h)
  7371  0CE0  3064               	subwf	(media@i)^080h,w
  7372  0CE1  023F               	skipc
  7373  0CE2  1C03               	goto	u3191
  7374  0CE3  2CE5               	goto	u3190
  7375  0CE4  2CE6               u3191:
  7376  0CE5                     	goto	l2553
  7377  0CE5  2C82               u3190:
  7378  0CE6                     	goto	l2565
  7379  0CE6  2CE7               	
  7380                           l288:	
  7381  0CE7                     	line	62
  7382                           	
  7383                           l2565:	
  7384  0CE7                     ;recept.c: 62:     unsigned char retorno =(valor/divisao);
  7385                           	movf	(media@divisao+3)^080h,w
  7386  0CE7  0837               	movwf	(___lldiv@divisor+3)^080h
  7387  0CE8  00A3               	movf	(media@divisao+2)^080h,w
  7388  0CE9  0836               	movwf	(___lldiv@divisor+2)^080h
  7389  0CEA  00A2               	movf	(media@divisao+1)^080h,w
  7390  0CEB  0835               	movwf	(___lldiv@divisor+1)^080h
  7391  0CEC  00A1               	movf	(media@divisao)^080h,w
  7392  0CED  0834               	movwf	(___lldiv@divisor)^080h
  7393  0CEE  00A0               
  7394                           	movf	(media@valor+3)^080h,w
  7395  0CEF  083B               	movwf	(___lldiv@dividend+3)^080h
  7396  0CF0  00A7               	movf	(media@valor+2)^080h,w
  7397  0CF1  083A               	movwf	(___lldiv@dividend+2)^080h
  7398  0CF2  00A6               	movf	(media@valor+1)^080h,w
  7399  0CF3  0839               	movwf	(___lldiv@dividend+1)^080h
  7400  0CF4  00A5               	movf	(media@valor)^080h,w
  7401  0CF5  0838               	movwf	(___lldiv@dividend)^080h
  7402  0CF6  00A4               
  7403                           	fcall	___lldiv
  7404  0CF7  120A  158A  21CA  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  7405  0CFC  1683               	bcf	status, 6	;RP1=0, select bank1
  7406  0CFD  1303               	movf	(0+(?___lldiv))^080h,w
  7407  0CFE  0820               	movwf	(??_media+0)^080h+0
  7408  0CFF  00AE               	movf	(??_media+0)^080h+0,w
  7409  0D00  082E               	movwf	(media@retorno)^080h
  7410  0D01  00BC               	line	63
  7411                           	
  7412                           l2567:	
  7413  0D02                     ;recept.c: 63:     return retorno;
  7414                           	movf	(media@retorno)^080h,w
  7415  0D02  083C               	goto	l289
  7416  0D03  2D04               	
  7417                           l2569:	
  7418  0D04                     	line	64
  7419                           	
  7420                           l289:	
  7421  0D04                     	return
  7422  0D04  0008               	opt stack 0
  7423                           GLOBAL	__end_of_media
  7424                           	__end_of_media:
  7425  0D05                     	signat	_media,89
  7426                           	global	___wmul
  7427                           
  7428 ;; *************** function ___wmul *****************
  7429 ;; Defined at:
  7430 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7431 ;; Parameters:    Size  Location     Type
  7432 ;;  multiplier      2    0[BANK1 ] unsigned int 
  7433 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;  product         2    4[BANK1 ] unsigned int 
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  2    0[BANK1 ] unsigned int 
  7438 ;; Registers used:
  7439 ;;		wreg, status,2, status,0
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7445 ;;      Params:         0       0       4       0       0
  7446 ;;      Locals:         0       0       2       0       0
  7447 ;;      Temps:          0       0       0       0       0
  7448 ;;      Totals:         0       0       6       0       0
  7449 ;;Total ram usage:        6 bytes
  7450 ;; Hardware stack levels used:    1
  7451 ;; Hardware stack levels required when called:    5
  7452 ;; This function calls:
  7453 ;;		Nothing
  7454 ;; This function is called by:
  7455 ;;		_media
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           psect	text21,local,class=CODE,delta=2,merge=1,group=1
  7459                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7460                           	line	15
  7461                           global __ptext21
  7462                           __ptext21:	;psect for function ___wmul
  7463  1580                     psect	text21
  7464                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7465                           	line	15
  7466                           	global	__size_of___wmul
  7467                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  7468  002A                     	
  7469                           ___wmul:	
  7470  1580                     ;incstack = 0
  7471                           	opt	stack 0
  7472                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7473                           	line	43
  7474                           	
  7475                           l2221:	
  7476  1580                     	bsf	status, 5	;RP0=1, select bank1
  7477  1580  1683               	bcf	status, 6	;RP1=0, select bank1
  7478  1581  1303               	clrf	(___wmul@product)^080h
  7479  1582  01A4               	clrf	(___wmul@product+1)^080h
  7480  1583  01A5               	goto	l2223
  7481  1584  2D85               	line	44
  7482                           	
  7483                           l409:	
  7484  1585                     	line	45
  7485                           	
  7486                           l2223:	
  7487  1585                     	btfss	(___wmul@multiplier)^080h,(0)&7
  7488  1585  1C20               	goto	u2351
  7489  1586  2D88               	goto	u2350
  7490  1587  2D89               u2351:
  7491  1588                     	goto	l410
  7492  1588  2D8F               u2350:
  7493  1589                     	line	46
  7494                           	
  7495                           l2225:	
  7496  1589                     	movf	(___wmul@multiplicand)^080h,w
  7497  1589  0822               	addwf	(___wmul@product)^080h,f
  7498  158A  07A4               	skipnc
  7499  158B  1803               	incf	(___wmul@product+1)^080h,f
  7500  158C  0AA5               	movf	(___wmul@multiplicand+1)^080h,w
  7501  158D  0823               	addwf	(___wmul@product+1)^080h,f
  7502  158E  07A5               	
  7503                           l410:	
  7504  158F                     	line	47
  7505                           	movlw	01h
  7506  158F  3001               	
  7507                           u2365:
  7508  1590                     	clrc
  7509  1590  1003               	rlf	(___wmul@multiplicand)^080h,f
  7510  1591  0DA2               	rlf	(___wmul@multiplicand+1)^080h,f
  7511  1592  0DA3               	addlw	-1
  7512  1593  3EFF               	skipz
  7513  1594  1D03               	goto	u2365
  7514  1595  2D90               	line	48
  7515                           	
  7516                           l2227:	
  7517  1596                     	movlw	01h
  7518  1596  3001               	
  7519                           u2375:
  7520  1597                     	clrc
  7521  1597  1003               	rrf	(___wmul@multiplier+1)^080h,f
  7522  1598  0CA1               	rrf	(___wmul@multiplier)^080h,f
  7523  1599  0CA0               	addlw	-1
  7524  159A  3EFF               	skipz
  7525  159B  1D03               	goto	u2375
  7526  159C  2D97               	line	49
  7527                           	
  7528                           l2229:	
  7529  159D                     	movf	((___wmul@multiplier)^080h),w
  7530  159D  0820               iorwf	((___wmul@multiplier+1)^080h),w
  7531  159E  0421               	btfss	status,2
  7532  159F  1D03               	goto	u2381
  7533  15A0  2DA2               	goto	u2380
  7534  15A1  2DA3               u2381:
  7535  15A2                     	goto	l2223
  7536  15A2  2D85               u2380:
  7537  15A3                     	goto	l2231
  7538  15A3  2DA4               	
  7539                           l411:	
  7540  15A4                     	line	52
  7541                           	
  7542                           l2231:	
  7543  15A4                     	movf	(___wmul@product+1)^080h,w
  7544  15A4  0825               	movwf	(?___wmul+1)^080h
  7545  15A5  00A1               	movf	(___wmul@product)^080h,w
  7546  15A6  0824               	movwf	(?___wmul)^080h
  7547  15A7  00A0               	goto	l412
  7548  15A8  2DA9               	
  7549                           l2233:	
  7550  15A9                     	line	53
  7551                           	
  7552                           l412:	
  7553  15A9                     	return
  7554  15A9  0008               	opt stack 0
  7555                           GLOBAL	__end_of___wmul
  7556                           	__end_of___wmul:
  7557  15AA                     	signat	___wmul,8314
  7558                           	global	___lldiv
  7559                           
  7560 ;; *************** function ___lldiv *****************
  7561 ;; Defined at:
  7562 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  7563 ;; Parameters:    Size  Location     Type
  7564 ;;  divisor         4    0[BANK1 ] unsigned long 
  7565 ;;  dividend        4    4[BANK1 ] unsigned long 
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;  quotient        4    9[BANK1 ] unsigned long 
  7568 ;;  counter         1   13[BANK1 ] unsigned char 
  7569 ;; Return value:  Size  Location     Type
  7570 ;;                  4    0[BANK1 ] unsigned long 
  7571 ;; Registers used:
  7572 ;;		wreg, status,2, status,0
  7573 ;; Tracked objects:
  7574 ;;		On entry : 0/0
  7575 ;;		On exit  : 0/0
  7576 ;;		Unchanged: 0/0
  7577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7578 ;;      Params:         0       0       8       0       0
  7579 ;;      Locals:         0       0       5       0       0
  7580 ;;      Temps:          0       0       1       0       0
  7581 ;;      Totals:         0       0      14       0       0
  7582 ;;Total ram usage:       14 bytes
  7583 ;; Hardware stack levels used:    1
  7584 ;; Hardware stack levels required when called:    5
  7585 ;; This function calls:
  7586 ;;		Nothing
  7587 ;; This function is called by:
  7588 ;;		_media
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           psect	text22,local,class=CODE,delta=2,merge=1,group=1
  7592                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  7593                           	line	5
  7594                           global __ptext22
  7595                           __ptext22:	;psect for function ___lldiv
  7596  09CA                     psect	text22
  7597                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  7598                           	line	5
  7599                           	global	__size_of___lldiv
  7600                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  7601  006F                     	
  7602                           ___lldiv:	
  7603  09CA                     ;incstack = 0
  7604                           	opt	stack 0
  7605                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7606                           	line	13
  7607                           	
  7608                           l2235:	
  7609  09CA                     	movlw	high highword(0)
  7610  09CA  3000               	bsf	status, 5	;RP0=1, select bank1
  7611  09CB  1683               	bcf	status, 6	;RP1=0, select bank1
  7612  09CC  1303               	movwf	(___lldiv@quotient+3)^080h
  7613  09CD  00AC               	movlw	low highword(0)
  7614  09CE  3000               	movwf	(___lldiv@quotient+2)^080h
  7615  09CF  00AB               	movlw	high(0)
  7616  09D0  3000               	movwf	(___lldiv@quotient+1)^080h
  7617  09D1  00AA               	movlw	low(0)
  7618  09D2  3000               	movwf	(___lldiv@quotient)^080h
  7619  09D3  00A9               
  7620                           	line	14
  7621                           	movf	(___lldiv@divisor+3)^080h,w
  7622  09D4  0823               	iorwf	(___lldiv@divisor+2)^080h,w
  7623  09D5  0422               	iorwf	(___lldiv@divisor+1)^080h,w
  7624  09D6  0421               	iorwf	(___lldiv@divisor)^080h,w
  7625  09D7  0420               	skipnz
  7626  09D8  1903               	goto	u2391
  7627  09D9  29DB               	goto	u2390
  7628  09DA  29DC               u2391:
  7629  09DB                     	goto	l2255
  7630  09DB  2A2F               u2390:
  7631  09DC                     	line	15
  7632                           	
  7633                           l2237:	
  7634  09DC                     	clrf	(___lldiv@counter)^080h
  7635  09DC  01AD               	incf	(___lldiv@counter)^080h,f
  7636  09DD  0AAD               	line	16
  7637                           	goto	l2241
  7638  09DE  29ED               	
  7639                           l441:	
  7640  09DF                     	line	17
  7641                           	
  7642                           l2239:	
  7643  09DF                     	movlw	01h
  7644  09DF  3001               	movwf	(??___lldiv+0)^080h+0
  7645  09E0  00A8               u2405:
  7646  09E1                     	clrc
  7647  09E1  1003               	rlf	(___lldiv@divisor)^080h,f
  7648  09E2  0DA0               	rlf	(___lldiv@divisor+1)^080h,f
  7649  09E3  0DA1               	rlf	(___lldiv@divisor+2)^080h,f
  7650  09E4  0DA2               	rlf	(___lldiv@divisor+3)^080h,f
  7651  09E5  0DA3               	decfsz	(??___lldiv+0)^080h+0
  7652  09E6  0BA8               	goto	u2405
  7653  09E7  29E1               	line	18
  7654                           	movlw	low(01h)
  7655  09E8  3001               	movwf	(??___lldiv+0)^080h+0
  7656  09E9  00A8               	movf	(??___lldiv+0)^080h+0,w
  7657  09EA  0828               	addwf	(___lldiv@counter)^080h,f
  7658  09EB  07AD               	goto	l2241
  7659  09EC  29ED               	line	19
  7660                           	
  7661                           l440:	
  7662  09ED                     	line	16
  7663                           	
  7664                           l2241:	
  7665  09ED                     	btfss	(___lldiv@divisor+3)^080h,(31)&7
  7666  09ED  1FA3               	goto	u2411
  7667  09EE  29F0               	goto	u2410
  7668  09EF  29F1               u2411:
  7669  09F0                     	goto	l2239
  7670  09F0  29DF               u2410:
  7671  09F1                     	goto	l2243
  7672  09F1  29F3               	
  7673                           l442:	
  7674  09F2                     	goto	l2243
  7675  09F2  29F3               	line	20
  7676                           	
  7677                           l443:	
  7678  09F3                     	line	21
  7679                           	
  7680                           l2243:	
  7681  09F3                     	movlw	01h
  7682  09F3  3001               	movwf	(??___lldiv+0)^080h+0
  7683  09F4  00A8               u2425:
  7684  09F5                     	clrc
  7685  09F5  1003               	rlf	(___lldiv@quotient)^080h,f
  7686  09F6  0DA9               	rlf	(___lldiv@quotient+1)^080h,f
  7687  09F7  0DAA               	rlf	(___lldiv@quotient+2)^080h,f
  7688  09F8  0DAB               	rlf	(___lldiv@quotient+3)^080h,f
  7689  09F9  0DAC               	decfsz	(??___lldiv+0)^080h+0
  7690  09FA  0BA8               	goto	u2425
  7691  09FB  29F5               	line	22
  7692                           	
  7693                           l2245:	
  7694  09FC                     	movf	(___lldiv@divisor+3)^080h,w
  7695  09FC  0823               	subwf	(___lldiv@dividend+3)^080h,w
  7696  09FD  0227               	skipz
  7697  09FE  1D03               	goto	u2435
  7698  09FF  2A0A               	movf	(___lldiv@divisor+2)^080h,w
  7699  0A00  0822               	subwf	(___lldiv@dividend+2)^080h,w
  7700  0A01  0226               	skipz
  7701  0A02  1D03               	goto	u2435
  7702  0A03  2A0A               	movf	(___lldiv@divisor+1)^080h,w
  7703  0A04  0821               	subwf	(___lldiv@dividend+1)^080h,w
  7704  0A05  0225               	skipz
  7705  0A06  1D03               	goto	u2435
  7706  0A07  2A0A               	movf	(___lldiv@divisor)^080h,w
  7707  0A08  0820               	subwf	(___lldiv@dividend)^080h,w
  7708  0A09  0224               u2435:
  7709  0A0A                     	skipc
  7710  0A0A  1C03               	goto	u2431
  7711  0A0B  2A0D               	goto	u2430
  7712  0A0C  2A0E               u2431:
  7713  0A0D                     	goto	l2251
  7714  0A0D  2A1E               u2430:
  7715  0A0E                     	line	23
  7716                           	
  7717                           l2247:	
  7718  0A0E                     	movf	(___lldiv@divisor)^080h,w
  7719  0A0E  0820               	subwf	(___lldiv@dividend)^080h,f
  7720  0A0F  02A4               	movf	(___lldiv@divisor+1)^080h,w
  7721  0A10  0821               	skipc
  7722  0A11  1C03               	incfsz	(___lldiv@divisor+1)^080h,w
  7723  0A12  0F21               	subwf	(___lldiv@dividend+1)^080h,f
  7724  0A13  02A5               	movf	(___lldiv@divisor+2)^080h,w
  7725  0A14  0822               	skipc
  7726  0A15  1C03               	incfsz	(___lldiv@divisor+2)^080h,w
  7727  0A16  0F22               	subwf	(___lldiv@dividend+2)^080h,f
  7728  0A17  02A6               	movf	(___lldiv@divisor+3)^080h,w
  7729  0A18  0823               	skipc
  7730  0A19  1C03               	incfsz	(___lldiv@divisor+3)^080h,w
  7731  0A1A  0F23               	subwf	(___lldiv@dividend+3)^080h,f
  7732  0A1B  02A7               	line	24
  7733                           	
  7734                           l2249:	
  7735  0A1C                     	bsf	(___lldiv@quotient)^080h+(0/8),(0)&7
  7736  0A1C  1429               	goto	l2251
  7737  0A1D  2A1E               	line	25
  7738                           	
  7739                           l444:	
  7740  0A1E                     	line	26
  7741                           	
  7742                           l2251:	
  7743  0A1E                     	movlw	01h
  7744  0A1E  3001               u2445:
  7745  0A1F                     	clrc
  7746  0A1F  1003               	rrf	(___lldiv@divisor+3)^080h,f
  7747  0A20  0CA3               	rrf	(___lldiv@divisor+2)^080h,f
  7748  0A21  0CA2               	rrf	(___lldiv@divisor+1)^080h,f
  7749  0A22  0CA1               	rrf	(___lldiv@divisor)^080h,f
  7750  0A23  0CA0               	addlw	-1
  7751  0A24  3EFF               	skipz
  7752  0A25  1D03               	goto	u2445
  7753  0A26  2A1F               
  7754                           	line	27
  7755                           	
  7756                           l2253:	
  7757  0A27                     	movlw	01h
  7758  0A27  3001               	subwf	(___lldiv@counter)^080h,f
  7759  0A28  02AD               	btfss	status,2
  7760  0A29  1D03               	goto	u2451
  7761  0A2A  2A2C               	goto	u2450
  7762  0A2B  2A2D               u2451:
  7763  0A2C                     	goto	l2243
  7764  0A2C  29F3               u2450:
  7765  0A2D                     	goto	l2255
  7766  0A2D  2A2F               	
  7767                           l445:	
  7768  0A2E                     	goto	l2255
  7769  0A2E  2A2F               	line	28
  7770                           	
  7771                           l439:	
  7772  0A2F                     	line	29
  7773                           	
  7774                           l2255:	
  7775  0A2F                     	movf	(___lldiv@quotient+3)^080h,w
  7776  0A2F  082C               	movwf	(?___lldiv+3)^080h
  7777  0A30  00A3               	movf	(___lldiv@quotient+2)^080h,w
  7778  0A31  082B               	movwf	(?___lldiv+2)^080h
  7779  0A32  00A2               	movf	(___lldiv@quotient+1)^080h,w
  7780  0A33  082A               	movwf	(?___lldiv+1)^080h
  7781  0A34  00A1               	movf	(___lldiv@quotient)^080h,w
  7782  0A35  0829               	movwf	(?___lldiv)^080h
  7783  0A36  00A0               
  7784                           	goto	l446
  7785  0A37  2A38               	
  7786                           l2257:	
  7787  0A38                     	line	30
  7788                           	
  7789                           l446:	
  7790  0A38                     	return
  7791  0A38  0008               	opt stack 0
  7792                           GLOBAL	__end_of___lldiv
  7793                           	__end_of___lldiv:
  7794  0A39                     	signat	___lldiv,8316
  7795                           	global	_EEPROM_read
  7796                           
  7797 ;; *************** function _EEPROM_read *****************
  7798 ;; Defined at:
  7799 ;;		line 110 in file "recept.c"
  7800 ;; Parameters:    Size  Location     Type
  7801 ;;  pont            1    wreg     unsigned char 
  7802 ;; Auto vars:     Size  Location     Type
  7803 ;;  pont            1    5[BANK1 ] unsigned char 
  7804 ;; Return value:  Size  Location     Type
  7805 ;;                  2    1[BANK1 ] int 
  7806 ;; Registers used:
  7807 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7808 ;; Tracked objects:
  7809 ;;		On entry : 0/0
  7810 ;;		On exit  : 0/0
  7811 ;;		Unchanged: 0/0
  7812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7813 ;;      Params:         0       0       2       0       0
  7814 ;;      Locals:         0       0       1       0       0
  7815 ;;      Temps:          0       0       2       0       0
  7816 ;;      Totals:         0       0       5       0       0
  7817 ;;Total ram usage:        5 bytes
  7818 ;; Hardware stack levels used:    1
  7819 ;; Hardware stack levels required when called:    6
  7820 ;; This function calls:
  7821 ;;		_EEPROM_ReadByte
  7822 ;; This function is called by:
  7823 ;;		_salvatemp
  7824 ;;		_media
  7825 ;;		_moda
  7826 ;;		_mediana
  7827 ;; This function uses a non-reentrant model
  7828 ;;
  7829                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  7830                           	file	"recept.c"
  7831                           	line	110
  7832                           global __ptext23
  7833                           __ptext23:	;psect for function _EEPROM_read
  7834  14E8                     psect	text23
  7835                           	file	"recept.c"
  7836                           	line	110
  7837                           	global	__size_of_EEPROM_read
  7838                           	__size_of_EEPROM_read	equ	__end_of_EEPROM_read-_EEPROM_read
  7839  0022                     	
  7840                           _EEPROM_read:	
  7841  14E8                     ;incstack = 0
  7842                           	opt	stack 0
  7843                           ; Regs used in _EEPROM_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7844                           ;EEPROM_read@pont stored from wreg
  7845                           	bsf	status, 5	;RP0=1, select bank1
  7846  14E8  1683               	bcf	status, 6	;RP1=0, select bank1
  7847  14E9  1303               	movwf	(EEPROM_read@pont)^080h
  7848  14EA  00A5               	line	112
  7849                           	
  7850                           l2193:	
  7851  14EB                     ;recept.c: 110: int EEPROM_read(unsigned char pont);recept.c: 111: {;recept.c: 112:     
                                    return ((EEPROM_ReadByte(pont)*256)+EEPROM_ReadByte(pont+100));
  7852                           	movf	(EEPROM_read@pont)^080h,w
  7853  14EB  0825               	fcall	_EEPROM_ReadByte
  7854  14EC  160A  118A  246A  160A  118A  	bsf	status, 5	;RP0=1, select bank1
  7855  14F1  1683               	bcf	status, 6	;RP1=0, select bank1
  7856  14F2  1303               	movwf	(??_EEPROM_read+0)^080h+0
  7857  14F3  00A3               	clrf	(??_EEPROM_read+0)^080h+0+1
  7858  14F4  01A4               	movf	(??_EEPROM_read+0)^080h+0,w
  7859  14F5  0823               	movwf	(??_EEPROM_read+0)^080h+1
  7860  14F6  00A4               	clrf	(??_EEPROM_read+0)^080h+0
  7861  14F7  01A3               	movf	(EEPROM_read@pont)^080h,w
  7862  14F8  0825               	addlw	064h
  7863  14F9  3E64               	fcall	_EEPROM_ReadByte
  7864  14FA  160A  118A  246A  160A  118A  	bsf	status, 5	;RP0=1, select bank1
  7865  14FF  1683               	bcf	status, 6	;RP1=0, select bank1
  7866  1500  1303               	addwf	0+(??_EEPROM_read+0)^080h+0,w
  7867  1501  0723               	movwf	(?_EEPROM_read)^080h
  7868  1502  00A1               	movlw	0
  7869  1503  3000               	skipnc
  7870  1504  1803               	movlw	1
  7871  1505  3001               	addwf	1+(??_EEPROM_read+0)^080h+0,w
  7872  1506  0724               	movwf	1+(?_EEPROM_read)^080h
  7873  1507  00A2               	goto	l309
  7874  1508  2D09               	
  7875                           l2195:	
  7876  1509                     	line	113
  7877                           	
  7878                           l309:	
  7879  1509                     	return
  7880  1509  0008               	opt stack 0
  7881                           GLOBAL	__end_of_EEPROM_read
  7882                           	__end_of_EEPROM_read:
  7883  150A                     	signat	_EEPROM_read,4218
  7884                           	global	_EEPROM_ReadByte
  7885                           
  7886 ;; *************** function _EEPROM_ReadByte *****************
  7887 ;; Defined at:
  7888 ;;		line 132 in file "recept.c"
  7889 ;; Parameters:    Size  Location     Type
  7890 ;;  eepromAddres    1    wreg     unsigned char 
  7891 ;; Auto vars:     Size  Location     Type
  7892 ;;  eepromAddres    1    0[BANK1 ] unsigned char 
  7893 ;; Return value:  Size  Location     Type
  7894 ;;                  1    wreg      unsigned char 
  7895 ;; Registers used:
  7896 ;;		wreg
  7897 ;; Tracked objects:
  7898 ;;		On entry : 0/0
  7899 ;;		On exit  : 0/0
  7900 ;;		Unchanged: 0/0
  7901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7902 ;;      Params:         0       0       0       0       0
  7903 ;;      Locals:         0       0       1       0       0
  7904 ;;      Temps:          0       0       0       0       0
  7905 ;;      Totals:         0       0       1       0       0
  7906 ;;Total ram usage:        1 bytes
  7907 ;; Hardware stack levels used:    1
  7908 ;; Hardware stack levels required when called:    5
  7909 ;; This function calls:
  7910 ;;		Nothing
  7911 ;; This function is called by:
  7912 ;;		_EEPROM_read
  7913 ;; This function uses a non-reentrant model
  7914 ;;
  7915                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  7916                           	line	132
  7917                           global __ptext24
  7918                           __ptext24:	;psect for function _EEPROM_ReadByte
  7919  146A                     psect	text24
  7920                           	file	"recept.c"
  7921                           	line	132
  7922                           	global	__size_of_EEPROM_ReadByte
  7923                           	__size_of_EEPROM_ReadByte	equ	__end_of_EEPROM_ReadByte-_EEPROM_ReadByte
  7924  001E                     	
  7925                           _EEPROM_ReadByte:	
  7926  146A                     ;incstack = 0
  7927                           	opt	stack 0
  7928                           ; Regs used in _EEPROM_ReadByte: [wreg]
  7929                           ;EEPROM_ReadByte@eepromAddress stored from wreg
  7930                           	bsf	status, 5	;RP0=1, select bank1
  7931  146A  1683               	bcf	status, 6	;RP1=0, select bank1
  7932  146B  1303               	movwf	(EEPROM_ReadByte@eepromAddress)^080h
  7933  146C  00A0               	line	134
  7934                           	
  7935                           l2127:	
  7936  146D                     ;recept.c: 132: unsigned char EEPROM_ReadByte(unsigned char eepromAddress);recept.c: 133
                                 : {;recept.c: 134:     while(RD || WR);
  7937                           	goto	l318
  7938  146D  2C6E               	
  7939                           l319:	
  7940  146E                     	
  7941                           l318:	
  7942  146E                     	bsf	status, 5	;RP0=1, select bank3
  7943  146E  1683               	bsf	status, 6	;RP1=1, select bank3
  7944  146F  1703               	btfsc	(3168/8)^0180h,(3168)&7	;volsfr
  7945  1470  180C               	goto	u2241
  7946  1471  2C73               	goto	u2240
  7947  1472  2C74               u2241:
  7948  1473                     	goto	l318
  7949  1473  2C6E               u2240:
  7950  1474                     	
  7951                           l2129:	
  7952  1474                     	btfsc	(3169/8)^0180h,(3169)&7	;volsfr
  7953  1474  188C               	goto	u2251
  7954  1475  2C77               	goto	u2250
  7955  1476  2C78               u2251:
  7956  1477                     	goto	l318
  7957  1477  2C6E               u2250:
  7958  1478                     	goto	l2131
  7959  1478  2C79               	
  7960                           l320:	
  7961  1479                     	line	135
  7962                           	
  7963                           l2131:	
  7964  1479                     ;recept.c: 135:     EEADR=eepromAddress;
  7965                           	bsf	status, 5	;RP0=1, select bank1
  7966  1479  1683               	bcf	status, 6	;RP1=0, select bank1
  7967  147A  1303               	movf	(EEPROM_ReadByte@eepromAddress)^080h,w
  7968  147B  0820               	bcf	status, 5	;RP0=0, select bank2
  7969  147C  1283               	bsf	status, 6	;RP1=1, select bank2
  7970  147D  1703               	movwf	(269)^0100h	;volatile
  7971  147E  008D               	line	136
  7972                           	
  7973                           l2133:	
  7974  147F                     ;recept.c: 136:     EECON1bits.EEPGD = 0;
  7975                           	bsf	status, 5	;RP0=1, select bank3
  7976  147F  1683               	bsf	status, 6	;RP1=1, select bank3
  7977  1480  1703               	bcf	(396)^0180h,7	;volsfr
  7978  1481  138C               	line	137
  7979                           	
  7980                           l2135:	
  7981  1482                     ;recept.c: 137:     RD = 1;
  7982                           	bsf	(3168/8)^0180h,(3168)&7	;volsfr
  7983  1482  140C               	line	138
  7984                           ;recept.c: 138:     return(EEDATA);
  7985                           	bcf	status, 5	;RP0=0, select bank2
  7986  1483  1283               	bsf	status, 6	;RP1=1, select bank2
  7987  1484  1703               	movf	(268)^0100h,w	;volatile
  7988  1485  080C               	goto	l321
  7989  1486  2C87               	
  7990                           l2137:	
  7991  1487                     	line	139
  7992                           	
  7993                           l321:	
  7994  1487                     	return
  7995  1487  0008               	opt stack 0
  7996                           GLOBAL	__end_of_EEPROM_ReadByte
  7997                           	__end_of_EEPROM_ReadByte:
  7998  1488                     	signat	_EEPROM_ReadByte,4217
  7999                           	global	___awmod
  8000                           
  8001 ;; *************** function ___awmod *****************
  8002 ;; Defined at:
  8003 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  8004 ;; Parameters:    Size  Location     Type
  8005 ;;  divisor         2    0[BANK1 ] int 
  8006 ;;  dividend        2    2[BANK1 ] int 
  8007 ;; Auto vars:     Size  Location     Type
  8008 ;;  sign            1    6[BANK1 ] unsigned char 
  8009 ;;  counter         1    5[BANK1 ] unsigned char 
  8010 ;; Return value:  Size  Location     Type
  8011 ;;                  2    0[BANK1 ] int 
  8012 ;; Registers used:
  8013 ;;		wreg, status,2, status,0
  8014 ;; Tracked objects:
  8015 ;;		On entry : 0/0
  8016 ;;		On exit  : 0/0
  8017 ;;		Unchanged: 0/0
  8018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8019 ;;      Params:         0       0       4       0       0
  8020 ;;      Locals:         0       0       2       0       0
  8021 ;;      Temps:          0       0       1       0       0
  8022 ;;      Totals:         0       0       7       0       0
  8023 ;;Total ram usage:        7 bytes
  8024 ;; Hardware stack levels used:    1
  8025 ;; Hardware stack levels required when called:    5
  8026 ;; This function calls:
  8027 ;;		Nothing
  8028 ;; This function is called by:
  8029 ;;		_tempatt
  8030 ;;		_TempMed
  8031 ;; This function uses a non-reentrant model
  8032 ;;
  8033                           psect	text25,local,class=CODE,delta=2,merge=1,group=1
  8034                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  8035                           	line	5
  8036                           global __ptext25
  8037                           __ptext25:	;psect for function ___awmod
  8038  08FF                     psect	text25
  8039                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  8040                           	line	5
  8041                           	global	__size_of___awmod
  8042                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  8043  0065                     	
  8044                           ___awmod:	
  8045  08FF                     ;incstack = 0
  8046                           	opt	stack 1
  8047                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8048                           	line	12
  8049                           	
  8050                           l2617:	
  8051  08FF                     	bsf	status, 5	;RP0=1, select bank1
  8052  08FF  1683               	bcf	status, 6	;RP1=0, select bank1
  8053  0900  1303               	clrf	(___awmod@sign)^080h
  8054  0901  01A6               	line	13
  8055                           	
  8056                           l2619:	
  8057  0902                     	btfss	(___awmod@dividend+1)^080h,7
  8058  0902  1FA3               	goto	u3301
  8059  0903  2905               	goto	u3300
  8060  0904  2906               u3301:
  8061  0905                     	goto	l2625
  8062  0905  290E               u3300:
  8063  0906                     	line	14
  8064                           	
  8065                           l2621:	
  8066  0906                     	comf	(___awmod@dividend)^080h,f
  8067  0906  09A2               	comf	(___awmod@dividend+1)^080h,f
  8068  0907  09A3               	incf	(___awmod@dividend)^080h,f
  8069  0908  0AA2               	skipnz
  8070  0909  1903               	incf	(___awmod@dividend+1)^080h,f
  8071  090A  0AA3               	line	15
  8072                           	
  8073                           l2623:	
  8074  090B                     	clrf	(___awmod@sign)^080h
  8075  090B  01A6               	incf	(___awmod@sign)^080h,f
  8076  090C  0AA6               	goto	l2625
  8077  090D  290E               	line	16
  8078                           	
  8079                           l566:	
  8080  090E                     	line	17
  8081                           	
  8082                           l2625:	
  8083  090E                     	btfss	(___awmod@divisor+1)^080h,7
  8084  090E  1FA1               	goto	u3311
  8085  090F  2911               	goto	u3310
  8086  0910  2912               u3311:
  8087  0911                     	goto	l2629
  8088  0911  2918               u3310:
  8089  0912                     	line	18
  8090                           	
  8091                           l2627:	
  8092  0912                     	comf	(___awmod@divisor)^080h,f
  8093  0912  09A0               	comf	(___awmod@divisor+1)^080h,f
  8094  0913  09A1               	incf	(___awmod@divisor)^080h,f
  8095  0914  0AA0               	skipnz
  8096  0915  1903               	incf	(___awmod@divisor+1)^080h,f
  8097  0916  0AA1               	goto	l2629
  8098  0917  2918               	
  8099                           l567:	
  8100  0918                     	line	19
  8101                           	
  8102                           l2629:	
  8103  0918                     	movf	((___awmod@divisor)^080h),w
  8104  0918  0820               iorwf	((___awmod@divisor+1)^080h),w
  8105  0919  0421               	btfsc	status,2
  8106  091A  1903               	goto	u3321
  8107  091B  291D               	goto	u3320
  8108  091C  291E               u3321:
  8109  091D                     	goto	l2647
  8110  091D  2953               u3320:
  8111  091E                     	line	20
  8112                           	
  8113                           l2631:	
  8114  091E                     	clrf	(___awmod@counter)^080h
  8115  091E  01A5               	incf	(___awmod@counter)^080h,f
  8116  091F  0AA5               	line	21
  8117                           	goto	l2637
  8118  0920  292D               	
  8119                           l570:	
  8120  0921                     	line	22
  8121                           	
  8122                           l2633:	
  8123  0921                     	movlw	01h
  8124  0921  3001               	
  8125                           u3335:
  8126  0922                     	clrc
  8127  0922  1003               	rlf	(___awmod@divisor)^080h,f
  8128  0923  0DA0               	rlf	(___awmod@divisor+1)^080h,f
  8129  0924  0DA1               	addlw	-1
  8130  0925  3EFF               	skipz
  8131  0926  1D03               	goto	u3335
  8132  0927  2922               	line	23
  8133                           	
  8134                           l2635:	
  8135  0928                     	movlw	low(01h)
  8136  0928  3001               	movwf	(??___awmod+0)^080h+0
  8137  0929  00A4               	movf	(??___awmod+0)^080h+0,w
  8138  092A  0824               	addwf	(___awmod@counter)^080h,f
  8139  092B  07A5               	goto	l2637
  8140  092C  292D               	line	24
  8141                           	
  8142                           l569:	
  8143  092D                     	line	21
  8144                           	
  8145                           l2637:	
  8146  092D                     	btfss	(___awmod@divisor+1)^080h,(15)&7
  8147  092D  1FA1               	goto	u3341
  8148  092E  2930               	goto	u3340
  8149  092F  2931               u3341:
  8150  0930                     	goto	l2633
  8151  0930  2921               u3340:
  8152  0931                     	goto	l2639
  8153  0931  2933               	
  8154                           l571:	
  8155  0932                     	goto	l2639
  8156  0932  2933               	line	25
  8157                           	
  8158                           l572:	
  8159  0933                     	line	26
  8160                           	
  8161                           l2639:	
  8162  0933                     	movf	(___awmod@divisor+1)^080h,w
  8163  0933  0821               	subwf	(___awmod@dividend+1)^080h,w
  8164  0934  0223               	skipz
  8165  0935  1D03               	goto	u3355
  8166  0936  2939               	movf	(___awmod@divisor)^080h,w
  8167  0937  0820               	subwf	(___awmod@dividend)^080h,w
  8168  0938  0222               u3355:
  8169  0939                     	skipc
  8170  0939  1C03               	goto	u3351
  8171  093A  293C               	goto	u3350
  8172  093B  293D               u3351:
  8173  093C                     	goto	l2643
  8174  093C  2944               u3350:
  8175  093D                     	line	27
  8176                           	
  8177                           l2641:	
  8178  093D                     	movf	(___awmod@divisor)^080h,w
  8179  093D  0820               	subwf	(___awmod@dividend)^080h,f
  8180  093E  02A2               	movf	(___awmod@divisor+1)^080h,w
  8181  093F  0821               	skipc
  8182  0940  1C03               	decf	(___awmod@dividend+1)^080h,f
  8183  0941  03A3               	subwf	(___awmod@dividend+1)^080h,f
  8184  0942  02A3               	goto	l2643
  8185  0943  2944               	
  8186                           l573:	
  8187  0944                     	line	28
  8188                           	
  8189                           l2643:	
  8190  0944                     	movlw	01h
  8191  0944  3001               	
  8192                           u3365:
  8193  0945                     	clrc
  8194  0945  1003               	rrf	(___awmod@divisor+1)^080h,f
  8195  0946  0CA1               	rrf	(___awmod@divisor)^080h,f
  8196  0947  0CA0               	addlw	-1
  8197  0948  3EFF               	skipz
  8198  0949  1D03               	goto	u3365
  8199  094A  2945               	line	29
  8200                           	
  8201                           l2645:	
  8202  094B                     	movlw	01h
  8203  094B  3001               	subwf	(___awmod@counter)^080h,f
  8204  094C  02A5               	btfss	status,2
  8205  094D  1D03               	goto	u3371
  8206  094E  2950               	goto	u3370
  8207  094F  2951               u3371:
  8208  0950                     	goto	l2639
  8209  0950  2933               u3370:
  8210  0951                     	goto	l2647
  8211  0951  2953               	
  8212                           l574:	
  8213  0952                     	goto	l2647
  8214  0952  2953               	line	30
  8215                           	
  8216                           l568:	
  8217  0953                     	line	31
  8218                           	
  8219                           l2647:	
  8220  0953                     	movf	((___awmod@sign)^080h),w
  8221  0953  0826               	btfsc	status,2
  8222  0954  1903               	goto	u3381
  8223  0955  2957               	goto	u3380
  8224  0956  2958               u3381:
  8225  0957                     	goto	l2651
  8226  0957  295E               u3380:
  8227  0958                     	line	32
  8228                           	
  8229                           l2649:	
  8230  0958                     	comf	(___awmod@dividend)^080h,f
  8231  0958  09A2               	comf	(___awmod@dividend+1)^080h,f
  8232  0959  09A3               	incf	(___awmod@dividend)^080h,f
  8233  095A  0AA2               	skipnz
  8234  095B  1903               	incf	(___awmod@dividend+1)^080h,f
  8235  095C  0AA3               	goto	l2651
  8236  095D  295E               	
  8237                           l575:	
  8238  095E                     	line	33
  8239                           	
  8240                           l2651:	
  8241  095E                     	movf	(___awmod@dividend+1)^080h,w
  8242  095E  0823               	movwf	(?___awmod+1)^080h
  8243  095F  00A1               	movf	(___awmod@dividend)^080h,w
  8244  0960  0822               	movwf	(?___awmod)^080h
  8245  0961  00A0               	goto	l576
  8246  0962  2963               	
  8247                           l2653:	
  8248  0963                     	line	34
  8249                           	
  8250                           l576:	
  8251  0963                     	return
  8252  0963  0008               	opt stack 0
  8253                           GLOBAL	__end_of___awmod
  8254                           	__end_of___awmod:
  8255  0964                     	signat	___awmod,8314
  8256                           	global	___awdiv
  8257                           
  8258 ;; *************** function ___awdiv *****************
  8259 ;; Defined at:
  8260 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  8261 ;; Parameters:    Size  Location     Type
  8262 ;;  divisor         2    0[BANK1 ] int 
  8263 ;;  dividend        2    2[BANK1 ] int 
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;  quotient        2    7[BANK1 ] int 
  8266 ;;  sign            1    6[BANK1 ] unsigned char 
  8267 ;;  counter         1    5[BANK1 ] unsigned char 
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  2    0[BANK1 ] int 
  8270 ;; Registers used:
  8271 ;;		wreg, status,2, status,0
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8277 ;;      Params:         0       0       4       0       0
  8278 ;;      Locals:         0       0       4       0       0
  8279 ;;      Temps:          0       0       1       0       0
  8280 ;;      Totals:         0       0       9       0       0
  8281 ;;Total ram usage:        9 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; Hardware stack levels required when called:    5
  8284 ;; This function calls:
  8285 ;;		Nothing
  8286 ;; This function is called by:
  8287 ;;		_tempatt
  8288 ;;		_TempMed
  8289 ;; This function uses a non-reentrant model
  8290 ;;
  8291                           psect	text26,local,class=CODE,delta=2,merge=1,group=1
  8292                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  8293                           	line	5
  8294                           global __ptext26
  8295                           __ptext26:	;psect for function ___awdiv
  8296  0A39                     psect	text26
  8297                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  8298                           	line	5
  8299                           	global	__size_of___awdiv
  8300                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  8301  0073                     	
  8302                           ___awdiv:	
  8303  0A39                     ;incstack = 0
  8304                           	opt	stack 1
  8305                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8306                           	line	13
  8307                           	
  8308                           l2573:	
  8309  0A39                     	bsf	status, 5	;RP0=1, select bank1
  8310  0A39  1683               	bcf	status, 6	;RP1=0, select bank1
  8311  0A3A  1303               	clrf	(___awdiv@sign)^080h
  8312  0A3B  01A6               	line	14
  8313                           	
  8314                           l2575:	
  8315  0A3C                     	btfss	(___awdiv@divisor+1)^080h,7
  8316  0A3C  1FA1               	goto	u3201
  8317  0A3D  2A3F               	goto	u3200
  8318  0A3E  2A40               u3201:
  8319  0A3F                     	goto	l2581
  8320  0A3F  2A48               u3200:
  8321  0A40                     	line	15
  8322                           	
  8323                           l2577:	
  8324  0A40                     	comf	(___awdiv@divisor)^080h,f
  8325  0A40  09A0               	comf	(___awdiv@divisor+1)^080h,f
  8326  0A41  09A1               	incf	(___awdiv@divisor)^080h,f
  8327  0A42  0AA0               	skipnz
  8328  0A43  1903               	incf	(___awdiv@divisor+1)^080h,f
  8329  0A44  0AA1               	line	16
  8330                           	
  8331                           l2579:	
  8332  0A45                     	clrf	(___awdiv@sign)^080h
  8333  0A45  01A6               	incf	(___awdiv@sign)^080h,f
  8334  0A46  0AA6               	goto	l2581
  8335  0A47  2A48               	line	17
  8336                           	
  8337                           l553:	
  8338  0A48                     	line	18
  8339                           	
  8340                           l2581:	
  8341  0A48                     	btfss	(___awdiv@dividend+1)^080h,7
  8342  0A48  1FA3               	goto	u3211
  8343  0A49  2A4B               	goto	u3210
  8344  0A4A  2A4C               u3211:
  8345  0A4B                     	goto	l2587
  8346  0A4B  2A56               u3210:
  8347  0A4C                     	line	19
  8348                           	
  8349                           l2583:	
  8350  0A4C                     	comf	(___awdiv@dividend)^080h,f
  8351  0A4C  09A2               	comf	(___awdiv@dividend+1)^080h,f
  8352  0A4D  09A3               	incf	(___awdiv@dividend)^080h,f
  8353  0A4E  0AA2               	skipnz
  8354  0A4F  1903               	incf	(___awdiv@dividend+1)^080h,f
  8355  0A50  0AA3               	line	20
  8356                           	
  8357                           l2585:	
  8358  0A51                     	movlw	low(01h)
  8359  0A51  3001               	movwf	(??___awdiv+0)^080h+0
  8360  0A52  00A4               	movf	(??___awdiv+0)^080h+0,w
  8361  0A53  0824               	xorwf	(___awdiv@sign)^080h,f
  8362  0A54  06A6               	goto	l2587
  8363  0A55  2A56               	line	21
  8364                           	
  8365                           l554:	
  8366  0A56                     	line	22
  8367                           	
  8368                           l2587:	
  8369  0A56                     	clrf	(___awdiv@quotient)^080h
  8370  0A56  01A7               	clrf	(___awdiv@quotient+1)^080h
  8371  0A57  01A8               	line	23
  8372                           	
  8373                           l2589:	
  8374  0A58                     	movf	((___awdiv@divisor)^080h),w
  8375  0A58  0820               iorwf	((___awdiv@divisor+1)^080h),w
  8376  0A59  0421               	btfsc	status,2
  8377  0A5A  1903               	goto	u3221
  8378  0A5B  2A5D               	goto	u3220
  8379  0A5C  2A5E               u3221:
  8380  0A5D                     	goto	l2609
  8381  0A5D  2A9B               u3220:
  8382  0A5E                     	line	24
  8383                           	
  8384                           l2591:	
  8385  0A5E                     	clrf	(___awdiv@counter)^080h
  8386  0A5E  01A5               	incf	(___awdiv@counter)^080h,f
  8387  0A5F  0AA5               	line	25
  8388                           	goto	l2597
  8389  0A60  2A6D               	
  8390                           l557:	
  8391  0A61                     	line	26
  8392                           	
  8393                           l2593:	
  8394  0A61                     	movlw	01h
  8395  0A61  3001               	
  8396                           u3235:
  8397  0A62                     	clrc
  8398  0A62  1003               	rlf	(___awdiv@divisor)^080h,f
  8399  0A63  0DA0               	rlf	(___awdiv@divisor+1)^080h,f
  8400  0A64  0DA1               	addlw	-1
  8401  0A65  3EFF               	skipz
  8402  0A66  1D03               	goto	u3235
  8403  0A67  2A62               	line	27
  8404                           	
  8405                           l2595:	
  8406  0A68                     	movlw	low(01h)
  8407  0A68  3001               	movwf	(??___awdiv+0)^080h+0
  8408  0A69  00A4               	movf	(??___awdiv+0)^080h+0,w
  8409  0A6A  0824               	addwf	(___awdiv@counter)^080h,f
  8410  0A6B  07A5               	goto	l2597
  8411  0A6C  2A6D               	line	28
  8412                           	
  8413                           l556:	
  8414  0A6D                     	line	25
  8415                           	
  8416                           l2597:	
  8417  0A6D                     	btfss	(___awdiv@divisor+1)^080h,(15)&7
  8418  0A6D  1FA1               	goto	u3241
  8419  0A6E  2A70               	goto	u3240
  8420  0A6F  2A71               u3241:
  8421  0A70                     	goto	l2593
  8422  0A70  2A61               u3240:
  8423  0A71                     	goto	l2599
  8424  0A71  2A73               	
  8425                           l558:	
  8426  0A72                     	goto	l2599
  8427  0A72  2A73               	line	29
  8428                           	
  8429                           l559:	
  8430  0A73                     	line	30
  8431                           	
  8432                           l2599:	
  8433  0A73                     	movlw	01h
  8434  0A73  3001               	
  8435                           u3255:
  8436  0A74                     	clrc
  8437  0A74  1003               	rlf	(___awdiv@quotient)^080h,f
  8438  0A75  0DA7               	rlf	(___awdiv@quotient+1)^080h,f
  8439  0A76  0DA8               	addlw	-1
  8440  0A77  3EFF               	skipz
  8441  0A78  1D03               	goto	u3255
  8442  0A79  2A74               	line	31
  8443                           	movf	(___awdiv@divisor+1)^080h,w
  8444  0A7A  0821               	subwf	(___awdiv@dividend+1)^080h,w
  8445  0A7B  0223               	skipz
  8446  0A7C  1D03               	goto	u3265
  8447  0A7D  2A80               	movf	(___awdiv@divisor)^080h,w
  8448  0A7E  0820               	subwf	(___awdiv@dividend)^080h,w
  8449  0A7F  0222               u3265:
  8450  0A80                     	skipc
  8451  0A80  1C03               	goto	u3261
  8452  0A81  2A83               	goto	u3260
  8453  0A82  2A84               u3261:
  8454  0A83                     	goto	l2605
  8455  0A83  2A8C               u3260:
  8456  0A84                     	line	32
  8457                           	
  8458                           l2601:	
  8459  0A84                     	movf	(___awdiv@divisor)^080h,w
  8460  0A84  0820               	subwf	(___awdiv@dividend)^080h,f
  8461  0A85  02A2               	movf	(___awdiv@divisor+1)^080h,w
  8462  0A86  0821               	skipc
  8463  0A87  1C03               	decf	(___awdiv@dividend+1)^080h,f
  8464  0A88  03A3               	subwf	(___awdiv@dividend+1)^080h,f
  8465  0A89  02A3               	line	33
  8466                           	
  8467                           l2603:	
  8468  0A8A                     	bsf	(___awdiv@quotient)^080h+(0/8),(0)&7
  8469  0A8A  1427               	goto	l2605
  8470  0A8B  2A8C               	line	34
  8471                           	
  8472                           l560:	
  8473  0A8C                     	line	35
  8474                           	
  8475                           l2605:	
  8476  0A8C                     	movlw	01h
  8477  0A8C  3001               	
  8478                           u3275:
  8479  0A8D                     	clrc
  8480  0A8D  1003               	rrf	(___awdiv@divisor+1)^080h,f
  8481  0A8E  0CA1               	rrf	(___awdiv@divisor)^080h,f
  8482  0A8F  0CA0               	addlw	-1
  8483  0A90  3EFF               	skipz
  8484  0A91  1D03               	goto	u3275
  8485  0A92  2A8D               	line	36
  8486                           	
  8487                           l2607:	
  8488  0A93                     	movlw	01h
  8489  0A93  3001               	subwf	(___awdiv@counter)^080h,f
  8490  0A94  02A5               	btfss	status,2
  8491  0A95  1D03               	goto	u3281
  8492  0A96  2A98               	goto	u3280
  8493  0A97  2A99               u3281:
  8494  0A98                     	goto	l2599
  8495  0A98  2A73               u3280:
  8496  0A99                     	goto	l2609
  8497  0A99  2A9B               	
  8498                           l561:	
  8499  0A9A                     	goto	l2609
  8500  0A9A  2A9B               	line	37
  8501                           	
  8502                           l555:	
  8503  0A9B                     	line	38
  8504                           	
  8505                           l2609:	
  8506  0A9B                     	movf	((___awdiv@sign)^080h),w
  8507  0A9B  0826               	btfsc	status,2
  8508  0A9C  1903               	goto	u3291
  8509  0A9D  2A9F               	goto	u3290
  8510  0A9E  2AA0               u3291:
  8511  0A9F                     	goto	l2613
  8512  0A9F  2AA6               u3290:
  8513  0AA0                     	line	39
  8514                           	
  8515                           l2611:	
  8516  0AA0                     	comf	(___awdiv@quotient)^080h,f
  8517  0AA0  09A7               	comf	(___awdiv@quotient+1)^080h,f
  8518  0AA1  09A8               	incf	(___awdiv@quotient)^080h,f
  8519  0AA2  0AA7               	skipnz
  8520  0AA3  1903               	incf	(___awdiv@quotient+1)^080h,f
  8521  0AA4  0AA8               	goto	l2613
  8522  0AA5  2AA6               	
  8523                           l562:	
  8524  0AA6                     	line	40
  8525                           	
  8526                           l2613:	
  8527  0AA6                     	movf	(___awdiv@quotient+1)^080h,w
  8528  0AA6  0828               	movwf	(?___awdiv+1)^080h
  8529  0AA7  00A1               	movf	(___awdiv@quotient)^080h,w
  8530  0AA8  0827               	movwf	(?___awdiv)^080h
  8531  0AA9  00A0               	goto	l563
  8532  0AAA  2AAB               	
  8533                           l2615:	
  8534  0AAB                     	line	41
  8535                           	
  8536                           l563:	
  8537  0AAB                     	return
  8538  0AAB  0008               	opt stack 0
  8539                           GLOBAL	__end_of___awdiv
  8540                           	__end_of___awdiv:
  8541  0AAC                     	signat	___awdiv,8314
  8542                           	global	_Telaprincipal
  8543                           
  8544 ;; *************** function _Telaprincipal *****************
  8545 ;; Defined at:
  8546 ;;		line 115 in file "lcd.c"
  8547 ;; Parameters:    Size  Location     Type
  8548 ;;		None
  8549 ;; Auto vars:     Size  Location     Type
  8550 ;;		None
  8551 ;; Return value:  Size  Location     Type
  8552 ;;                  1    wreg      void 
  8553 ;; Registers used:
  8554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8555 ;; Tracked objects:
  8556 ;;		On entry : 0/0
  8557 ;;		On exit  : 0/0
  8558 ;;		Unchanged: 0/0
  8559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8560 ;;      Params:         0       0       0       0       0
  8561 ;;      Locals:         0       0       0       0       0
  8562 ;;      Temps:          0       0       0       0       0
  8563 ;;      Totals:         0       0       0       0       0
  8564 ;;Total ram usage:        0 bytes
  8565 ;; Hardware stack levels used:    1
  8566 ;; Hardware stack levels required when called:    9
  8567 ;; This function calls:
  8568 ;;		_gotoxy
  8569 ;;		_putLCD
  8570 ;;		_writeLCD
  8571 ;; This function is called by:
  8572 ;;		_main
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
  8576                           	file	"lcd.c"
  8577                           	line	115
  8578                           global __ptext27
  8579                           __ptext27:	;psect for function _Telaprincipal
  8580  144D                     psect	text27
  8581                           	file	"lcd.c"
  8582                           	line	115
  8583                           	global	__size_of_Telaprincipal
  8584                           	__size_of_Telaprincipal	equ	__end_of_Telaprincipal-_Telaprincipal
  8585  001D                     	
  8586                           _Telaprincipal:	
  8587  144D                     ;incstack = 0
  8588 ;; hardware stack exceeded
  8589                           	opt	stack 0
  8590                           ; Regs used in _Telaprincipal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8591                           	line	118
  8592                           	
  8593                           l2917:	
  8594  144D                     ;lcd.c: 118:     writeLCD(0,0, "Temp. Atual:   C");
  8595                           	bsf	status, 5	;RP0=1, select bank1
  8596  144D  1683               	bcf	status, 6	;RP1=0, select bank1
  8597  144E  1303               	clrf	(writeLCD@y)^080h
  8598  144F  01AB               	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
  8599  1450  3022               	movwf	(writeLCD@ptr)^080h
  8600  1451  00AC               	movlw	80h
  8601  1452  3080               	movwf	(writeLCD@ptr+1)^080h
  8602  1453  00AD               	movlw	low(0)
  8603  1454  3000               	fcall	_writeLCD
  8604  1455  160A  118A  26EA  160A  118A  	line	119
  8605                           	
  8606                           l2919:	
  8607  145A                     ;lcd.c: 119:     gotoxy(14,0);putLCD(0xDF);
  8608                           	bsf	status, 5	;RP0=1, select bank1
  8609  145A  1683               	bcf	status, 6	;RP1=0, select bank1
  8610  145B  1303               	clrf	(gotoxy@y)^080h
  8611  145C  01A7               	movlw	low(0Eh)
  8612  145D  300E               	fcall	_gotoxy
  8613  145E  160A  118A  23C4  160A  118A  	
  8614                           l2921:	
  8615  1463                     	movlw	low(0DFh)
  8616  1463  30DF               	fcall	_putLCD
  8617  1464  120A  158A  20B5  160A  118A  	line	122
  8618                           	
  8619                           l67:	
  8620  1469                     	return
  8621  1469  0008               	opt stack 0
  8622                           GLOBAL	__end_of_Telaprincipal
  8623                           	__end_of_Telaprincipal:
  8624  146A                     	signat	_Telaprincipal,89
  8625                           	global	_SplashScreen1
  8626                           
  8627 ;; *************** function _SplashScreen1 *****************
  8628 ;; Defined at:
  8629 ;;		line 102 in file "lcd.c"
  8630 ;; Parameters:    Size  Location     Type
  8631 ;;		None
  8632 ;; Auto vars:     Size  Location     Type
  8633 ;;		None
  8634 ;; Return value:  Size  Location     Type
  8635 ;;                  1    wreg      void 
  8636 ;; Registers used:
  8637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8638 ;; Tracked objects:
  8639 ;;		On entry : 0/0
  8640 ;;		On exit  : 0/0
  8641 ;;		Unchanged: 0/0
  8642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8643 ;;      Params:         0       0       0       0       0
  8644 ;;      Locals:         0       0       0       0       0
  8645 ;;      Temps:          0       0       0       0       0
  8646 ;;      Totals:         0       0       0       0       0
  8647 ;;Total ram usage:        0 bytes
  8648 ;; Hardware stack levels used:    1
  8649 ;; Hardware stack levels required when called:    9
  8650 ;; This function calls:
  8651 ;;		_writeLCD
  8652 ;; This function is called by:
  8653 ;;		_main
  8654 ;; This function uses a non-reentrant model
  8655 ;;
  8656                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
  8657                           	line	102
  8658                           global __ptext28
  8659                           __ptext28:	;psect for function _SplashScreen1
  8660  0899                     psect	text28
  8661                           	file	"lcd.c"
  8662                           	line	102
  8663                           	global	__size_of_SplashScreen1
  8664                           	__size_of_SplashScreen1	equ	__end_of_SplashScreen1-_SplashScreen1
  8665  001C                     	
  8666                           _SplashScreen1:	
  8667  0899                     ;incstack = 0
  8668 ;; hardware stack exceeded
  8669                           	opt	stack 0
  8670                           ; Regs used in _SplashScreen1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8671                           	line	104
  8672                           	
  8673                           l2915:	
  8674  0899                     ;lcd.c: 104:     writeLCD(4,0, "Aquisitor");
  8675                           	bsf	status, 5	;RP0=1, select bank1
  8676  0899  1683               	bcf	status, 6	;RP1=0, select bank1
  8677  089A  1303               	clrf	(writeLCD@y)^080h
  8678  089B  01AB               	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  8679  089C  3066               	movwf	(writeLCD@ptr)^080h
  8680  089D  00AC               	movlw	80h
  8681  089E  3080               	movwf	(writeLCD@ptr+1)^080h
  8682  089F  00AD               	movlw	low(04h)
  8683  08A0  3004               	fcall	_writeLCD
  8684  08A1  160A  118A  26EA  120A  158A  	line	105
  8685                           ;lcd.c: 105:     writeLCD(4,1, "de Dados");
  8686                           	bsf	status, 5	;RP0=1, select bank1
  8687  08A6  1683               	bcf	status, 6	;RP1=0, select bank1
  8688  08A7  1303               	clrf	(writeLCD@y)^080h
  8689  08A8  01AB               	incf	(writeLCD@y)^080h,f
  8690  08A9  0AAB               	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  8691  08AA  3079               	movwf	(writeLCD@ptr)^080h
  8692  08AB  00AC               	movlw	80h
  8693  08AC  3080               	movwf	(writeLCD@ptr+1)^080h
  8694  08AD  00AD               	movlw	low(04h)
  8695  08AE  3004               	fcall	_writeLCD
  8696  08AF  160A  118A  26EA  120A  158A  	line	106
  8697                           	
  8698                           l61:	
  8699  08B4                     	return
  8700  08B4  0008               	opt stack 0
  8701                           GLOBAL	__end_of_SplashScreen1
  8702                           	__end_of_SplashScreen1:
  8703  08B5                     	signat	_SplashScreen1,89
  8704                           	global	_SplashScreen0
  8705                           
  8706 ;; *************** function _SplashScreen0 *****************
  8707 ;; Defined at:
  8708 ;;		line 97 in file "lcd.c"
  8709 ;; Parameters:    Size  Location     Type
  8710 ;;		None
  8711 ;; Auto vars:     Size  Location     Type
  8712 ;;		None
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  1    wreg      void 
  8715 ;; Registers used:
  8716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8717 ;; Tracked objects:
  8718 ;;		On entry : 0/0
  8719 ;;		On exit  : 0/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8722 ;;      Params:         0       0       0       0       0
  8723 ;;      Locals:         0       0       0       0       0
  8724 ;;      Temps:          0       0       0       0       0
  8725 ;;      Totals:         0       0       0       0       0
  8726 ;;Total ram usage:        0 bytes
  8727 ;; Hardware stack levels used:    1
  8728 ;; Hardware stack levels required when called:    9
  8729 ;; This function calls:
  8730 ;;		_writeLCD
  8731 ;; This function is called by:
  8732 ;;		_main
  8733 ;; This function uses a non-reentrant model
  8734 ;;
  8735                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
  8736                           	line	97
  8737                           global __ptext29
  8738                           __ptext29:	;psect for function _SplashScreen0
  8739  1431                     psect	text29
  8740                           	file	"lcd.c"
  8741                           	line	97
  8742                           	global	__size_of_SplashScreen0
  8743                           	__size_of_SplashScreen0	equ	__end_of_SplashScreen0-_SplashScreen0
  8744  001C                     	
  8745                           _SplashScreen0:	
  8746  1431                     ;incstack = 0
  8747 ;; hardware stack exceeded
  8748                           	opt	stack 0
  8749                           ; Regs used in _SplashScreen0: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8750                           	line	99
  8751                           	
  8752                           l2913:	
  8753  1431                     ;lcd.c: 99:     writeLCD(4,0, "ELECTRIC");
  8754                           	bsf	status, 5	;RP0=1, select bank1
  8755  1431  1683               	bcf	status, 6	;RP1=0, select bank1
  8756  1432  1303               	clrf	(writeLCD@y)^080h
  8757  1433  01AB               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  8758  1434  3070               	movwf	(writeLCD@ptr)^080h
  8759  1435  00AC               	movlw	80h
  8760  1436  3080               	movwf	(writeLCD@ptr+1)^080h
  8761  1437  00AD               	movlw	low(04h)
  8762  1438  3004               	fcall	_writeLCD
  8763  1439  160A  118A  26EA  160A  118A  	line	100
  8764                           ;lcd.c: 100:     writeLCD(4,1, "PULL UP");
  8765                           	bsf	status, 5	;RP0=1, select bank1
  8766  143E  1683               	bcf	status, 6	;RP1=0, select bank1
  8767  143F  1303               	clrf	(writeLCD@y)^080h
  8768  1440  01AB               	incf	(writeLCD@y)^080h,f
  8769  1441  0AAB               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  8770  1442  3082               	movwf	(writeLCD@ptr)^080h
  8771  1443  00AC               	movlw	80h
  8772  1444  3080               	movwf	(writeLCD@ptr+1)^080h
  8773  1445  00AD               	movlw	low(04h)
  8774  1446  3004               	fcall	_writeLCD
  8775  1447  160A  118A  26EA  160A  118A  	line	101
  8776                           	
  8777                           l58:	
  8778  144C                     	return
  8779  144C  0008               	opt stack 0
  8780                           GLOBAL	__end_of_SplashScreen0
  8781                           	__end_of_SplashScreen0:
  8782  144D                     	signat	_SplashScreen0,89
  8783                           	global	_writeLCD
  8784                           
  8785 ;; *************** function _writeLCD *****************
  8786 ;; Defined at:
  8787 ;;		line 81 in file "lcd.c"
  8788 ;; Parameters:    Size  Location     Type
  8789 ;;  x               1    wreg     unsigned char 
  8790 ;;  y               1   11[BANK1 ] unsigned char 
  8791 ;;  ptr             2   12[BANK1 ] PTR const unsigned char 
  8792 ;;		 -> STR_10(12), STR_9(10), STR_8(17), TempMed@md(3), 
  8793 ;;		 -> tempatt@Tp(3), STR_7(17), STR_6(12), STR_5(17), 
  8794 ;;		 -> STR_4(9), STR_3(10), STR_2(8), STR_1(9), 
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;  x               1   15[BANK1 ] unsigned char 
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  1    wreg      void 
  8799 ;; Registers used:
  8800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8806 ;;      Params:         0       0       3       0       0
  8807 ;;      Locals:         0       0       1       0       0
  8808 ;;      Temps:          0       0       1       0       0
  8809 ;;      Totals:         0       0       5       0       0
  8810 ;;Total ram usage:        5 bytes
  8811 ;; Hardware stack levels used:    1
  8812 ;; Hardware stack levels required when called:    8
  8813 ;; This function calls:
  8814 ;;		_gotoxy
  8815 ;;		_putLCD
  8816 ;; This function is called by:
  8817 ;;		_SplashScreen0
  8818 ;;		_SplashScreen1
  8819 ;;		_Telaprincipal
  8820 ;;		_tempatt
  8821 ;;		_TempMed
  8822 ;;		_showtemp
  8823 ;;		_erasertemp
  8824 ;;		_Menu
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
  8828                           	line	81
  8829                           global __ptext30
  8830                           __ptext30:	;psect for function _writeLCD
  8831  16EA                     psect	text30
  8832                           	file	"lcd.c"
  8833                           	line	81
  8834                           	global	__size_of_writeLCD
  8835                           	__size_of_writeLCD	equ	__end_of_writeLCD-_writeLCD
  8836  0043                     	
  8837                           _writeLCD:	
  8838  16EA                     ;incstack = 0
  8839 ;; hardware stack exceeded
  8840                           	opt	stack 0
  8841                           ; Regs used in _writeLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8842                           ;writeLCD@x stored from wreg
  8843                           	bsf	status, 5	;RP0=1, select bank1
  8844  16EA  1683               	bcf	status, 6	;RP1=0, select bank1
  8845  16EB  1303               	movwf	(writeLCD@x)^080h
  8846  16EC  00AF               	line	83
  8847                           	
  8848                           l2529:	
  8849  16ED                     ;lcd.c: 81: void writeLCD( unsigned char x, unsigned char y, const char * ptr );lcd.c: 8
                                 2: {;lcd.c: 83:         gotoxy(x,y);
  8850                           	movf	(writeLCD@y)^080h,w
  8851  16ED  082B               	movwf	(??_writeLCD+0)^080h+0
  8852  16EE  00AE               	movf	(??_writeLCD+0)^080h+0,w
  8853  16EF  082E               	movwf	(gotoxy@y)^080h
  8854  16F0  00A7               	movf	(writeLCD@x)^080h,w
  8855  16F1  082F               	fcall	_gotoxy
  8856  16F2  160A  118A  23C4  160A  118A  	line	84
  8857                           ;lcd.c: 84:         while( *ptr )
  8858                           	goto	l2535
  8859  16F7  2F15               	
  8860                           l47:	
  8861  16F8                     	line	85
  8862                           	
  8863                           l2531:	
  8864  16F8                     ;lcd.c: 85:         putLCD( *ptr++ );
  8865                           	bsf	status, 5	;RP0=1, select bank1
  8866  16F8  1683               	bcf	status, 6	;RP1=0, select bank1
  8867  16F9  1303               	movf	(writeLCD@ptr+1)^080h,w
  8868  16FA  082D               	bcf	status, 5	;RP0=0, select bank0
  8869  16FB  1283               	bcf	status, 6	;RP1=0, select bank0
  8870  16FC  1303               	movwf	btemp+1
  8871  16FD  00FF               	bsf	status, 5	;RP0=1, select bank1
  8872  16FE  1683               	bcf	status, 6	;RP1=0, select bank1
  8873  16FF  1303               	movf	(writeLCD@ptr)^080h,w
  8874  1700  082C               	movwf	fsr0
  8875  1701  0084               	bcf	status, 5	;RP0=0, select bank0
  8876  1702  1283               	bcf	status, 6	;RP1=0, select bank0
  8877  1703  1303               	fcall	stringtab
  8878  1704  120A  158A  2000  160A  118A  	fcall	_putLCD
  8879  1709  120A  158A  20B5  160A  118A  	
  8880                           l2533:	
  8881  170E                     	movlw	01h
  8882  170E  3001               	bsf	status, 5	;RP0=1, select bank1
  8883  170F  1683               	bcf	status, 6	;RP1=0, select bank1
  8884  1710  1303               	addwf	(writeLCD@ptr)^080h,f
  8885  1711  07AC               	skipnc
  8886  1712  1803               	incf	(writeLCD@ptr+1)^080h,f
  8887  1713  0AAD               	goto	l2535
  8888  1714  2F15               	
  8889                           l46:	
  8890  1715                     	line	84
  8891                           	
  8892                           l2535:	
  8893  1715                     ;lcd.c: 84:         while( *ptr )
  8894                           	bsf	status, 5	;RP0=1, select bank1
  8895  1715  1683               	bcf	status, 6	;RP1=0, select bank1
  8896  1716  1303               	movf	(writeLCD@ptr+1)^080h,w
  8897  1717  082D               	bcf	status, 5	;RP0=0, select bank0
  8898  1718  1283               	bcf	status, 6	;RP1=0, select bank0
  8899  1719  1303               	movwf	btemp+1
  8900  171A  00FF               	bsf	status, 5	;RP0=1, select bank1
  8901  171B  1683               	bcf	status, 6	;RP1=0, select bank1
  8902  171C  1303               	movf	(writeLCD@ptr)^080h,w
  8903  171D  082C               	movwf	fsr0
  8904  171E  0084               	bcf	status, 5	;RP0=0, select bank0
  8905  171F  1283               	bcf	status, 6	;RP1=0, select bank0
  8906  1720  1303               	fcall	stringtab
  8907  1721  120A  158A  2000  160A  118A  	xorlw	0
  8908  1726  3A00               	skipz
  8909  1727  1D03               	goto	u3151
  8910  1728  2F2A               	goto	u3150
  8911  1729  2F2B               u3151:
  8912  172A                     	goto	l2531
  8913  172A  2EF8               u3150:
  8914  172B                     	goto	l49
  8915  172B  2F2C               	
  8916                           l48:	
  8917  172C                     	line	86
  8918                           	
  8919                           l49:	
  8920  172C                     	return
  8921  172C  0008               	opt stack 0
  8922                           GLOBAL	__end_of_writeLCD
  8923                           	__end_of_writeLCD:
  8924  172D                     	signat	_writeLCD,12409
  8925                           	global	_putLCD
  8926                           
  8927 ;; *************** function _putLCD *****************
  8928 ;; Defined at:
  8929 ;;		line 60 in file "lcd.c"
  8930 ;; Parameters:    Size  Location     Type
  8931 ;;  c               1    wreg     unsigned char 
  8932 ;; Auto vars:     Size  Location     Type
  8933 ;;  c               1    5[BANK1 ] unsigned char 
  8934 ;;  nibble          1    6[BANK1 ] volatile struct .
  8935 ;; Return value:  Size  Location     Type
  8936 ;;                  1    wreg      void 
  8937 ;; Registers used:
  8938 ;;		wreg, status,2, status,0, pclath, cstack
  8939 ;; Tracked objects:
  8940 ;;		On entry : 0/0
  8941 ;;		On exit  : 0/0
  8942 ;;		Unchanged: 0/0
  8943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8944 ;;      Params:         0       0       0       0       0
  8945 ;;      Locals:         0       0       2       0       0
  8946 ;;      Temps:          0       0       1       0       0
  8947 ;;      Totals:         0       0       3       0       0
  8948 ;;Total ram usage:        3 bytes
  8949 ;; Hardware stack levels used:    1
  8950 ;; Hardware stack levels required when called:    6
  8951 ;; This function calls:
  8952 ;;		_delay
  8953 ;; This function is called by:
  8954 ;;		_writeLCD
  8955 ;;		_Telaprincipal
  8956 ;;		_TempMed
  8957 ;;		_main
  8958 ;; This function uses a non-reentrant model
  8959 ;;
  8960                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
  8961                           	line	60
  8962                           global __ptext31
  8963                           __ptext31:	;psect for function _putLCD
  8964  08B5                     psect	text31
  8965                           	file	"lcd.c"
  8966                           	line	60
  8967                           	global	__size_of_putLCD
  8968                           	__size_of_putLCD	equ	__end_of_putLCD-_putLCD
  8969  004A                     	
  8970                           _putLCD:	
  8971  08B5                     ;incstack = 0
  8972 ;; hardware stack exceeded
  8973                           	opt	stack 0
  8974                           ; Regs used in _putLCD: [wreg+status,2+status,0+pclath+cstack]
  8975                           ;putLCD@c stored from wreg
  8976                           	bsf	status, 5	;RP0=1, select bank1
  8977  08B5  1683               	bcf	status, 6	;RP1=0, select bank1
  8978  08B6  1303               	movwf	(putLCD@c)^080h
  8979  08B7  00A5               	line	64
  8980                           	
  8981                           l2159:	
  8982  08B8                     ;lcd.c: 60: void putLCD( unsigned char c );lcd.c: 61:  {;lcd.c: 62:         volatile REG
                                 nibble_t nibble;;lcd.c: 64:         nibble.HILO = c;
  8983                           	movf	(putLCD@c)^080h,w
  8984  08B8  0825               	movwf	(??_putLCD+0)^080h+0
  8985  08B9  00A4               	movf	(??_putLCD+0)^080h+0,w
  8986  08BA  0824               	movwf	(putLCD@nibble)^080h	;volatile
  8987  08BB  00A6               	line	65
  8988                           	
  8989                           l2161:	
  8990  08BC                     ;lcd.c: 65:         LCD.RS = 1;
  8991                           	bcf	status, 5	;RP0=0, select bank0
  8992  08BC  1283               	bcf	status, 6	;RP1=0, select bank0
  8993  08BD  1303               	bsf	(8),4	;volatile
  8994  08BE  1608               	line	66
  8995                           	
  8996                           l2163:	
  8997  08BF                     ;lcd.c: 66:         LCD.BUS= nibble.HI;
  8998                           	bsf	status, 5	;RP0=1, select bank1
  8999  08BF  1683               	bcf	status, 6	;RP1=0, select bank1
  9000  08C0  1303               	swapf	(putLCD@nibble)^080h,w	;volatile
  9001  08C1  0E26               	andlw	(1<<4)-1
  9002  08C2  390F               	movwf	(??_putLCD+0)^080h+0
  9003  08C3  00A4               	bcf	status, 5	;RP0=0, select bank0
  9004  08C4  1283               	bcf	status, 6	;RP1=0, select bank0
  9005  08C5  1303               	movf	(8),w	;volatile
  9006  08C6  0808               	bsf	status, 5	;RP0=1, select bank1
  9007  08C7  1683               	bcf	status, 6	;RP1=0, select bank1
  9008  08C8  1303               	xorwf	(??_putLCD+0)^080h+0,w
  9009  08C9  0624               	andlw	not ((1<<4)-1)
  9010  08CA  39F0               	xorwf	(??_putLCD+0)^080h+0,w
  9011  08CB  0624               	bcf	status, 5	;RP0=0, select bank0
  9012  08CC  1283               	bcf	status, 6	;RP1=0, select bank0
  9013  08CD  1303               	movwf	(8)	;volatile
  9014  08CE  0088               	line	67
  9015                           	
  9016                           l2165:	
  9017  08CF                     ;lcd.c: 67:         LCD.EN = 0;
  9018                           	bcf	(8),5	;volatile
  9019  08CF  1288               	line	68
  9020                           	
  9021                           l2167:	
  9022  08D0                     ;lcd.c: 68:         delay(2);
  9023                           	movlw	02h
  9024  08D0  3002               	bsf	status, 5	;RP0=1, select bank1
  9025  08D1  1683               	bcf	status, 6	;RP1=0, select bank1
  9026  08D2  1303               	movwf	(delay@t)^080h
  9027  08D3  00A0               	movlw	0
  9028  08D4  3000               	movwf	((delay@t)^080h)+1
  9029  08D5  00A1               	fcall	_delay
  9030  08D6  160A  118A  2488  120A  158A  	line	69
  9031                           	
  9032                           l2169:	
  9033  08DB                     ;lcd.c: 69:         LCD.EN = 1;
  9034                           	bcf	status, 5	;RP0=0, select bank0
  9035  08DB  1283               	bcf	status, 6	;RP1=0, select bank0
  9036  08DC  1303               	bsf	(8),5	;volatile
  9037  08DD  1688               	line	71
  9038                           	
  9039                           l2171:	
  9040  08DE                     ;lcd.c: 71:         LCD.RS = 1;
  9041                           	bsf	(8),4	;volatile
  9042  08DE  1608               	line	72
  9043                           	
  9044                           l2173:	
  9045  08DF                     ;lcd.c: 72:         LCD.BUS = nibble.LO;
  9046                           	bsf	status, 5	;RP0=1, select bank1
  9047  08DF  1683               	bcf	status, 6	;RP1=0, select bank1
  9048  08E0  1303               	movf	(putLCD@nibble)^080h,w	;volatile
  9049  08E1  0826               	andlw	(1<<4)-1
  9050  08E2  390F               	movwf	(??_putLCD+0)^080h+0
  9051  08E3  00A4               	bcf	status, 5	;RP0=0, select bank0
  9052  08E4  1283               	bcf	status, 6	;RP1=0, select bank0
  9053  08E5  1303               	movf	(8),w	;volatile
  9054  08E6  0808               	bsf	status, 5	;RP0=1, select bank1
  9055  08E7  1683               	bcf	status, 6	;RP1=0, select bank1
  9056  08E8  1303               	xorwf	(??_putLCD+0)^080h+0,w
  9057  08E9  0624               	andlw	not ((1<<4)-1)
  9058  08EA  39F0               	xorwf	(??_putLCD+0)^080h+0,w
  9059  08EB  0624               	bcf	status, 5	;RP0=0, select bank0
  9060  08EC  1283               	bcf	status, 6	;RP1=0, select bank0
  9061  08ED  1303               	movwf	(8)	;volatile
  9062  08EE  0088               	line	73
  9063                           	
  9064                           l2175:	
  9065  08EF                     ;lcd.c: 73:         LCD.EN = 0;
  9066                           	bcf	(8),5	;volatile
  9067  08EF  1288               	line	74
  9068                           	
  9069                           l2177:	
  9070  08F0                     ;lcd.c: 74:         delay(2);
  9071                           	movlw	02h
  9072  08F0  3002               	bsf	status, 5	;RP0=1, select bank1
  9073  08F1  1683               	bcf	status, 6	;RP1=0, select bank1
  9074  08F2  1303               	movwf	(delay@t)^080h
  9075  08F3  00A0               	movlw	0
  9076  08F4  3000               	movwf	((delay@t)^080h)+1
  9077  08F5  00A1               	fcall	_delay
  9078  08F6  160A  118A  2488  120A  158A  	line	75
  9079                           	
  9080                           l2179:	
  9081  08FB                     ;lcd.c: 75:         LCD.EN = 1;
  9082                           	bcf	status, 5	;RP0=0, select bank0
  9083  08FB  1283               	bcf	status, 6	;RP1=0, select bank0
  9084  08FC  1303               	bsf	(8),5	;volatile
  9085  08FD  1688               	line	76
  9086                           	
  9087                           l40:	
  9088  08FE                     	return
  9089  08FE  0008               	opt stack 0
  9090                           GLOBAL	__end_of_putLCD
  9091                           	__end_of_putLCD:
  9092  08FF                     	signat	_putLCD,4217
  9093                           	global	_gotoxy
  9094                           
  9095 ;; *************** function _gotoxy *****************
  9096 ;; Defined at:
  9097 ;;		line 77 in file "lcd.c"
  9098 ;; Parameters:    Size  Location     Type
  9099 ;;  x               1    wreg     unsigned char 
  9100 ;;  y               1    7[BANK1 ] unsigned char 
  9101 ;; Auto vars:     Size  Location     Type
  9102 ;;  x               1   10[BANK1 ] unsigned char 
  9103 ;; Return value:  Size  Location     Type
  9104 ;;                  1    wreg      void 
  9105 ;; Registers used:
  9106 ;;		wreg, status,2, status,0, pclath, cstack
  9107 ;; Tracked objects:
  9108 ;;		On entry : 0/0
  9109 ;;		On exit  : 0/0
  9110 ;;		Unchanged: 0/0
  9111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9112 ;;      Params:         0       0       1       0       0
  9113 ;;      Locals:         0       0       1       0       0
  9114 ;;      Temps:          0       0       2       0       0
  9115 ;;      Totals:         0       0       4       0       0
  9116 ;;Total ram usage:        4 bytes
  9117 ;; Hardware stack levels used:    1
  9118 ;; Hardware stack levels required when called:    7
  9119 ;; This function calls:
  9120 ;;		_cmdLCD
  9121 ;; This function is called by:
  9122 ;;		_writeLCD
  9123 ;;		_Telaprincipal
  9124 ;;		_TempMed
  9125 ;; This function uses a non-reentrant model
  9126 ;;
  9127                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
  9128                           	line	77
  9129                           global __ptext32
  9130                           __ptext32:	;psect for function _gotoxy
  9131  13C4                     psect	text32
  9132                           	file	"lcd.c"
  9133                           	line	77
  9134                           	global	__size_of_gotoxy
  9135                           	__size_of_gotoxy	equ	__end_of_gotoxy-_gotoxy
  9136  001A                     	
  9137                           _gotoxy:	
  9138  13C4                     ;incstack = 0
  9139 ;; hardware stack exceeded
  9140                           	opt	stack 0
  9141                           ; Regs used in _gotoxy: [wreg+status,2+status,0+pclath+cstack]
  9142                           ;gotoxy@x stored from wreg
  9143                           	bsf	status, 5	;RP0=1, select bank1
  9144  13C4  1683               	bcf	status, 6	;RP1=0, select bank1
  9145  13C5  1303               	movwf	(gotoxy@x)^080h
  9146  13C6  00AA               	line	79
  9147                           	
  9148                           l2181:	
  9149  13C7                     ;lcd.c: 77: void gotoxy( unsigned char x, unsigned char y );lcd.c: 78: {;lcd.c: 79:     
                                     cmdLCD((0x80 | 0xC0 * y) + (x & 0X3F));
  9150                           	movlw	low(03Fh)
  9151  13C7  303F               	andwf	(gotoxy@x)^080h,w
  9152  13C8  052A               	movwf	(??_gotoxy+0)^080h+0
  9153  13C9  00A8               	movf	(gotoxy@y)^080h,w
  9154  13CA  0827               	movwf	(??_gotoxy+1)^080h+0
  9155  13CB  00A9               	movlw	(06h)-1
  9156  13CC  3005               u2305:
  9157  13CD                     	clrc
  9158  13CD  1003               	rlf	(??_gotoxy+1)^080h+0,f
  9159  13CE  0DA9               	addlw	-1
  9160  13CF  3EFF               	skipz
  9161  13D0  1D03               	goto	u2305
  9162  13D1  2BCD               	clrc
  9163  13D2  1003               	rlf	(??_gotoxy+1)^080h+0,w
  9164  13D3  0D29               	xorlw	0ffh
  9165  13D4  3AFF               	addlw	1
  9166  13D5  3E01               	iorlw	080h
  9167  13D6  3880               	addwf	0+(??_gotoxy+0)^080h+0,w
  9168  13D7  0728               	fcall	_cmdLCD
  9169  13D8  120A  158A  22AC  160A  118A  	line	80
  9170                           	
  9171                           l43:	
  9172  13DD                     	return
  9173  13DD  0008               	opt stack 0
  9174                           GLOBAL	__end_of_gotoxy
  9175                           	__end_of_gotoxy:
  9176  13DE                     	signat	_gotoxy,8313
  9177                           	global	_cmdLCD
  9178                           
  9179 ;; *************** function _cmdLCD *****************
  9180 ;; Defined at:
  9181 ;;		line 33 in file "lcd.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;  cmd             1    wreg     unsigned char 
  9184 ;; Auto vars:     Size  Location     Type
  9185 ;;  cmd             1    5[BANK1 ] unsigned char 
  9186 ;;  nibble          1    6[BANK1 ] volatile struct .
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  1    wreg      void 
  9189 ;; Registers used:
  9190 ;;		wreg, status,2, status,0, pclath, cstack
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/0
  9193 ;;		On exit  : 0/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9196 ;;      Params:         0       0       0       0       0
  9197 ;;      Locals:         0       0       2       0       0
  9198 ;;      Temps:          0       0       1       0       0
  9199 ;;      Totals:         0       0       3       0       0
  9200 ;;Total ram usage:        3 bytes
  9201 ;; Hardware stack levels used:    1
  9202 ;; Hardware stack levels required when called:    6
  9203 ;; This function calls:
  9204 ;;		_delay
  9205 ;; This function is called by:
  9206 ;;		_initLCD
  9207 ;;		_gotoxy
  9208 ;;		_main
  9209 ;; This function uses a non-reentrant model
  9210 ;;
  9211                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
  9212                           	line	33
  9213                           global __ptext33
  9214                           __ptext33:	;psect for function _cmdLCD
  9215  0AAC                     psect	text33
  9216                           	file	"lcd.c"
  9217                           	line	33
  9218                           	global	__size_of_cmdLCD
  9219                           	__size_of_cmdLCD	equ	__end_of_cmdLCD-_cmdLCD
  9220  0083                     	
  9221                           _cmdLCD:	
  9222  0AAC                     ;incstack = 0
  9223 ;; hardware stack exceeded
  9224                           	opt	stack 0
  9225                           ; Regs used in _cmdLCD: [wreg+status,2+status,0+pclath+cstack]
  9226                           ;cmdLCD@cmd stored from wreg
  9227                           	bsf	status, 5	;RP0=1, select bank1
  9228  0AAC  1683               	bcf	status, 6	;RP1=0, select bank1
  9229  0AAD  1303               	movwf	(cmdLCD@cmd)^080h
  9230  0AAE  00A5               	line	37
  9231                           	
  9232                           l2093:	
  9233  0AAF                     ;lcd.c: 33: void cmdLCD( unsigned char cmd );lcd.c: 34: {;lcd.c: 35:         volatile RE
                                 Gnibble_t nibble;;lcd.c: 37:         nibble.HILO = cmd;
  9234                           	movf	(cmdLCD@cmd)^080h,w
  9235  0AAF  0825               	movwf	(??_cmdLCD+0)^080h+0
  9236  0AB0  00A4               	movf	(??_cmdLCD+0)^080h+0,w
  9237  0AB1  0824               	movwf	(cmdLCD@nibble)^080h	;volatile
  9238  0AB2  00A6               	line	38
  9239                           	
  9240                           l2095:	
  9241  0AB3                     ;lcd.c: 38:         LCD.RS = 0;
  9242                           	bcf	status, 5	;RP0=0, select bank0
  9243  0AB3  1283               	bcf	status, 6	;RP1=0, select bank0
  9244  0AB4  1303               	bcf	(8),4	;volatile
  9245  0AB5  1208               	line	39
  9246                           	
  9247                           l2097:	
  9248  0AB6                     ;lcd.c: 39:         LCD.BUS = nibble.HI ;
  9249                           	bsf	status, 5	;RP0=1, select bank1
  9250  0AB6  1683               	bcf	status, 6	;RP1=0, select bank1
  9251  0AB7  1303               	swapf	(cmdLCD@nibble)^080h,w	;volatile
  9252  0AB8  0E26               	andlw	(1<<4)-1
  9253  0AB9  390F               	movwf	(??_cmdLCD+0)^080h+0
  9254  0ABA  00A4               	bcf	status, 5	;RP0=0, select bank0
  9255  0ABB  1283               	bcf	status, 6	;RP1=0, select bank0
  9256  0ABC  1303               	movf	(8),w	;volatile
  9257  0ABD  0808               	bsf	status, 5	;RP0=1, select bank1
  9258  0ABE  1683               	bcf	status, 6	;RP1=0, select bank1
  9259  0ABF  1303               	xorwf	(??_cmdLCD+0)^080h+0,w
  9260  0AC0  0624               	andlw	not ((1<<4)-1)
  9261  0AC1  39F0               	xorwf	(??_cmdLCD+0)^080h+0,w
  9262  0AC2  0624               	bcf	status, 5	;RP0=0, select bank0
  9263  0AC3  1283               	bcf	status, 6	;RP1=0, select bank0
  9264  0AC4  1303               	movwf	(8)	;volatile
  9265  0AC5  0088               	line	40
  9266                           	
  9267                           l2099:	
  9268  0AC6                     ;lcd.c: 40:          LCD.EN = 0;
  9269                           	bcf	(8),5	;volatile
  9270  0AC6  1288               	line	41
  9271                           	
  9272                           l2101:	
  9273  0AC7                     ;lcd.c: 41:         if( cmd == 0x01 || cmd == 0x02 )
  9274                           	bsf	status, 5	;RP0=1, select bank1
  9275  0AC7  1683               	bcf	status, 6	;RP1=0, select bank1
  9276  0AC8  1303               		decf	((cmdLCD@cmd)^080h),w
  9277  0AC9  0325               	btfsc	status,2
  9278  0ACA  1903               	goto	u2191
  9279  0ACB  2ACD               	goto	u2190
  9280  0ACC  2ACE               u2191:
  9281  0ACD                     	goto	l2105
  9282  0ACD  2AD5               u2190:
  9283  0ACE                     	
  9284                           l2103:	
  9285  0ACE                     		movlw	2
  9286  0ACE  3002               	xorwf	((cmdLCD@cmd)^080h),w
  9287  0ACF  0625               	btfss	status,2
  9288  0AD0  1D03               	goto	u2201
  9289  0AD1  2AD3               	goto	u2200
  9290  0AD2  2AD4               u2201:
  9291  0AD3                     	goto	l2107
  9292  0AD3  2ADF               u2200:
  9293  0AD4                     	goto	l2105
  9294  0AD4  2AD5               	
  9295                           l30:	
  9296  0AD5                     	line	42
  9297                           	
  9298                           l2105:	
  9299  0AD5                     ;lcd.c: 42:         delay(2);
  9300                           	movlw	02h
  9301  0AD5  3002               	movwf	(delay@t)^080h
  9302  0AD6  00A0               	movlw	0
  9303  0AD7  3000               	movwf	((delay@t)^080h)+1
  9304  0AD8  00A1               	fcall	_delay
  9305  0AD9  160A  118A  2488  120A  158A  	goto	l2109
  9306  0ADE  2AEB               	line	43
  9307                           ;lcd.c: 43:         else
  9308                           	
  9309                           l28:	
  9310  0ADF                     	line	44
  9311                           	
  9312                           l2107:	
  9313  0ADF                     ;lcd.c: 44:         delay(2);
  9314                           	movlw	02h
  9315  0ADF  3002               	bsf	status, 5	;RP0=1, select bank1
  9316  0AE0  1683               	bcf	status, 6	;RP1=0, select bank1
  9317  0AE1  1303               	movwf	(delay@t)^080h
  9318  0AE2  00A0               	movlw	0
  9319  0AE3  3000               	movwf	((delay@t)^080h)+1
  9320  0AE4  00A1               	fcall	_delay
  9321  0AE5  160A  118A  2488  120A  158A  	goto	l2109
  9322  0AEA  2AEB               	
  9323                           l31:	
  9324  0AEB                     	line	45
  9325                           	
  9326                           l2109:	
  9327  0AEB                     ;lcd.c: 45:         LCD.EN = 1;
  9328                           	bcf	status, 5	;RP0=0, select bank0
  9329  0AEB  1283               	bcf	status, 6	;RP1=0, select bank0
  9330  0AEC  1303               	bsf	(8),5	;volatile
  9331  0AED  1688               	line	47
  9332                           	
  9333                           l2111:	
  9334  0AEE                     ;lcd.c: 47:         if( cmd != (0x20) )
  9335                           		movlw	32
  9336  0AEE  3020               	bsf	status, 5	;RP0=1, select bank1
  9337  0AEF  1683               	bcf	status, 6	;RP1=0, select bank1
  9338  0AF0  1303               	xorwf	((cmdLCD@cmd)^080h),w
  9339  0AF1  0625               	btfsc	status,2
  9340  0AF2  1903               	goto	u2211
  9341  0AF3  2AF5               	goto	u2210
  9342  0AF4  2AF6               u2211:
  9343  0AF5                     	goto	l37
  9344  0AF5  2B2E               u2210:
  9345  0AF6                     	line	49
  9346                           	
  9347                           l2113:	
  9348  0AF6                     ;lcd.c: 48:     {;lcd.c: 49:        LCD.RS = 0;
  9349                           	bcf	status, 5	;RP0=0, select bank0
  9350  0AF6  1283               	bcf	status, 6	;RP1=0, select bank0
  9351  0AF7  1303               	bcf	(8),4	;volatile
  9352  0AF8  1208               	line	50
  9353                           	
  9354                           l2115:	
  9355  0AF9                     ;lcd.c: 50:        LCD.BUS = nibble.LO;
  9356                           	bsf	status, 5	;RP0=1, select bank1
  9357  0AF9  1683               	bcf	status, 6	;RP1=0, select bank1
  9358  0AFA  1303               	movf	(cmdLCD@nibble)^080h,w	;volatile
  9359  0AFB  0826               	andlw	(1<<4)-1
  9360  0AFC  390F               	movwf	(??_cmdLCD+0)^080h+0
  9361  0AFD  00A4               	bcf	status, 5	;RP0=0, select bank0
  9362  0AFE  1283               	bcf	status, 6	;RP1=0, select bank0
  9363  0AFF  1303               	movf	(8),w	;volatile
  9364  0B00  0808               	bsf	status, 5	;RP0=1, select bank1
  9365  0B01  1683               	bcf	status, 6	;RP1=0, select bank1
  9366  0B02  1303               	xorwf	(??_cmdLCD+0)^080h+0,w
  9367  0B03  0624               	andlw	not ((1<<4)-1)
  9368  0B04  39F0               	xorwf	(??_cmdLCD+0)^080h+0,w
  9369  0B05  0624               	bcf	status, 5	;RP0=0, select bank0
  9370  0B06  1283               	bcf	status, 6	;RP1=0, select bank0
  9371  0B07  1303               	movwf	(8)	;volatile
  9372  0B08  0088               	line	51
  9373                           	
  9374                           l2117:	
  9375  0B09                     ;lcd.c: 51:        LCD.EN = 0;
  9376                           	bcf	(8),5	;volatile
  9377  0B09  1288               	line	52
  9378                           ;lcd.c: 52:        if( cmd == 0x01 || cmd == 0x02 )
  9379                           	bsf	status, 5	;RP0=1, select bank1
  9380  0B0A  1683               	bcf	status, 6	;RP1=0, select bank1
  9381  0B0B  1303               		decf	((cmdLCD@cmd)^080h),w
  9382  0B0C  0325               	btfsc	status,2
  9383  0B0D  1903               	goto	u2221
  9384  0B0E  2B10               	goto	u2220
  9385  0B0F  2B11               u2221:
  9386  0B10                     	goto	l2121
  9387  0B10  2B18               u2220:
  9388  0B11                     	
  9389                           l2119:	
  9390  0B11                     		movlw	2
  9391  0B11  3002               	xorwf	((cmdLCD@cmd)^080h),w
  9392  0B12  0625               	btfss	status,2
  9393  0B13  1D03               	goto	u2231
  9394  0B14  2B16               	goto	u2230
  9395  0B15  2B17               u2231:
  9396  0B16                     	goto	l2123
  9397  0B16  2B22               u2230:
  9398  0B17                     	goto	l2121
  9399  0B17  2B18               	
  9400                           l35:	
  9401  0B18                     	line	53
  9402                           	
  9403                           l2121:	
  9404  0B18                     ;lcd.c: 53:             delay(2);
  9405                           	movlw	02h
  9406  0B18  3002               	movwf	(delay@t)^080h
  9407  0B19  00A0               	movlw	0
  9408  0B1A  3000               	movwf	((delay@t)^080h)+1
  9409  0B1B  00A1               	fcall	_delay
  9410  0B1C  160A  118A  2488  120A  158A  	goto	l2125
  9411  0B21  2B2A               	line	54
  9412                           ;lcd.c: 54:        else
  9413                           	
  9414                           l33:	
  9415  0B22                     	line	55
  9416                           	
  9417                           l2123:	
  9418  0B22                     ;lcd.c: 55:             _delay((unsigned long)((40)*(20000000/4000000.0)));
  9419                           	opt asmopt_push
  9420                           opt asmopt_off
  9421                           	movlw	65
  9422  0B22  3041               	bsf	status, 5	;RP0=1, select bank1
  9423  0B23  1683               	bcf	status, 6	;RP1=0, select bank1
  9424  0B24  1303               movwf	((??_cmdLCD+0)^080h+0),f
  9425  0B25  00A4               	u4357:
  9426  0B26                     decfsz	(??_cmdLCD+0)^080h+0,f
  9427  0B26  0BA4               	goto	u4357
  9428  0B27  2B26               	nop2
  9429  0B28  2B29               opt asmopt_pop
  9430                           
  9431                           	goto	l2125
  9432  0B29  2B2A               	
  9433                           l36:	
  9434  0B2A                     	line	56
  9435                           	
  9436                           l2125:	
  9437  0B2A                     ;lcd.c: 56:        LCD.EN = 1;
  9438                           	bcf	status, 5	;RP0=0, select bank0
  9439  0B2A  1283               	bcf	status, 6	;RP1=0, select bank0
  9440  0B2B  1303               	bsf	(8),5	;volatile
  9441  0B2C  1688               	goto	l37
  9442  0B2D  2B2E               	line	57
  9443                           ;lcd.c: 57:     }
  9444                           	
  9445                           l32:	
  9446  0B2E                     	line	58
  9447                           	
  9448                           l37:	
  9449  0B2E                     	return
  9450  0B2E  0008               	opt stack 0
  9451                           GLOBAL	__end_of_cmdLCD
  9452                           	__end_of_cmdLCD:
  9453  0B2F                     	signat	_cmdLCD,4217
  9454                           	global	_delay
  9455                           
  9456 ;; *************** function _delay *****************
  9457 ;; Defined at:
  9458 ;;		line 4 in file "delay.c"
  9459 ;; Parameters:    Size  Location     Type
  9460 ;;  t               2    0[BANK1 ] unsigned int 
  9461 ;; Auto vars:     Size  Location     Type
  9462 ;;		None
  9463 ;; Return value:  Size  Location     Type
  9464 ;;                  1    wreg      void 
  9465 ;; Registers used:
  9466 ;;		wreg, status,2, status,0
  9467 ;; Tracked objects:
  9468 ;;		On entry : 0/0
  9469 ;;		On exit  : 0/0
  9470 ;;		Unchanged: 0/0
  9471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9472 ;;      Params:         0       0       2       0       0
  9473 ;;      Locals:         0       0       0       0       0
  9474 ;;      Temps:          0       0       2       0       0
  9475 ;;      Totals:         0       0       4       0       0
  9476 ;;Total ram usage:        4 bytes
  9477 ;; Hardware stack levels used:    1
  9478 ;; Hardware stack levels required when called:    5
  9479 ;; This function calls:
  9480 ;;		Nothing
  9481 ;; This function is called by:
  9482 ;;		_initLCD
  9483 ;;		_cmdLCD
  9484 ;;		_putLCD
  9485 ;;		_temperaturaInicializar
  9486 ;;		_adcLer
  9487 ;;		_main
  9488 ;;		_EEPROM_WriteByte
  9489 ;; This function uses a non-reentrant model
  9490 ;;
  9491                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
  9492                           	file	"delay.c"
  9493                           	line	4
  9494                           global __ptext34
  9495                           __ptext34:	;psect for function _delay
  9496  1488                     psect	text34
  9497                           	file	"delay.c"
  9498                           	line	4
  9499                           	global	__size_of_delay
  9500                           	__size_of_delay	equ	__end_of_delay-_delay
  9501  001F                     	
  9502                           _delay:	
  9503  1488                     ;incstack = 0
  9504                           	opt	stack 0
  9505                           ; Regs used in _delay: [wreg+status,2+status,0]
  9506                           	line	6
  9507                           	
  9508                           l2087:	
  9509  1488                     ;delay.c: 4: void delay(unsigned int t);delay.c: 5: {;delay.c: 6:     while (t)
  9510                           	goto	l2091
  9511  1488  2C9D               	
  9512                           l6:	
  9513  1489                     	line	8
  9514                           	
  9515                           l2089:	
  9516  1489                     ;delay.c: 7:     {;delay.c: 8:         _delay((unsigned long)((10)*(20000000/4000.0)));

  9517                           	opt asmopt_push
  9518                           opt asmopt_off
  9519                           movlw	65
  9520  1489  3041               	bsf	status, 5	;RP0=1, select bank1
  9521  148A  1683               	bcf	status, 6	;RP1=0, select bank1
  9522  148B  1303               movwf	((??_delay+0)^080h+0+1),f
  9523  148C  00A3               	movlw	237
  9524  148D  30ED               movwf	((??_delay+0)^080h+0),f
  9525  148E  00A2               	u4367:
  9526  148F                     decfsz	((??_delay+0)^080h+0),f
  9527  148F  0BA2               	goto	u4367
  9528  1490  2C8F               	decfsz	((??_delay+0)^080h+0+1),f
  9529  1491  0BA3               	goto	u4367
  9530  1492  2C8F               	nop2
  9531  1493  2C94               opt asmopt_pop
  9532                           
  9533                           	line	9
  9534                           ;delay.c: 9:         --t;
  9535                           	movlw	01h
  9536  1494  3001               	bsf	status, 5	;RP0=1, select bank1
  9537  1495  1683               	bcf	status, 6	;RP1=0, select bank1
  9538  1496  1303               	subwf	(delay@t)^080h,f
  9539  1497  02A0               	movlw	0
  9540  1498  3000               	skipc
  9541  1499  1C03               	decf	(delay@t+1)^080h,f
  9542  149A  03A1               	subwf	(delay@t+1)^080h,f
  9543  149B  02A1               	goto	l2091
  9544  149C  2C9D               	line	10
  9545                           ;delay.c: 10:     }
  9546                           	
  9547                           l5:	
  9548  149D                     	line	6
  9549                           	
  9550                           l2091:	
  9551  149D                     ;delay.c: 6:     while (t)
  9552                           	bsf	status, 5	;RP0=1, select bank1
  9553  149D  1683               	bcf	status, 6	;RP1=0, select bank1
  9554  149E  1303               	movf	((delay@t)^080h),w
  9555  149F  0820               iorwf	((delay@t+1)^080h),w
  9556  14A0  0421               	btfss	status,2
  9557  14A1  1D03               	goto	u2181
  9558  14A2  2CA4               	goto	u2180
  9559  14A3  2CA5               u2181:
  9560  14A4                     	goto	l2089
  9561  14A4  2C89               u2180:
  9562  14A5                     	goto	l8
  9563  14A5  2CA6               	
  9564                           l7:	
  9565  14A6                     	line	11
  9566                           	
  9567                           l8:	
  9568  14A6                     	return
  9569  14A6  0008               	opt stack 0
  9570                           GLOBAL	__end_of_delay
  9571                           	__end_of_delay:
  9572  14A7                     	signat	_delay,4217
  9573                           	global	_myISR
  9574                           
  9575 ;; *************** function _myISR *****************
  9576 ;; Defined at:
  9577 ;;		line 17 in file "main.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;		None
  9580 ;; Auto vars:     Size  Location     Type
  9581 ;;		None
  9582 ;; Return value:  Size  Location     Type
  9583 ;;                  1    wreg      void 
  9584 ;; Registers used:
  9585 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9586 ;; Tracked objects:
  9587 ;;		On entry : 0/0
  9588 ;;		On exit  : 0/0
  9589 ;;		Unchanged: 0/0
  9590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9591 ;;      Params:         0       0       0       0       0
  9592 ;;      Locals:         0       0       0       0       0
  9593 ;;      Temps:          0       3       0       0       0
  9594 ;;      Totals:         0       3       0       0       0
  9595 ;;Total ram usage:        3 bytes
  9596 ;; Hardware stack levels used:    1
  9597 ;; Hardware stack levels required when called:    4
  9598 ;; This function calls:
  9599 ;;		i1_salvatemp
  9600 ;;		i1_temperaturaLer
  9601 ;; This function is called by:
  9602 ;;		Interrupt level 1
  9603 ;; This function uses a non-reentrant model
  9604 ;;
  9605                           psect	text35,local,class=CODE,delta=2,merge=1,group=0
  9606                           	file	"main.c"
  9607                           	line	17
  9608                           global __ptext35
  9609                           __ptext35:	;psect for function _myISR
  9610  1634                     psect	text35
  9611                           	file	"main.c"
  9612                           	line	17
  9613                           	global	__size_of_myISR
  9614                           	__size_of_myISR	equ	__end_of_myISR-_myISR
  9615  0035                     	
  9616                           _myISR:	
  9617  1634                     ;incstack = 0
  9618 ;; hardware stack exceeded
  9619                           	opt	stack 0
  9620                           ; Regs used in _myISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9621                           psect	intentry,class=CODE,delta=2
  9622                           global __pintentry
  9623                           __pintentry:
  9624  0004                     global interrupt_function
  9625                           interrupt_function:
  9626  0004                     	global saved_w
  9627                           	saved_w	set	btemp+0
  9628  007E                     	movwf	saved_w
  9629  0004  00FE               	swapf	status,w
  9630  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
  9631  0006  1283               	bcf	status, 6	;RP1=0, select bank0
  9632  0007  1303               	movwf	(??_myISR+0)
  9633  0008  00C9               	movf	pclath,w
  9634  0009  080A               	movwf	(??_myISR+1)
  9635  000A  00CA               	movf	btemp+1,w
  9636  000B  087F               	movwf	(??_myISR+2)
  9637  000C  00CB               	ljmp	_myISR
  9638  000D  160A  118A  2E34   psect	text35
  9639                           	line	19
  9640                           	
  9641                           i1l3101:	
  9642  1634                     ;main.c: 19:     if(TMR1IF)
  9643                           	btfss	(96/8),(96)&7	;volatile
  9644  1634  1C0C               	goto	u420_21
  9645  1635  2E37               	goto	u420_20
  9646  1636  2E38               u420_21:
  9647  1637                     	goto	i1l224
  9648  1637  2E5E               u420_20:
  9649  1638                     	line	21
  9650                           	
  9651                           i1l3103:	
  9652  1638                     ;main.c: 20:     {;main.c: 21:         repeat++;
  9653                           	movlw	01h
  9654  1638  3001               	addwf	(_repeat),f
  9655  1639  07CC               	skipnc
  9656  163A  1803               	incf	(_repeat+1),f
  9657  163B  0ACD               	movlw	0
  9658  163C  3000               	addwf	(_repeat+1),f
  9659  163D  07CD               	line	22
  9660                           	
  9661                           i1l3105:	
  9662  163E                     ;main.c: 22:         TMR1IF = 0;
  9663                           	bcf	(96/8),(96)&7	;volatile
  9664  163E  100C               	line	23
  9665                           	
  9666                           i1l3107:	
  9667  163F                     ;main.c: 23:         TMR1L = TMR1H = 0x00;
  9668                           	clrf	(15)	;volatile
  9669  163F  018F               	clrf	(14)	;volatile
  9670  1640  018E               	line	24
  9671                           	
  9672                           i1l3109:	
  9673  1641                     ;main.c: 24:         if(repeat >=2861)
  9674                           	movf	(_repeat+1),w
  9675  1641  084D               	xorlw	80h
  9676  1642  3A80               	movwf	btemp+1
  9677  1643  00FF               	movlw	(0Bh)^80h
  9678  1644  308B               	subwf	btemp+1,w
  9679  1645  027F               	skipz
  9680  1646  1D03               	goto	u421_25
  9681  1647  2E4A               	movlw	02Dh
  9682  1648  302D               	subwf	(_repeat),w
  9683  1649  024C               u421_25:
  9684  164A                     
  9685                           	skipc
  9686  164A  1C03               	goto	u421_21
  9687  164B  2E4D               	goto	u421_20
  9688  164C  2E4E               u421_21:
  9689  164D                     	goto	i1l224
  9690  164D  2E5E               u421_20:
  9691  164E                     	line	26
  9692                           	
  9693                           i1l3111:	
  9694  164E                     ;main.c: 25:         {;main.c: 26:             salvatemp(temperaturaLer());
  9695                           	fcall	i1_temperaturaLer
  9696  164E  160A  118A  272D  160A  118A  	fcall	i1_salvatemp
  9697  1653  160A  118A  2415  160A  118A  	line	27
  9698                           	
  9699                           i1l3113:	
  9700  1658                     ;main.c: 27:             repeat = 0;
  9701                           	bcf	status, 5	;RP0=0, select bank0
  9702  1658  1283               	bcf	status, 6	;RP1=0, select bank0
  9703  1659  1303               	clrf	(_repeat)
  9704  165A  01CC               	clrf	(_repeat+1)
  9705  165B  01CD               	goto	i1l224
  9706  165C  2E5E               	line	28
  9707                           ;main.c: 28:         }
  9708                           	
  9709                           i1l223:	
  9710  165D                     	goto	i1l224
  9711  165D  2E5E               	line	29
  9712                           ;main.c: 29:     }
  9713                           	
  9714                           i1l222:	
  9715  165E                     	line	30
  9716                           	
  9717                           i1l224:	
  9718  165E                     	bcf	status, 5	;RP0=0, select bank0
  9719  165E  1283               	bcf	status, 6	;RP1=0, select bank0
  9720  165F  1303               	movf	(??_myISR+2),w
  9721  1660  084B               	movwf	btemp+1
  9722  1661  00FF               	movf	(??_myISR+1),w
  9723  1662  084A               	movwf	pclath
  9724  1663  008A               	swapf	(??_myISR+0)^00h,w
  9725  1664  0E49               	movwf	status
  9726  1665  0083               	swapf	saved_w,f
  9727  1666  0EFE               	swapf	saved_w,w
  9728  1667  0E7E               	retfie
  9729  1668  0009               	opt stack 0
  9730                           GLOBAL	__end_of_myISR
  9731                           	__end_of_myISR:
  9732  1669                     	signat	_myISR,89
  9733                           	global	i1_temperaturaLer
  9734                           
  9735 ;; *************** function i1_temperaturaLer *****************
  9736 ;; Defined at:
  9737 ;;		line 44 in file "leitorLM35_v07.c"
  9738 ;; Parameters:    Size  Location     Type
  9739 ;;		None
  9740 ;; Auto vars:     Size  Location     Type
  9741 ;;  temperaturaL    2   39[BANK0 ] unsigned int 
  9742 ;;  temperaturaL    2   37[BANK0 ] unsigned int 
  9743 ;; Return value:  Size  Location     Type
  9744 ;;                  1    wreg      unsigned char 
  9745 ;; Registers used:
  9746 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9747 ;; Tracked objects:
  9748 ;;		On entry : 0/0
  9749 ;;		On exit  : 0/0
  9750 ;;		Unchanged: 0/0
  9751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9752 ;;      Params:         0       0       0       0       0
  9753 ;;      Locals:         0       4       0       0       0
  9754 ;;      Temps:          0       0       0       0       0
  9755 ;;      Totals:         0       4       0       0       0
  9756 ;;Total ram usage:        4 bytes
  9757 ;; Hardware stack levels used:    1
  9758 ;; Hardware stack levels required when called:    2
  9759 ;; This function calls:
  9760 ;;		i1___flmul
  9761 ;;		i1___fltol
  9762 ;;		i1___xxtofl
  9763 ;;		i1_adcLer
  9764 ;; This function is called by:
  9765 ;;		_myISR
  9766 ;; This function uses a non-reentrant model
  9767 ;;
  9768                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
  9769                           	file	"leitorLM35_v07.c"
  9770                           	line	44
  9771                           global __ptext36
  9772                           __ptext36:	;psect for function i1_temperaturaLer
  9773  172D                     psect	text36
  9774                           	file	"leitorLM35_v07.c"
  9775                           	line	44
  9776                           	global	__size_ofi1_temperaturaLer
  9777                           	__size_ofi1_temperaturaLer	equ	__end_ofi1_temperaturaLer-i1_temperaturaLer
  9778  0046                     	
  9779                           i1_temperaturaLer:	
  9780  172D                     ;incstack = 0
  9781 ;; hardware stack exceeded
  9782                           	opt	stack 0
  9783                           ; Regs used in i1_temperaturaLer: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9784                           	line	48
  9785                           	
  9786                           i1l3085:	
  9787  172D                     ;leitorLM35_v07.c: 46:     unsigned int temp01VlrInt;;leitorLM35_v07.c: 47:     unsigned
                                  int temp01VlrTmp;;leitorLM35_v07.c: 48:     temp01VlrInt = adcLer();
  9788                           	fcall	i1_adcLer
  9789  172D  160A  118A  2556  160A  118A  	movf	(1+(?i1_adcLer)),w
  9790  1732  0875               	bcf	status, 5	;RP0=0, select bank0
  9791  1733  1283               	bcf	status, 6	;RP1=0, select bank0
  9792  1734  1303               	movwf	(i1temperaturaLer@temp01VlrInt+1)
  9793  1735  00C6               	movf	(0+(?i1_adcLer)),w
  9794  1736  0874               	movwf	(i1temperaturaLer@temp01VlrInt)
  9795  1737  00C5               	line	49
  9796                           	
  9797                           i1l3087:	
  9798  1738                     ;leitorLM35_v07.c: 49:     temp01VlrTmp =(unsigned int) (temp01VlrInt * 0.48875);
  9799                           	movf	(i1temperaturaLer@temp01VlrInt),w
  9800  1738  0845               	movwf	(i1___xxtofl@val)
  9801  1739  00F0               	movf	(i1temperaturaLer@temp01VlrInt+1),w
  9802  173A  0846               	movwf	((i1___xxtofl@val))+1
  9803  173B  00F1               	clrf	2+((i1___xxtofl@val))
  9804  173C  01F2               	clrf	3+((i1___xxtofl@val))
  9805  173D  01F3               	movlw	low(0)
  9806  173E  3000               	fcall	i1___xxtofl
  9807  173F  120A  158A  2505  160A  118A  	movf	(3+(?i1___xxtofl)),w
  9808  1744  0873               	bcf	status, 5	;RP0=0, select bank0
  9809  1745  1283               	bcf	status, 6	;RP1=0, select bank0
  9810  1746  1303               	movwf	(i1___flmul@a+3)
  9811  1747  00A7               	movf	(2+(?i1___xxtofl)),w
  9812  1748  0872               	movwf	(i1___flmul@a+2)
  9813  1749  00A6               	movf	(1+(?i1___xxtofl)),w
  9814  174A  0871               	movwf	(i1___flmul@a+1)
  9815  174B  00A5               	movf	(0+(?i1___xxtofl)),w
  9816  174C  0870               	movwf	(i1___flmul@a)
  9817  174D  00A4               
  9818                           	movlw	0x3e
  9819  174E  303E               	movwf	(i1___flmul@b+3)
  9820  174F  00A3               	movlw	0xfa
  9821  1750  30FA               	movwf	(i1___flmul@b+2)
  9822  1751  00A2               	movlw	0x3d
  9823  1752  303D               	movwf	(i1___flmul@b+1)
  9824  1753  00A1               	movlw	0x71
  9825  1754  3071               	movwf	(i1___flmul@b)
  9826  1755  00A0               
  9827                           	fcall	i1___flmul
  9828  1756  120A  118A  239E  160A  118A  	bcf	status, 5	;RP0=0, select bank0
  9829  175B  1283               	bcf	status, 6	;RP1=0, select bank0
  9830  175C  1303               	movf	(3+(?i1___flmul)),w
  9831  175D  0823               	movwf	(i1___fltol@f1+3)
  9832  175E  00BD               	movf	(2+(?i1___flmul)),w
  9833  175F  0822               	movwf	(i1___fltol@f1+2)
  9834  1760  00BC               	movf	(1+(?i1___flmul)),w
  9835  1761  0821               	movwf	(i1___fltol@f1+1)
  9836  1762  00BB               	movf	(0+(?i1___flmul)),w
  9837  1763  0820               	movwf	(i1___fltol@f1)
  9838  1764  00BA               
  9839                           	fcall	i1___fltol
  9840  1765  120A  158A  232F  160A  118A  	bcf	status, 5	;RP0=0, select bank0
  9841  176A  1283               	bcf	status, 6	;RP1=0, select bank0
  9842  176B  1303               	movf	(1+(?i1___fltol)),w
  9843  176C  083B               	movwf	(i1temperaturaLer@temp01VlrTmp+1)
  9844  176D  00C8               	movf	(0+(?i1___fltol)),w
  9845  176E  083A               	movwf	(i1temperaturaLer@temp01VlrTmp)
  9846  176F  00C7               	line	50
  9847                           	
  9848                           i1l3089:	
  9849  1770                     ;leitorLM35_v07.c: 50:     return temp01VlrTmp;
  9850                           	movf	(i1temperaturaLer@temp01VlrTmp),w
  9851  1770  0847               	goto	i1l115
  9852  1771  2F72               	
  9853                           i1l3091:	
  9854  1772                     	line	51
  9855                           	
  9856                           i1l115:	
  9857  1772                     	return
  9858  1772  0008               	opt stack 0
  9859                           GLOBAL	__end_ofi1_temperaturaLer
  9860                           	__end_ofi1_temperaturaLer:
  9861  1773                     	signat	i1_temperaturaLer,89
  9862                           	global	i1_adcLer
  9863                           
  9864 ;; *************** function i1_adcLer *****************
  9865 ;; Defined at:
  9866 ;;		line 22 in file "leitorLM35_v07.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;		None
  9869 ;; Auto vars:     Size  Location     Type
  9870 ;;  adcLer          2    6[COMMON] unsigned int 
  9871 ;; Return value:  Size  Location     Type
  9872 ;;                  2    4[COMMON] unsigned int 
  9873 ;; Registers used:
  9874 ;;		wreg, status,2, status,0, pclath, cstack
  9875 ;; Tracked objects:
  9876 ;;		On entry : 0/0
  9877 ;;		On exit  : 0/0
  9878 ;;		Unchanged: 0/0
  9879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9880 ;;      Params:         2       0       0       0       0
  9881 ;;      Locals:         2       0       0       0       0
  9882 ;;      Temps:          0       0       0       0       0
  9883 ;;      Totals:         4       0       0       0       0
  9884 ;;Total ram usage:        4 bytes
  9885 ;; Hardware stack levels used:    1
  9886 ;; Hardware stack levels required when called:    1
  9887 ;; This function calls:
  9888 ;;		i1_delay
  9889 ;; This function is called by:
  9890 ;;		i1_temperaturaLer
  9891 ;; This function uses a non-reentrant model
  9892 ;;
  9893                           psect	text37,local,class=CODE,delta=2,merge=1,group=0
  9894                           	line	22
  9895                           global __ptext37
  9896                           __ptext37:	;psect for function i1_adcLer
  9897  1556                     psect	text37
  9898                           	file	"leitorLM35_v07.c"
  9899                           	line	22
  9900                           	global	__size_ofi1_adcLer
  9901                           	__size_ofi1_adcLer	equ	__end_ofi1_adcLer-i1_adcLer
  9902  002A                     	
  9903                           i1_adcLer:	
  9904  1556                     ;incstack = 0
  9905 ;; hardware stack exceeded
  9906                           	opt	stack 0
  9907                           ; Regs used in i1_adcLer: [wreg+status,2+status,0+pclath+cstack]
  9908                           	line	25
  9909                           	
  9910                           i1l2655:	
  9911  1556                     ;leitorLM35_v07.c: 24:     unsigned int adc01Temp;;leitorLM35_v07.c: 25:     delay(35);

  9912                           	movlw	023h
  9913  1556  3023               	movwf	(i1delay@t)
  9914  1557  00F0               	movlw	0
  9915  1558  3000               	movwf	((i1delay@t))+1
  9916  1559  00F1               	fcall	i1_delay
  9917  155A  160A  118A  2391  160A  118A  	line	28
  9918                           	
  9919                           i1l2657:	
  9920  155F                     ;leitorLM35_v07.c: 28:     ADCON0bits.ADON = 1;
  9921                           	bcf	status, 5	;RP0=0, select bank0
  9922  155F  1283               	bcf	status, 6	;RP1=0, select bank0
  9923  1560  1303               	bsf	(31),0	;volatile
  9924  1561  141F               	line	29
  9925                           ;leitorLM35_v07.c: 29:     delay(1);
  9926                           	movlw	01h
  9927  1562  3001               	movwf	(i1delay@t)
  9928  1563  00F0               	movlw	0
  9929  1564  3000               	movwf	((i1delay@t))+1
  9930  1565  00F1               	fcall	i1_delay
  9931  1566  160A  118A  2391  160A  118A  	line	30
  9932                           	
  9933                           i1l2659:	
  9934  156B                     ;leitorLM35_v07.c: 30:     ADCON0bits.GO = 1;
  9935                           	bcf	status, 5	;RP0=0, select bank0
  9936  156B  1283               	bcf	status, 6	;RP1=0, select bank0
  9937  156C  1303               	bsf	(31),1	;volatile
  9938  156D  149F               	line	31
  9939                           ;leitorLM35_v07.c: 31:     while(ADCON0bits.GO);
  9940                           	goto	i1l109
  9941  156E  2D6F               	
  9942                           i1l110:	
  9943  156F                     	
  9944                           i1l109:	
  9945  156F                     	btfsc	(31),1	;volatile
  9946  156F  189F               	goto	u339_21
  9947  1570  2D72               	goto	u339_20
  9948  1571  2D73               u339_21:
  9949  1572                     	goto	i1l109
  9950  1572  2D6F               u339_20:
  9951  1573                     	goto	i1l2661
  9952  1573  2D74               	
  9953                           i1l111:	
  9954  1574                     	line	40
  9955                           	
  9956                           i1l2661:	
  9957  1574                     ;leitorLM35_v07.c: 40:     adc01Temp = (unsigned) (ADRESH<<8) | ADRESL;
  9958                           	movf	(30),w	;volatile
  9959  1574  081E               	movwf	(i1adcLer@adc01Temp+1)
  9960  1575  00F7               	bsf	status, 5	;RP0=1, select bank1
  9961  1576  1683               	bcf	status, 6	;RP1=0, select bank1
  9962  1577  1303               	movf	(158)^080h,w	;volatile
  9963  1578  081E               	movwf	(i1adcLer@adc01Temp)
  9964  1579  00F6               	line	41
  9965                           ;leitorLM35_v07.c: 41:     return adc01Temp;
  9966                           	movf	(i1adcLer@adc01Temp+1),w
  9967  157A  0877               	movwf	(?i1_adcLer+1)
  9968  157B  00F5               	movf	(i1adcLer@adc01Temp),w
  9969  157C  0876               	movwf	(?i1_adcLer)
  9970  157D  00F4               	goto	i1l112
  9971  157E  2D7F               	
  9972                           i1l2663:	
  9973  157F                     	line	42
  9974                           	
  9975                           i1l112:	
  9976  157F                     	return
  9977  157F  0008               	opt stack 0
  9978                           GLOBAL	__end_ofi1_adcLer
  9979                           	__end_ofi1_adcLer:
  9980  1580                     	signat	i1_adcLer,90
  9981                           	global	i1___xxtofl
  9982                           
  9983 ;; *************** function i1___xxtofl *****************
  9984 ;; Defined at:
  9985 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  9986 ;; Parameters:    Size  Location     Type
  9987 ;;  sign            1    wreg     unsigned char 
  9988 ;;  val             4    0[COMMON] long 
  9989 ;; Auto vars:     Size  Location     Type
  9990 ;;  sign            1    8[COMMON] unsigned char 
  9991 ;;  __xxtofl        4   10[COMMON] unsigned long 
  9992 ;;  __xxtofl        1    9[COMMON] unsigned char 
  9993 ;; Return value:  Size  Location     Type
  9994 ;;                  4    0[COMMON] unsigned char 
  9995 ;; Registers used:
  9996 ;;		wreg, status,2, status,0
  9997 ;; Tracked objects:
  9998 ;;		On entry : 0/0
  9999 ;;		On exit  : 0/0
 10000 ;;		Unchanged: 0/0
 10001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10002 ;;      Params:         4       0       0       0       0
 10003 ;;      Locals:         6       0       0       0       0
 10004 ;;      Temps:          4       0       0       0       0
 10005 ;;      Totals:        14       0       0       0       0
 10006 ;;Total ram usage:       14 bytes
 10007 ;; Hardware stack levels used:    1
 10008 ;; This function calls:
 10009 ;;		Nothing
 10010 ;; This function is called by:
 10011 ;;		i1_temperaturaLer
 10012 ;; This function uses a non-reentrant model
 10013 ;;
 10014                           psect	text38,local,class=CODE,delta=2,merge=1,group=0
 10015                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 10016                           	line	10
 10017                           global __ptext38
 10018                           __ptext38:	;psect for function i1___xxtofl
 10019  0D05                     psect	text38
 10020                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 10021                           	line	10
 10022                           	global	__size_ofi1___xxtofl
 10023                           	__size_ofi1___xxtofl	equ	__end_ofi1___xxtofl-i1___xxtofl
 10024  00C2                     	
 10025                           i1___xxtofl:	
 10026  0D05                     ;incstack = 0
 10027                           	opt	stack 0
 10028                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 10029                           ;i1___xxtofl@sign stored from wreg
 10030                           	movwf	(i1___xxtofl@sign)
 10031  0D05  00F8               	line	15
 10032                           	
 10033                           i1l2847:	
 10034  0D06                     	movf	((i1___xxtofl@sign)),w
 10035  0D06  0878               	btfsc	status,2
 10036  0D07  1903               	goto	u387_21
 10037  0D08  2D0A               	goto	u387_20
 10038  0D09  2D0B               u387_21:
 10039  0D0A                     	goto	i1l2853
 10040  0D0A  2D1F               u387_20:
 10041  0D0B                     	
 10042                           i1l2849:	
 10043  0D0B                     	btfss	(i1___xxtofl@val+3),7
 10044  0D0B  1FF3               	goto	u388_21
 10045  0D0C  2D0E               	goto	u388_20
 10046  0D0D  2D0F               u388_21:
 10047  0D0E                     	goto	i1l2853
 10048  0D0E  2D1F               u388_20:
 10049  0D0F                     	line	16
 10050                           	
 10051                           i1l2851:	
 10052  0D0F                     	comf	(i1___xxtofl@val)+0,w
 10053  0D0F  0970               	movwf	(i1___xxtofl@arg)
 10054  0D10  00FA               	comf	(i1___xxtofl@val)+1,w
 10055  0D11  0971               	movwf	(i1___xxtofl@arg+1)
 10056  0D12  00FB               	comf	(i1___xxtofl@val)+2,w
 10057  0D13  0972               	movwf	(i1___xxtofl@arg+2)
 10058  0D14  00FC               	comf	(i1___xxtofl@val)+3,w
 10059  0D15  0973               	movwf	(i1___xxtofl@arg+3)
 10060  0D16  00FD               	incf	(i1___xxtofl@arg),f
 10061  0D17  0AFA               	skipnz
 10062  0D18  1903               	incf	(i1___xxtofl@arg+1),f
 10063  0D19  0AFB               	skipnz
 10064  0D1A  1903               	incf	(i1___xxtofl@arg+2),f
 10065  0D1B  0AFC               	skipnz
 10066  0D1C  1903               	incf	(i1___xxtofl@arg+3),f
 10067  0D1D  0AFD               	line	17
 10068                           	goto	i1l818
 10069  0D1E  2D27               	line	18
 10070                           	
 10071                           i1l817:	
 10072  0D1F                     	line	19
 10073                           	
 10074                           i1l2853:	
 10075  0D1F                     	movf	(i1___xxtofl@val+3),w
 10076  0D1F  0873               	movwf	(i1___xxtofl@arg+3)
 10077  0D20  00FD               	movf	(i1___xxtofl@val+2),w
 10078  0D21  0872               	movwf	(i1___xxtofl@arg+2)
 10079  0D22  00FC               	movf	(i1___xxtofl@val+1),w
 10080  0D23  0871               	movwf	(i1___xxtofl@arg+1)
 10081  0D24  00FB               	movf	(i1___xxtofl@val),w
 10082  0D25  0870               	movwf	(i1___xxtofl@arg)
 10083  0D26  00FA               
 10084                           	line	20
 10085                           	
 10086                           i1l818:	
 10087  0D27                     	line	21
 10088                           	movf	(i1___xxtofl@val+3),w
 10089  0D27  0873               	iorwf	(i1___xxtofl@val+2),w
 10090  0D28  0472               	iorwf	(i1___xxtofl@val+1),w
 10091  0D29  0471               	iorwf	(i1___xxtofl@val),w
 10092  0D2A  0470               	skipz
 10093  0D2B  1D03               	goto	u389_21
 10094  0D2C  2D2E               	goto	u389_20
 10095  0D2D  2D2F               u389_21:
 10096  0D2E                     	goto	i1l2859
 10097  0D2E  2D39               u389_20:
 10098  0D2F                     	line	22
 10099                           	
 10100                           i1l2855:	
 10101  0D2F                     	movlw	0x0
 10102  0D2F  3000               	movwf	(?i1___xxtofl+3)
 10103  0D30  00F3               	movlw	0x0
 10104  0D31  3000               	movwf	(?i1___xxtofl+2)
 10105  0D32  00F2               	movlw	0x0
 10106  0D33  3000               	movwf	(?i1___xxtofl+1)
 10107  0D34  00F1               	movlw	0x0
 10108  0D35  3000               	movwf	(?i1___xxtofl)
 10109  0D36  00F0               
 10110                           	goto	i1l820
 10111  0D37  2DC6               	
 10112                           i1l2857:	
 10113  0D38                     	goto	i1l820
 10114  0D38  2DC6               	
 10115                           i1l819:	
 10116  0D39                     	line	23
 10117                           	
 10118                           i1l2859:	
 10119  0D39                     	movlw	low(096h)
 10120  0D39  3096               	movwf	(??i1___xxtofl+0)+0
 10121  0D3A  00F4               	movf	(??i1___xxtofl+0)+0,w
 10122  0D3B  0874               	movwf	(i1___xxtofl@exp)
 10123  0D3C  00F9               	line	24
 10124                           	goto	i1l2863
 10125  0D3D  2D4C               	
 10126                           i1l822:	
 10127  0D3E                     	line	25
 10128                           	
 10129                           i1l2861:	
 10130  0D3E                     	movlw	low(01h)
 10131  0D3E  3001               	movwf	(??i1___xxtofl+0)+0
 10132  0D3F  00F4               	movf	(??i1___xxtofl+0)+0,w
 10133  0D40  0874               	addwf	(i1___xxtofl@exp),f
 10134  0D41  07F9               	line	26
 10135                           	movlw	01h
 10136  0D42  3001               u390_25:
 10137  0D43                     	clrc
 10138  0D43  1003               	rrf	(i1___xxtofl@arg+3),f
 10139  0D44  0CFD               	rrf	(i1___xxtofl@arg+2),f
 10140  0D45  0CFC               	rrf	(i1___xxtofl@arg+1),f
 10141  0D46  0CFB               	rrf	(i1___xxtofl@arg),f
 10142  0D47  0CFA               	addlw	-1
 10143  0D48  3EFF               	skipz
 10144  0D49  1D03               	goto	u390_25
 10145  0D4A  2D43               
 10146                           	goto	i1l2863
 10147  0D4B  2D4C               	line	27
 10148                           	
 10149                           i1l821:	
 10150  0D4C                     	line	24
 10151                           	
 10152                           i1l2863:	
 10153  0D4C                     	movlw	high highword(0FE000000h)
 10154  0D4C  30FE               	andwf	(i1___xxtofl@arg+3),w
 10155  0D4D  057D               	btfss	status,2
 10156  0D4E  1D03               	goto	u391_21
 10157  0D4F  2D51               	goto	u391_20
 10158  0D50  2D52               u391_21:
 10159  0D51                     	goto	i1l2861
 10160  0D51  2D3E               u391_20:
 10161  0D52                     	goto	i1l824
 10162  0D52  2D6F               	
 10163                           i1l823:	
 10164  0D53                     	line	28
 10165                           	goto	i1l824
 10166  0D53  2D6F               	
 10167                           i1l825:	
 10168  0D54                     	line	29
 10169                           	
 10170                           i1l2865:	
 10171  0D54                     	movlw	low(01h)
 10172  0D54  3001               	movwf	(??i1___xxtofl+0)+0
 10173  0D55  00F4               	movf	(??i1___xxtofl+0)+0,w
 10174  0D56  0874               	addwf	(i1___xxtofl@exp),f
 10175  0D57  07F9               	line	30
 10176                           	
 10177                           i1l2867:	
 10178  0D58                     	movlw	01h
 10179  0D58  3001               	addwf	(i1___xxtofl@arg),f
 10180  0D59  07FA               	movlw	0
 10181  0D5A  3000               	skipnc
 10182  0D5B  1803               movlw 1
 10183  0D5C  3001               	addwf	(i1___xxtofl@arg+1),f
 10184  0D5D  07FB               	movlw	0
 10185  0D5E  3000               	skipnc
 10186  0D5F  1803               movlw 1
 10187  0D60  3001               	addwf	(i1___xxtofl@arg+2),f
 10188  0D61  07FC               	movlw	0
 10189  0D62  3000               	skipnc
 10190  0D63  1803               movlw 1
 10191  0D64  3001               	addwf	(i1___xxtofl@arg+3),f
 10192  0D65  07FD               	line	31
 10193                           	
 10194                           i1l2869:	
 10195  0D66                     	movlw	01h
 10196  0D66  3001               u392_25:
 10197  0D67                     	clrc
 10198  0D67  1003               	rrf	(i1___xxtofl@arg+3),f
 10199  0D68  0CFD               	rrf	(i1___xxtofl@arg+2),f
 10200  0D69  0CFC               	rrf	(i1___xxtofl@arg+1),f
 10201  0D6A  0CFB               	rrf	(i1___xxtofl@arg),f
 10202  0D6B  0CFA               	addlw	-1
 10203  0D6C  3EFF               	skipz
 10204  0D6D  1D03               	goto	u392_25
 10205  0D6E  2D67               
 10206                           	line	32
 10207                           	
 10208                           i1l824:	
 10209  0D6F                     	line	28
 10210                           	movlw	high highword(0FF000000h)
 10211  0D6F  30FF               	andwf	(i1___xxtofl@arg+3),w
 10212  0D70  057D               	btfss	status,2
 10213  0D71  1D03               	goto	u393_21
 10214  0D72  2D74               	goto	u393_20
 10215  0D73  2D75               u393_21:
 10216  0D74                     	goto	i1l2865
 10217  0D74  2D54               u393_20:
 10218  0D75                     	goto	i1l2873
 10219  0D75  2D83               	
 10220                           i1l826:	
 10221  0D76                     	line	33
 10222                           	goto	i1l2873
 10223  0D76  2D83               	
 10224                           i1l828:	
 10225  0D77                     	line	34
 10226                           	
 10227                           i1l2871:	
 10228  0D77                     	movlw	01h
 10229  0D77  3001               	subwf	(i1___xxtofl@exp),f
 10230  0D78  02F9               	line	35
 10231                           	movlw	01h
 10232  0D79  3001               	movwf	(??i1___xxtofl+0)+0
 10233  0D7A  00F4               u394_25:
 10234  0D7B                     	clrc
 10235  0D7B  1003               	rlf	(i1___xxtofl@arg),f
 10236  0D7C  0DFA               	rlf	(i1___xxtofl@arg+1),f
 10237  0D7D  0DFB               	rlf	(i1___xxtofl@arg+2),f
 10238  0D7E  0DFC               	rlf	(i1___xxtofl@arg+3),f
 10239  0D7F  0DFD               	decfsz	(??i1___xxtofl+0)+0
 10240  0D80  0BF4               	goto	u394_25
 10241  0D81  2D7B               	goto	i1l2873
 10242  0D82  2D83               	line	36
 10243                           	
 10244                           i1l827:	
 10245  0D83                     	line	33
 10246                           	
 10247                           i1l2873:	
 10248  0D83                     	btfsc	(i1___xxtofl@arg+2),(23)&7
 10249  0D83  1BFC               	goto	u395_21
 10250  0D84  2D86               	goto	u395_20
 10251  0D85  2D87               u395_21:
 10252  0D86                     	goto	i1l831
 10253  0D86  2D8E               u395_20:
 10254  0D87                     	
 10255                           i1l2875:	
 10256  0D87                     	movlw	low(02h)
 10257  0D87  3002               	subwf	(i1___xxtofl@exp),w
 10258  0D88  0279               	skipnc
 10259  0D89  1803               	goto	u396_21
 10260  0D8A  2D8C               	goto	u396_20
 10261  0D8B  2D8D               u396_21:
 10262  0D8C                     	goto	i1l2871
 10263  0D8C  2D77               u396_20:
 10264  0D8D                     	goto	i1l831
 10265  0D8D  2D8E               	
 10266                           i1l830:	
 10267  0D8E                     	
 10268                           i1l831:	
 10269  0D8E                     	line	37
 10270                           	btfsc	(i1___xxtofl@exp),(0)&7
 10271  0D8E  1879               	goto	u397_21
 10272  0D8F  2D91               	goto	u397_20
 10273  0D90  2D92               u397_21:
 10274  0D91                     	goto	i1l832
 10275  0D91  2D9A               u397_20:
 10276  0D92                     	line	38
 10277                           	
 10278                           i1l2877:	
 10279  0D92                     	movlw	0FFh
 10280  0D92  30FF               	andwf	(i1___xxtofl@arg),f
 10281  0D93  05FA               	movlw	0FFh
 10282  0D94  30FF               	andwf	(i1___xxtofl@arg+1),f
 10283  0D95  05FB               	movlw	07Fh
 10284  0D96  307F               	andwf	(i1___xxtofl@arg+2),f
 10285  0D97  05FC               	movlw	0FFh
 10286  0D98  30FF               	andwf	(i1___xxtofl@arg+3),f
 10287  0D99  05FD               	
 10288                           i1l832:	
 10289  0D9A                     	line	39
 10290                           	clrc
 10291  0D9A  1003               	rrf	(i1___xxtofl@exp),f
 10292  0D9B  0CF9               
 10293                           	line	40
 10294                           	
 10295                           i1l2879:	
 10296  0D9C                     	movf	(i1___xxtofl@exp),w
 10297  0D9C  0879               	movwf	(??i1___xxtofl+0)+0
 10298  0D9D  00F4               	clrf	(??i1___xxtofl+0)+0+1
 10299  0D9E  01F5               	clrf	(??i1___xxtofl+0)+0+2
 10300  0D9F  01F6               	clrf	(??i1___xxtofl+0)+0+3
 10301  0DA0  01F7               	movlw	018h
 10302  0DA1  3018               u398_25:
 10303  0DA2                     	clrc
 10304  0DA2  1003               	rlf	(??i1___xxtofl+0)+0,f
 10305  0DA3  0DF4               	rlf	(??i1___xxtofl+0)+1,f
 10306  0DA4  0DF5               	rlf	(??i1___xxtofl+0)+2,f
 10307  0DA5  0DF6               	rlf	(??i1___xxtofl+0)+3,f
 10308  0DA6  0DF7               u398_20:
 10309  0DA7                     	addlw	-1
 10310  0DA7  3EFF               	skipz
 10311  0DA8  1D03               	goto	u398_25
 10312  0DA9  2DA2               	movf	0+(??i1___xxtofl+0)+0,w
 10313  0DAA  0874               	iorwf	(i1___xxtofl@arg),f
 10314  0DAB  04FA               	movf	1+(??i1___xxtofl+0)+0,w
 10315  0DAC  0875               	iorwf	(i1___xxtofl@arg+1),f
 10316  0DAD  04FB               	movf	2+(??i1___xxtofl+0)+0,w
 10317  0DAE  0876               	iorwf	(i1___xxtofl@arg+2),f
 10318  0DAF  04FC               	movf	3+(??i1___xxtofl+0)+0,w
 10319  0DB0  0877               	iorwf	(i1___xxtofl@arg+3),f
 10320  0DB1  04FD               	line	41
 10321                           	
 10322                           i1l2881:	
 10323  0DB2                     	movf	((i1___xxtofl@sign)),w
 10324  0DB2  0878               	btfsc	status,2
 10325  0DB3  1903               	goto	u399_21
 10326  0DB4  2DB6               	goto	u399_20
 10327  0DB5  2DB7               u399_21:
 10328  0DB6                     	goto	i1l2887
 10329  0DB6  2DBD               u399_20:
 10330  0DB7                     	
 10331                           i1l2883:	
 10332  0DB7                     	btfss	(i1___xxtofl@val+3),7
 10333  0DB7  1FF3               	goto	u400_21
 10334  0DB8  2DBA               	goto	u400_20
 10335  0DB9  2DBB               u400_21:
 10336  0DBA                     	goto	i1l2887
 10337  0DBA  2DBD               u400_20:
 10338  0DBB                     	line	42
 10339                           	
 10340                           i1l2885:	
 10341  0DBB                     	bsf	(i1___xxtofl@arg)+(31/8),(31)&7
 10342  0DBB  17FD               	goto	i1l2887
 10343  0DBC  2DBD               	
 10344                           i1l833:	
 10345  0DBD                     	line	43
 10346                           	
 10347                           i1l2887:	
 10348  0DBD                     	movf	(i1___xxtofl@arg+3),w
 10349  0DBD  087D               	movwf	(?i1___xxtofl+3)
 10350  0DBE  00F3               	movf	(i1___xxtofl@arg+2),w
 10351  0DBF  087C               	movwf	(?i1___xxtofl+2)
 10352  0DC0  00F2               	movf	(i1___xxtofl@arg+1),w
 10353  0DC1  087B               	movwf	(?i1___xxtofl+1)
 10354  0DC2  00F1               	movf	(i1___xxtofl@arg),w
 10355  0DC3  087A               	movwf	(?i1___xxtofl)
 10356  0DC4  00F0               
 10357                           	goto	i1l820
 10358  0DC5  2DC6               	
 10359                           i1l2889:	
 10360  0DC6                     	line	44
 10361                           	
 10362                           i1l820:	
 10363  0DC6                     	return
 10364  0DC6  0008               	opt stack 0
 10365                           GLOBAL	__end_ofi1___xxtofl
 10366                           	__end_ofi1___xxtofl:
 10367  0DC7                     	signat	i1___xxtofl,92
 10368                           	global	i1___fltol
 10369                           
 10370 ;; *************** function i1___fltol *****************
 10371 ;; Defined at:
 10372 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 10373 ;; Parameters:    Size  Location     Type
 10374 ;;  f1              4   26[BANK0 ] unsigned char 
 10375 ;; Auto vars:     Size  Location     Type
 10376 ;;  __fltol         1   36[BANK0 ] unsigned char 
 10377 ;;  __fltol         1   35[BANK0 ] unsigned char 
 10378 ;; Return value:  Size  Location     Type
 10379 ;;                  4   26[BANK0 ] long 
 10380 ;; Registers used:
 10381 ;;		wreg, status,2, status,0
 10382 ;; Tracked objects:
 10383 ;;		On entry : 0/0
 10384 ;;		On exit  : 0/0
 10385 ;;		Unchanged: 0/0
 10386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10387 ;;      Params:         0       4       0       0       0
 10388 ;;      Locals:         0       2       0       0       0
 10389 ;;      Temps:          0       5       0       0       0
 10390 ;;      Totals:         0      11       0       0       0
 10391 ;;Total ram usage:       11 bytes
 10392 ;; Hardware stack levels used:    1
 10393 ;; This function calls:
 10394 ;;		Nothing
 10395 ;; This function is called by:
 10396 ;;		i1_temperaturaLer
 10397 ;; This function uses a non-reentrant model
 10398 ;;
 10399                           psect	text39,local,class=CODE,delta=2,merge=1,group=0
 10400                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 10401                           	line	43
 10402                           global __ptext39
 10403                           __ptext39:	;psect for function i1___fltol
 10404  0B2F                     psect	text39
 10405                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 10406                           	line	43
 10407                           	global	__size_ofi1___fltol
 10408                           	__size_ofi1___fltol	equ	__end_ofi1___fltol-i1___fltol
 10409  009C                     	
 10410                           i1___fltol:	
 10411  0B2F                     ;incstack = 0
 10412                           	opt	stack 0
 10413                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
 10414                           	line	47
 10415                           	
 10416                           i1l2671:	
 10417  0B2F                     	bcf	status, 5	;RP0=0, select bank0
 10418  0B2F  1283               	bcf	status, 6	;RP1=0, select bank0
 10419  0B30  1303               	movf	(i1___fltol@f1),w
 10420  0B31  083A               	movwf	(??i1___fltol+0)+0
 10421  0B32  00BE               	movf	(i1___fltol@f1+1),w
 10422  0B33  083B               	movwf	((??i1___fltol+0)+0+1)
 10423  0B34  00BF               	movf	(i1___fltol@f1+2),w
 10424  0B35  083C               	movwf	((??i1___fltol+0)+0+2)
 10425  0B36  00C0               	movf	(i1___fltol@f1+3),w
 10426  0B37  083D               	movwf	((??i1___fltol+0)+0+3)
 10427  0B38  00C1               	clrc
 10428  0B39  1003               	rlf	(??i1___fltol+0)+2,w
 10429  0B3A  0D40               	rlf	(??i1___fltol+0)+3,w
 10430  0B3B  0D41               	movwf	(??i1___fltol+4)+0
 10431  0B3C  00C2               	movf	(??i1___fltol+4)+0,w
 10432  0B3D  0842               	movwf	(i1___fltol@exp1)
 10433  0B3E  00C4               	movf	(((i1___fltol@exp1))),w
 10434  0B3F  0844               	btfss	status,2
 10435  0B40  1D03               	goto	u340_21
 10436  0B41  2B43               	goto	u340_20
 10437  0B42  2B44               u340_21:
 10438  0B43                     	goto	i1l2677
 10439  0B43  2B4E               u340_20:
 10440  0B44                     	line	48
 10441                           	
 10442                           i1l2673:	
 10443  0B44                     	movlw	high highword(0)
 10444  0B44  3000               	movwf	(?i1___fltol+3)
 10445  0B45  00BD               	movlw	low highword(0)
 10446  0B46  3000               	movwf	(?i1___fltol+2)
 10447  0B47  00BC               	movlw	high(0)
 10448  0B48  3000               	movwf	(?i1___fltol+1)
 10449  0B49  00BB               	movlw	low(0)
 10450  0B4A  3000               	movwf	(?i1___fltol)
 10451  0B4B  00BA               
 10452                           	goto	i1l596
 10453  0B4C  2BCA               	
 10454                           i1l2675:	
 10455  0B4D                     	goto	i1l596
 10456  0B4D  2BCA               	
 10457                           i1l595:	
 10458  0B4E                     	line	49
 10459                           	
 10460                           i1l2677:	
 10461  0B4E                     	movf	(i1___fltol@f1),w
 10462  0B4E  083A               	movwf	(??i1___fltol+0)+0
 10463  0B4F  00BE               	movf	(i1___fltol@f1+1),w
 10464  0B50  083B               	movwf	((??i1___fltol+0)+0+1)
 10465  0B51  00BF               	movf	(i1___fltol@f1+2),w
 10466  0B52  083C               	movwf	((??i1___fltol+0)+0+2)
 10467  0B53  00C0               	movf	(i1___fltol@f1+3),w
 10468  0B54  083D               	movwf	((??i1___fltol+0)+0+3)
 10469  0B55  00C1               	movlw	01Fh
 10470  0B56  301F               u341_25:
 10471  0B57                     	clrc
 10472  0B57  1003               	rrf	(??i1___fltol+0)+3,f
 10473  0B58  0CC1               	rrf	(??i1___fltol+0)+2,f
 10474  0B59  0CC0               	rrf	(??i1___fltol+0)+1,f
 10475  0B5A  0CBF               	rrf	(??i1___fltol+0)+0,f
 10476  0B5B  0CBE               u341_20:
 10477  0B5C                     	addlw	-1
 10478  0B5C  3EFF               	skipz
 10479  0B5D  1D03               	goto	u341_25
 10480  0B5E  2B57               	movf	0+(??i1___fltol+0)+0,w
 10481  0B5F  083E               	movwf	(??i1___fltol+4)+0
 10482  0B60  00C2               	movf	(??i1___fltol+4)+0,w
 10483  0B61  0842               	movwf	(i1___fltol@sign1)
 10484  0B62  00C3               	line	50
 10485                           	
 10486                           i1l2679:	
 10487  0B63                     	bsf	(i1___fltol@f1)+(23/8),(23)&7
 10488  0B63  17BC               	line	51
 10489                           	
 10490                           i1l2681:	
 10491  0B64                     	movlw	0FFh
 10492  0B64  30FF               	andwf	(i1___fltol@f1),f
 10493  0B65  05BA               	movlw	0FFh
 10494  0B66  30FF               	andwf	(i1___fltol@f1+1),f
 10495  0B67  05BB               	movlw	0FFh
 10496  0B68  30FF               	andwf	(i1___fltol@f1+2),f
 10497  0B69  05BC               	movlw	0
 10498  0B6A  3000               	andwf	(i1___fltol@f1+3),f
 10499  0B6B  05BD               	line	52
 10500                           	
 10501                           i1l2683:	
 10502  0B6C                     	movlw	096h
 10503  0B6C  3096               	subwf	(i1___fltol@exp1),f
 10504  0B6D  02C4               	line	53
 10505                           	
 10506                           i1l2685:	
 10507  0B6E                     	btfss	(i1___fltol@exp1),7
 10508  0B6E  1FC4               	goto	u342_21
 10509  0B6F  2B71               	goto	u342_20
 10510  0B70  2B72               u342_21:
 10511  0B71                     	goto	i1l2695
 10512  0B71  2B97               u342_20:
 10513  0B72                     	line	54
 10514                           	
 10515                           i1l2687:	
 10516  0B72                     	movf	(i1___fltol@exp1),w
 10517  0B72  0844               	xorlw	80h
 10518  0B73  3A80               	addlw	-((-23)^80h)
 10519  0B74  3E97               	skipnc
 10520  0B75  1803               	goto	u343_21
 10521  0B76  2B78               	goto	u343_20
 10522  0B77  2B79               u343_21:
 10523  0B78                     	goto	i1l2693
 10524  0B78  2B84               u343_20:
 10525  0B79                     	line	55
 10526                           	
 10527                           i1l2689:	
 10528  0B79                     	movlw	high highword(0)
 10529  0B79  3000               	movwf	(?i1___fltol+3)
 10530  0B7A  00BD               	movlw	low highword(0)
 10531  0B7B  3000               	movwf	(?i1___fltol+2)
 10532  0B7C  00BC               	movlw	high(0)
 10533  0B7D  3000               	movwf	(?i1___fltol+1)
 10534  0B7E  00BB               	movlw	low(0)
 10535  0B7F  3000               	movwf	(?i1___fltol)
 10536  0B80  00BA               
 10537                           	goto	i1l596
 10538  0B81  2BCA               	
 10539                           i1l2691:	
 10540  0B82                     	goto	i1l596
 10541  0B82  2BCA               	
 10542                           i1l598:	
 10543  0B83                     	goto	i1l2693
 10544  0B83  2B84               	line	56
 10545                           	
 10546                           i1l599:	
 10547  0B84                     	line	57
 10548                           	
 10549                           i1l2693:	
 10550  0B84                     	movlw	01h
 10551  0B84  3001               u344_25:
 10552  0B85                     	clrc
 10553  0B85  1003               	rrf	(i1___fltol@f1+3),f
 10554  0B86  0CBD               	rrf	(i1___fltol@f1+2),f
 10555  0B87  0CBC               	rrf	(i1___fltol@f1+1),f
 10556  0B88  0CBB               	rrf	(i1___fltol@f1),f
 10557  0B89  0CBA               	addlw	-1
 10558  0B8A  3EFF               	skipz
 10559  0B8B  1D03               	goto	u344_25
 10560  0B8C  2B85               
 10561                           	line	58
 10562                           	movlw	low(01h)
 10563  0B8D  3001               	movwf	(??i1___fltol+0)+0
 10564  0B8E  00BE               	movf	(??i1___fltol+0)+0,w
 10565  0B8F  083E               	addwf	(i1___fltol@exp1),f
 10566  0B90  07C4               	btfss	status,2
 10567  0B91  1D03               	goto	u345_21
 10568  0B92  2B94               	goto	u345_20
 10569  0B93  2B95               u345_21:
 10570  0B94                     	goto	i1l2693
 10571  0B94  2B84               u345_20:
 10572  0B95                     	goto	i1l2703
 10573  0B95  2BBA               	
 10574                           i1l600:	
 10575  0B96                     	line	59
 10576                           	goto	i1l2703
 10577  0B96  2BBA               	
 10578                           i1l597:	
 10579  0B97                     	line	60
 10580                           	
 10581                           i1l2695:	
 10582  0B97                     	movlw	low(020h)
 10583  0B97  3020               	subwf	(i1___fltol@exp1),w
 10584  0B98  0244               	skipc
 10585  0B99  1C03               	goto	u346_21
 10586  0B9A  2B9C               	goto	u346_20
 10587  0B9B  2B9D               u346_21:
 10588  0B9C                     	goto	i1l603
 10589  0B9C  2BB3               u346_20:
 10590  0B9D                     	line	61
 10591                           	
 10592                           i1l2697:	
 10593  0B9D                     	movlw	high highword(0)
 10594  0B9D  3000               	movwf	(?i1___fltol+3)
 10595  0B9E  00BD               	movlw	low highword(0)
 10596  0B9F  3000               	movwf	(?i1___fltol+2)
 10597  0BA0  00BC               	movlw	high(0)
 10598  0BA1  3000               	movwf	(?i1___fltol+1)
 10599  0BA2  00BB               	movlw	low(0)
 10600  0BA3  3000               	movwf	(?i1___fltol)
 10601  0BA4  00BA               
 10602                           	goto	i1l596
 10603  0BA5  2BCA               	
 10604                           i1l2699:	
 10605  0BA6                     	goto	i1l596
 10606  0BA6  2BCA               	
 10607                           i1l602:	
 10608  0BA7                     	line	62
 10609                           	goto	i1l603
 10610  0BA7  2BB3               	
 10611                           i1l604:	
 10612  0BA8                     	line	63
 10613                           	
 10614                           i1l2701:	
 10615  0BA8                     	movlw	01h
 10616  0BA8  3001               	movwf	(??i1___fltol+0)+0
 10617  0BA9  00BE               u347_25:
 10618  0BAA                     	clrc
 10619  0BAA  1003               	rlf	(i1___fltol@f1),f
 10620  0BAB  0DBA               	rlf	(i1___fltol@f1+1),f
 10621  0BAC  0DBB               	rlf	(i1___fltol@f1+2),f
 10622  0BAD  0DBC               	rlf	(i1___fltol@f1+3),f
 10623  0BAE  0DBD               	decfsz	(??i1___fltol+0)+0
 10624  0BAF  0BBE               	goto	u347_25
 10625  0BB0  2BAA               	line	64
 10626                           	movlw	01h
 10627  0BB1  3001               	subwf	(i1___fltol@exp1),f
 10628  0BB2  02C4               	line	65
 10629                           	
 10630                           i1l603:	
 10631  0BB3                     	line	62
 10632                           	movf	((i1___fltol@exp1)),w
 10633  0BB3  0844               	btfss	status,2
 10634  0BB4  1D03               	goto	u348_21
 10635  0BB5  2BB7               	goto	u348_20
 10636  0BB6  2BB8               u348_21:
 10637  0BB7                     	goto	i1l2701
 10638  0BB7  2BA8               u348_20:
 10639  0BB8                     	goto	i1l2703
 10640  0BB8  2BBA               	
 10641                           i1l605:	
 10642  0BB9                     	goto	i1l2703
 10643  0BB9  2BBA               	line	66
 10644                           	
 10645                           i1l601:	
 10646  0BBA                     	line	67
 10647                           	
 10648                           i1l2703:	
 10649  0BBA                     	movf	((i1___fltol@sign1)),w
 10650  0BBA  0843               	btfsc	status,2
 10651  0BBB  1903               	goto	u349_21
 10652  0BBC  2BBE               	goto	u349_20
 10653  0BBD  2BBF               u349_21:
 10654  0BBE                     	goto	i1l606
 10655  0BBE  2BCA               u349_20:
 10656  0BBF                     	line	68
 10657                           	
 10658                           i1l2705:	
 10659  0BBF                     	comf	(i1___fltol@f1),f
 10660  0BBF  09BA               	comf	(i1___fltol@f1+1),f
 10661  0BC0  09BB               	comf	(i1___fltol@f1+2),f
 10662  0BC1  09BC               	comf	(i1___fltol@f1+3),f
 10663  0BC2  09BD               	incf	(i1___fltol@f1),f
 10664  0BC3  0ABA               	skipnz
 10665  0BC4  1903               	incf	(i1___fltol@f1+1),f
 10666  0BC5  0ABB               	skipnz
 10667  0BC6  1903               	incf	(i1___fltol@f1+2),f
 10668  0BC7  0ABC               	skipnz
 10669  0BC8  1903               	incf	(i1___fltol@f1+3),f
 10670  0BC9  0ABD               	
 10671                           i1l606:	
 10672  0BCA                     	line	69
 10673                           	line	70
 10674                           	
 10675                           i1l596:	
 10676  0BCA                     	return
 10677  0BCA  0008               	opt stack 0
 10678                           GLOBAL	__end_ofi1___fltol
 10679                           	__end_ofi1___fltol:
 10680  0BCB                     	signat	i1___fltol,92
 10681                           	global	i1___flmul
 10682                           
 10683 ;; *************** function i1___flmul *****************
 10684 ;; Defined at:
 10685 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 10686 ;; Parameters:    Size  Location     Type
 10687 ;;  b               4    0[BANK0 ] long 
 10688 ;;  a               4    4[BANK0 ] long 
 10689 ;; Auto vars:     Size  Location     Type
 10690 ;;  __flmul         4   20[BANK0 ] struct .
 10691 ;;  __flmul         4   14[BANK0 ] unsigned long 
 10692 ;;  __flmul         2   24[BANK0 ] struct .
 10693 ;;  __flmul         1   19[BANK0 ] unsigned char 
 10694 ;;  __flmul         1   18[BANK0 ] unsigned char 
 10695 ;;  __flmul         1   13[BANK0 ] unsigned char 
 10696 ;; Return value:  Size  Location     Type
 10697 ;;                  4    0[BANK0 ] unsigned char 
 10698 ;; Registers used:
 10699 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10700 ;; Tracked objects:
 10701 ;;		On entry : 0/0
 10702 ;;		On exit  : 0/0
 10703 ;;		Unchanged: 0/0
 10704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10705 ;;      Params:         0       8       0       0       0
 10706 ;;      Locals:         0      13       0       0       0
 10707 ;;      Temps:          0       5       0       0       0
 10708 ;;      Totals:         0      26       0       0       0
 10709 ;;Total ram usage:       26 bytes
 10710 ;; Hardware stack levels used:    1
 10711 ;; Hardware stack levels required when called:    1
 10712 ;; This function calls:
 10713 ;;		i1__Umul8_16
 10714 ;; This function is called by:
 10715 ;;		i1_temperaturaLer
 10716 ;; This function uses a non-reentrant model
 10717 ;;
 10718                           psect	text40,local,class=CODE,delta=2,merge=1,group=0
 10719                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 10720                           	line	8
 10721                           global __ptext40
 10722                           __ptext40:	;psect for function i1___flmul
 10723  039E                     psect	text40
 10724                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 10725                           	line	8
 10726                           	global	__size_ofi1___flmul
 10727                           	__size_ofi1___flmul	equ	__end_ofi1___flmul-i1___flmul
 10728  0375                     	
 10729                           i1___flmul:	
 10730  039E                     ;incstack = 0
 10731 ;; hardware stack exceeded
 10732                           	opt	stack 0
 10733                           ; Regs used in i1___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10734                           	line	17
 10735                           	
 10736                           i1l2707:	
 10737  039E                     	bcf	status, 5	;RP0=0, select bank0
 10738  039E  1283               	bcf	status, 6	;RP1=0, select bank0
 10739  039F  1303               	movf	0+(i1___flmul@b)+03h,w
 10740  03A0  0823               	andlw	080h
 10741  03A1  3980               	movwf	(??i1___flmul+0)+0
 10742  03A2  00A8               	movf	(??i1___flmul+0)+0,w
 10743  03A3  0828               	movwf	(i1___flmul@sign)
 10744  03A4  00AD               	line	18
 10745                           	
 10746                           i1l2709:	
 10747  03A5                     	movf	0+(i1___flmul@b)+03h,w
 10748  03A5  0823               	movwf	(??i1___flmul+0)+0
 10749  03A6  00A8               	addwf	(??i1___flmul+0)+0,w
 10750  03A7  0728               	movwf	(??i1___flmul+1)+0
 10751  03A8  00A9               	movf	(??i1___flmul+1)+0,w
 10752  03A9  0829               	movwf	(i1___flmul@bexp)
 10753  03AA  00B3               	line	19
 10754                           	
 10755                           i1l2711:	
 10756  03AB                     	btfss	0+(i1___flmul@b)+02h,(7)&7
 10757  03AB  1FA2               	goto	u350_21
 10758  03AC  2BAE               	goto	u350_20
 10759  03AD  2BAF               u350_21:
 10760  03AE                     	goto	i1l2715
 10761  03AE  2BB1               u350_20:
 10762  03AF                     	line	20
 10763                           	
 10764                           i1l2713:	
 10765  03AF                     	bsf	(i1___flmul@bexp)+(0/8),(0)&7
 10766  03AF  1433               	goto	i1l2715
 10767  03B0  2BB1               	line	21
 10768                           	
 10769                           i1l788:	
 10770  03B1                     	line	24
 10771                           	
 10772                           i1l2715:	
 10773  03B1                     	movf	((i1___flmul@bexp)),w
 10774  03B1  0833               	btfsc	status,2
 10775  03B2  1903               	goto	u351_21
 10776  03B3  2BB5               	goto	u351_20
 10777  03B4  2BB6               u351_21:
 10778  03B5                     	goto	i1l2723
 10779  03B5  2BC6               u351_20:
 10780  03B6                     	line	26
 10781                           	
 10782                           i1l2717:	
 10783  03B6                     		incf	((i1___flmul@bexp)),w
 10784  03B6  0A33               	btfss	status,2
 10785  03B7  1D03               	goto	u352_21
 10786  03B8  2BBA               	goto	u352_20
 10787  03B9  2BBB               u352_21:
 10788  03BA                     	goto	i1l2721
 10789  03BA  2BC4               u352_20:
 10790  03BB                     	line	28
 10791                           	
 10792                           i1l2719:	
 10793  03BB                     	movlw	0x0
 10794  03BB  3000               	movwf	(i1___flmul@b+3)
 10795  03BC  00A3               	movlw	0x0
 10796  03BD  3000               	movwf	(i1___flmul@b+2)
 10797  03BE  00A2               	movlw	0x0
 10798  03BF  3000               	movwf	(i1___flmul@b+1)
 10799  03C0  00A1               	movlw	0x0
 10800  03C1  3000               	movwf	(i1___flmul@b)
 10801  03C2  00A0               
 10802                           	goto	i1l2721
 10803  03C3  2BC4               	line	29
 10804                           	
 10805                           i1l790:	
 10806  03C4                     	line	31
 10807                           	
 10808                           i1l2721:	
 10809  03C4                     	bsf	(i1___flmul@b)+(23/8),(23)&7
 10810  03C4  17A2               	line	33
 10811                           	goto	i1l2725
 10812  03C5  2BCF               	line	34
 10813                           	
 10814                           i1l789:	
 10815  03C6                     	line	36
 10816                           	
 10817                           i1l2723:	
 10818  03C6                     	movlw	0x0
 10819  03C6  3000               	movwf	(i1___flmul@b+3)
 10820  03C7  00A3               	movlw	0x0
 10821  03C8  3000               	movwf	(i1___flmul@b+2)
 10822  03C9  00A2               	movlw	0x0
 10823  03CA  3000               	movwf	(i1___flmul@b+1)
 10824  03CB  00A1               	movlw	0x0
 10825  03CC  3000               	movwf	(i1___flmul@b)
 10826  03CD  00A0               
 10827                           	goto	i1l2725
 10828  03CE  2BCF               	line	37
 10829                           	
 10830                           i1l791:	
 10831  03CF                     	line	39
 10832                           	
 10833                           i1l2725:	
 10834  03CF                     	movf	0+(i1___flmul@a)+03h,w
 10835  03CF  0827               	andlw	080h
 10836  03D0  3980               	movwf	(??i1___flmul+0)+0
 10837  03D1  00A8               	movf	(??i1___flmul+0)+0,w
 10838  03D2  0828               	xorwf	(i1___flmul@sign),f
 10839  03D3  06AD               	line	40
 10840                           	
 10841                           i1l2727:	
 10842  03D4                     	movf	0+(i1___flmul@a)+03h,w
 10843  03D4  0827               	movwf	(??i1___flmul+0)+0
 10844  03D5  00A8               	addwf	(??i1___flmul+0)+0,w
 10845  03D6  0728               	movwf	(??i1___flmul+1)+0
 10846  03D7  00A9               	movf	(??i1___flmul+1)+0,w
 10847  03D8  0829               	movwf	(i1___flmul@aexp)
 10848  03D9  00B2               	line	41
 10849                           	
 10850                           i1l2729:	
 10851  03DA                     	btfss	0+(i1___flmul@a)+02h,(7)&7
 10852  03DA  1FA6               	goto	u353_21
 10853  03DB  2BDD               	goto	u353_20
 10854  03DC  2BDE               u353_21:
 10855  03DD                     	goto	i1l2733
 10856  03DD  2BE0               u353_20:
 10857  03DE                     	line	42
 10858                           	
 10859                           i1l2731:	
 10860  03DE                     	bsf	(i1___flmul@aexp)+(0/8),(0)&7
 10861  03DE  1432               	goto	i1l2733
 10862  03DF  2BE0               	line	43
 10863                           	
 10864                           i1l792:	
 10865  03E0                     	line	45
 10866                           	
 10867                           i1l2733:	
 10868  03E0                     	movf	((i1___flmul@aexp)),w
 10869  03E0  0832               	btfsc	status,2
 10870  03E1  1903               	goto	u354_21
 10871  03E2  2BE4               	goto	u354_20
 10872  03E3  2BE5               u354_21:
 10873  03E4                     	goto	i1l2741
 10874  03E4  2BF5               u354_20:
 10875  03E5                     	line	48
 10876                           	
 10877                           i1l2735:	
 10878  03E5                     		incf	((i1___flmul@aexp)),w
 10879  03E5  0A32               	btfss	status,2
 10880  03E6  1D03               	goto	u355_21
 10881  03E7  2BE9               	goto	u355_20
 10882  03E8  2BEA               u355_21:
 10883  03E9                     	goto	i1l2739
 10884  03E9  2BF3               u355_20:
 10885  03EA                     	line	50
 10886                           	
 10887                           i1l2737:	
 10888  03EA                     	movlw	0x0
 10889  03EA  3000               	movwf	(i1___flmul@a+3)
 10890  03EB  00A7               	movlw	0x0
 10891  03EC  3000               	movwf	(i1___flmul@a+2)
 10892  03ED  00A6               	movlw	0x0
 10893  03EE  3000               	movwf	(i1___flmul@a+1)
 10894  03EF  00A5               	movlw	0x0
 10895  03F0  3000               	movwf	(i1___flmul@a)
 10896  03F1  00A4               
 10897                           	goto	i1l2739
 10898  03F2  2BF3               	line	51
 10899                           	
 10900                           i1l794:	
 10901  03F3                     	line	53
 10902                           	
 10903                           i1l2739:	
 10904  03F3                     	bsf	(i1___flmul@a)+(23/8),(23)&7
 10905  03F3  17A6               	line	54
 10906                           	goto	i1l2743
 10907  03F4  2BFE               	line	55
 10908                           	
 10909                           i1l793:	
 10910  03F5                     	line	57
 10911                           	
 10912                           i1l2741:	
 10913  03F5                     	movlw	0x0
 10914  03F5  3000               	movwf	(i1___flmul@a+3)
 10915  03F6  00A7               	movlw	0x0
 10916  03F7  3000               	movwf	(i1___flmul@a+2)
 10917  03F8  00A6               	movlw	0x0
 10918  03F9  3000               	movwf	(i1___flmul@a+1)
 10919  03FA  00A5               	movlw	0x0
 10920  03FB  3000               	movwf	(i1___flmul@a)
 10921  03FC  00A4               
 10922                           	goto	i1l2743
 10923  03FD  2BFE               	line	58
 10924                           	
 10925                           i1l795:	
 10926  03FE                     	line	65
 10927                           	
 10928                           i1l2743:	
 10929  03FE                     	movf	((i1___flmul@aexp)),w
 10930  03FE  0832               	btfsc	status,2
 10931  03FF  1903               	goto	u356_21
 10932  0400  2C02               	goto	u356_20
 10933  0401  2C03               u356_21:
 10934  0402                     	goto	i1l2747
 10935  0402  2C09               u356_20:
 10936  0403                     	
 10937                           i1l2745:	
 10938  0403                     	movf	((i1___flmul@bexp)),w
 10939  0403  0833               	btfss	status,2
 10940  0404  1D03               	goto	u357_21
 10941  0405  2C07               	goto	u357_20
 10942  0406  2C08               u357_21:
 10943  0407                     	goto	i1l2751
 10944  0407  2C13               u357_20:
 10945  0408                     	goto	i1l2747
 10946  0408  2C09               	
 10947                           i1l798:	
 10948  0409                     	line	66
 10949                           	
 10950                           i1l2747:	
 10951  0409                     	movlw	0x0
 10952  0409  3000               	movwf	(?i1___flmul+3)
 10953  040A  00A3               	movlw	0x0
 10954  040B  3000               	movwf	(?i1___flmul+2)
 10955  040C  00A2               	movlw	0x0
 10956  040D  3000               	movwf	(?i1___flmul+1)
 10957  040E  00A1               	movlw	0x0
 10958  040F  3000               	movwf	(?i1___flmul)
 10959  0410  00A0               
 10960                           	goto	i1l799
 10961  0411  2F12               	
 10962                           i1l2749:	
 10963  0412                     	goto	i1l799
 10964  0412  2F12               	line	67
 10965                           	
 10966                           i1l796:	
 10967  0413                     	line	119
 10968                           	
 10969                           i1l2751:	
 10970  0413                     	movf	(i1___flmul@b),w
 10971  0413  0820               	movwf	(??i1___flmul+0)+0
 10972  0414  00A8               	movf	(??i1___flmul+0)+0,w
 10973  0415  0828               	movwf	(i1__Umul8_16@multiplicand)
 10974  0416  00F0               	movf	0+(i1___flmul@a)+02h,w
 10975  0417  0826               	fcall	i1__Umul8_16
 10976  0418  160A  118A  252C  120A  118A  	movf	(1+(?i1__Umul8_16)),w
 10977  041D  0871               	bcf	status, 5	;RP0=0, select bank0
 10978  041E  1283               	bcf	status, 6	;RP1=0, select bank0
 10979  041F  1303               	movwf	(i1___flmul@temp+1)
 10980  0420  00B9               	movf	(0+(?i1__Umul8_16)),w
 10981  0421  0870               	movwf	(i1___flmul@temp)
 10982  0422  00B8               	line	120
 10983                           	
 10984                           i1l2753:	
 10985  0423                     	movf	(i1___flmul@temp),w
 10986  0423  0838               	movwf	(??i1___flmul+0)+0
 10987  0424  00A8               	clrf	(??i1___flmul+0)+0+1
 10988  0425  01A9               	clrf	(??i1___flmul+0)+0+2
 10989  0426  01AA               	clrf	(??i1___flmul+0)+0+3
 10990  0427  01AB               	movf	3+(??i1___flmul+0)+0,w
 10991  0428  082B               	movwf	(i1___flmul@grs+3)
 10992  0429  00B1               	movf	2+(??i1___flmul+0)+0,w
 10993  042A  082A               	movwf	(i1___flmul@grs+2)
 10994  042B  00B0               	movf	1+(??i1___flmul+0)+0,w
 10995  042C  0829               	movwf	(i1___flmul@grs+1)
 10996  042D  00AF               	movf	0+(??i1___flmul+0)+0,w
 10997  042E  0828               	movwf	(i1___flmul@grs)
 10998  042F  00AE               
 10999                           	line	121
 11000                           	
 11001                           i1l2755:	
 11002  0430                     	movf	0+(i1___flmul@temp)+01h,w
 11003  0430  0839               	movwf	(??i1___flmul+0)+0
 11004  0431  00A8               	clrf	(??i1___flmul+0)+0+1
 11005  0432  01A9               	clrf	(??i1___flmul+0)+0+2
 11006  0433  01AA               	clrf	(??i1___flmul+0)+0+3
 11007  0434  01AB               	movf	3+(??i1___flmul+0)+0,w
 11008  0435  082B               	movwf	(i1___flmul@prod+3)
 11009  0436  00B7               	movf	2+(??i1___flmul+0)+0,w
 11010  0437  082A               	movwf	(i1___flmul@prod+2)
 11011  0438  00B6               	movf	1+(??i1___flmul+0)+0,w
 11012  0439  0829               	movwf	(i1___flmul@prod+1)
 11013  043A  00B5               	movf	0+(??i1___flmul+0)+0,w
 11014  043B  0828               	movwf	(i1___flmul@prod)
 11015  043C  00B4               
 11016                           	line	122
 11017                           	movf	0+(i1___flmul@b)+01h,w
 11018  043D  0821               	movwf	(??i1___flmul+0)+0
 11019  043E  00A8               	movf	(??i1___flmul+0)+0,w
 11020  043F  0828               	movwf	(i1__Umul8_16@multiplicand)
 11021  0440  00F0               	movf	0+(i1___flmul@a)+01h,w
 11022  0441  0825               	fcall	i1__Umul8_16
 11023  0442  160A  118A  252C  120A  118A  	movf	(1+(?i1__Umul8_16)),w
 11024  0447  0871               	bcf	status, 5	;RP0=0, select bank0
 11025  0448  1283               	bcf	status, 6	;RP1=0, select bank0
 11026  0449  1303               	movwf	(i1___flmul@temp+1)
 11027  044A  00B9               	movf	(0+(?i1__Umul8_16)),w
 11028  044B  0870               	movwf	(i1___flmul@temp)
 11029  044C  00B8               	line	123
 11030                           	
 11031                           i1l2757:	
 11032  044D                     	movf	(i1___flmul@temp),w
 11033  044D  0838               	movwf	(??i1___flmul+0)+0
 11034  044E  00A8               	clrf	(??i1___flmul+0)+0+1
 11035  044F  01A9               	clrf	(??i1___flmul+0)+0+2
 11036  0450  01AA               	clrf	(??i1___flmul+0)+0+3
 11037  0451  01AB               	movf	0+(??i1___flmul+0)+0,w
 11038  0452  0828               	addwf	(i1___flmul@grs),f
 11039  0453  07AE               	movf	1+(??i1___flmul+0)+0,w
 11040  0454  0829               	clrz
 11041  0455  1103               	skipnc
 11042  0456  1803               	addlw	1
 11043  0457  3E01               	skipnz
 11044  0458  1903               	goto	u358_21
 11045  0459  2C5B               	addwf	(i1___flmul@grs+1),f
 11046  045A  07AF               u358_21:
 11047  045B                     	movf	2+(??i1___flmul+0)+0,w
 11048  045B  082A               	clrz
 11049  045C  1103               	skipnc
 11050  045D  1803               	addlw	1
 11051  045E  3E01               	skipnz
 11052  045F  1903               	goto	u358_22
 11053  0460  2C62               	addwf	(i1___flmul@grs+2),f
 11054  0461  07B0               u358_22:
 11055  0462                     	movf	3+(??i1___flmul+0)+0,w
 11056  0462  082B               	clrz
 11057  0463  1103               	skipnc
 11058  0464  1803               	addlw	1
 11059  0465  3E01               	skipnz
 11060  0466  1903               	goto	u358_23
 11061  0467  2C69               	addwf	(i1___flmul@grs+3),f
 11062  0468  07B1               u358_23:
 11063  0469                     
 11064                           	line	124
 11065                           	
 11066                           i1l2759:	
 11067  0469                     	movf	0+(i1___flmul@temp)+01h,w
 11068  0469  0839               	movwf	(??i1___flmul+0)+0
 11069  046A  00A8               	clrf	(??i1___flmul+0)+0+1
 11070  046B  01A9               	clrf	(??i1___flmul+0)+0+2
 11071  046C  01AA               	clrf	(??i1___flmul+0)+0+3
 11072  046D  01AB               	movf	0+(??i1___flmul+0)+0,w
 11073  046E  0828               	addwf	(i1___flmul@prod),f
 11074  046F  07B4               	movf	1+(??i1___flmul+0)+0,w
 11075  0470  0829               	clrz
 11076  0471  1103               	skipnc
 11077  0472  1803               	addlw	1
 11078  0473  3E01               	skipnz
 11079  0474  1903               	goto	u359_21
 11080  0475  2C77               	addwf	(i1___flmul@prod+1),f
 11081  0476  07B5               u359_21:
 11082  0477                     	movf	2+(??i1___flmul+0)+0,w
 11083  0477  082A               	clrz
 11084  0478  1103               	skipnc
 11085  0479  1803               	addlw	1
 11086  047A  3E01               	skipnz
 11087  047B  1903               	goto	u359_22
 11088  047C  2C7E               	addwf	(i1___flmul@prod+2),f
 11089  047D  07B6               u359_22:
 11090  047E                     	movf	3+(??i1___flmul+0)+0,w
 11091  047E  082B               	clrz
 11092  047F  1103               	skipnc
 11093  0480  1803               	addlw	1
 11094  0481  3E01               	skipnz
 11095  0482  1903               	goto	u359_23
 11096  0483  2C85               	addwf	(i1___flmul@prod+3),f
 11097  0484  07B7               u359_23:
 11098  0485                     
 11099                           	line	125
 11100                           	movf	0+(i1___flmul@b)+02h,w
 11101  0485  0822               	movwf	(??i1___flmul+0)+0
 11102  0486  00A8               	movf	(??i1___flmul+0)+0,w
 11103  0487  0828               	movwf	(i1__Umul8_16@multiplicand)
 11104  0488  00F0               	movf	(i1___flmul@a),w
 11105  0489  0824               	fcall	i1__Umul8_16
 11106  048A  160A  118A  252C  120A  118A  	movf	(1+(?i1__Umul8_16)),w
 11107  048F  0871               	bcf	status, 5	;RP0=0, select bank0
 11108  0490  1283               	bcf	status, 6	;RP1=0, select bank0
 11109  0491  1303               	movwf	(i1___flmul@temp+1)
 11110  0492  00B9               	movf	(0+(?i1__Umul8_16)),w
 11111  0493  0870               	movwf	(i1___flmul@temp)
 11112  0494  00B8               	line	126
 11113                           	
 11114                           i1l2761:	
 11115  0495                     	movf	(i1___flmul@temp),w
 11116  0495  0838               	movwf	(??i1___flmul+0)+0
 11117  0496  00A8               	clrf	(??i1___flmul+0)+0+1
 11118  0497  01A9               	clrf	(??i1___flmul+0)+0+2
 11119  0498  01AA               	clrf	(??i1___flmul+0)+0+3
 11120  0499  01AB               	movf	0+(??i1___flmul+0)+0,w
 11121  049A  0828               	addwf	(i1___flmul@grs),f
 11122  049B  07AE               	movf	1+(??i1___flmul+0)+0,w
 11123  049C  0829               	clrz
 11124  049D  1103               	skipnc
 11125  049E  1803               	addlw	1
 11126  049F  3E01               	skipnz
 11127  04A0  1903               	goto	u360_21
 11128  04A1  2CA3               	addwf	(i1___flmul@grs+1),f
 11129  04A2  07AF               u360_21:
 11130  04A3                     	movf	2+(??i1___flmul+0)+0,w
 11131  04A3  082A               	clrz
 11132  04A4  1103               	skipnc
 11133  04A5  1803               	addlw	1
 11134  04A6  3E01               	skipnz
 11135  04A7  1903               	goto	u360_22
 11136  04A8  2CAA               	addwf	(i1___flmul@grs+2),f
 11137  04A9  07B0               u360_22:
 11138  04AA                     	movf	3+(??i1___flmul+0)+0,w
 11139  04AA  082B               	clrz
 11140  04AB  1103               	skipnc
 11141  04AC  1803               	addlw	1
 11142  04AD  3E01               	skipnz
 11143  04AE  1903               	goto	u360_23
 11144  04AF  2CB1               	addwf	(i1___flmul@grs+3),f
 11145  04B0  07B1               u360_23:
 11146  04B1                     
 11147                           	line	127
 11148                           	
 11149                           i1l2763:	
 11150  04B1                     	movf	0+(i1___flmul@temp)+01h,w
 11151  04B1  0839               	movwf	(??i1___flmul+0)+0
 11152  04B2  00A8               	clrf	(??i1___flmul+0)+0+1
 11153  04B3  01A9               	clrf	(??i1___flmul+0)+0+2
 11154  04B4  01AA               	clrf	(??i1___flmul+0)+0+3
 11155  04B5  01AB               	movf	0+(??i1___flmul+0)+0,w
 11156  04B6  0828               	addwf	(i1___flmul@prod),f
 11157  04B7  07B4               	movf	1+(??i1___flmul+0)+0,w
 11158  04B8  0829               	clrz
 11159  04B9  1103               	skipnc
 11160  04BA  1803               	addlw	1
 11161  04BB  3E01               	skipnz
 11162  04BC  1903               	goto	u361_21
 11163  04BD  2CBF               	addwf	(i1___flmul@prod+1),f
 11164  04BE  07B5               u361_21:
 11165  04BF                     	movf	2+(??i1___flmul+0)+0,w
 11166  04BF  082A               	clrz
 11167  04C0  1103               	skipnc
 11168  04C1  1803               	addlw	1
 11169  04C2  3E01               	skipnz
 11170  04C3  1903               	goto	u361_22
 11171  04C4  2CC6               	addwf	(i1___flmul@prod+2),f
 11172  04C5  07B6               u361_22:
 11173  04C6                     	movf	3+(??i1___flmul+0)+0,w
 11174  04C6  082B               	clrz
 11175  04C7  1103               	skipnc
 11176  04C8  1803               	addlw	1
 11177  04C9  3E01               	skipnz
 11178  04CA  1903               	goto	u361_23
 11179  04CB  2CCD               	addwf	(i1___flmul@prod+3),f
 11180  04CC  07B7               u361_23:
 11181  04CD                     
 11182                           	line	128
 11183                           	
 11184                           i1l2765:	
 11185  04CD                     	movlw	08h
 11186  04CD  3008               	movwf	(??i1___flmul+0)+0
 11187  04CE  00A8               u362_25:
 11188  04CF                     	clrc
 11189  04CF  1003               	rlf	(i1___flmul@grs),f
 11190  04D0  0DAE               	rlf	(i1___flmul@grs+1),f
 11191  04D1  0DAF               	rlf	(i1___flmul@grs+2),f
 11192  04D2  0DB0               	rlf	(i1___flmul@grs+3),f
 11193  04D3  0DB1               	decfsz	(??i1___flmul+0)+0
 11194  04D4  0BA8               	goto	u362_25
 11195  04D5  2CCF               	line	129
 11196                           	
 11197                           i1l2767:	
 11198  04D6                     	movf	0+(i1___flmul@b)+01h,w
 11199  04D6  0821               	movwf	(??i1___flmul+0)+0
 11200  04D7  00A8               	movf	(??i1___flmul+0)+0,w
 11201  04D8  0828               	movwf	(i1__Umul8_16@multiplicand)
 11202  04D9  00F0               	movf	(i1___flmul@a),w
 11203  04DA  0824               	fcall	i1__Umul8_16
 11204  04DB  160A  118A  252C  120A  118A  	movf	(1+(?i1__Umul8_16)),w
 11205  04E0  0871               	bcf	status, 5	;RP0=0, select bank0
 11206  04E1  1283               	bcf	status, 6	;RP1=0, select bank0
 11207  04E2  1303               	movwf	(i1___flmul@temp+1)
 11208  04E3  00B9               	movf	(0+(?i1__Umul8_16)),w
 11209  04E4  0870               	movwf	(i1___flmul@temp)
 11210  04E5  00B8               	line	130
 11211                           	
 11212                           i1l2769:	
 11213  04E6                     	movf	(i1___flmul@temp),w
 11214  04E6  0838               	movwf	((??i1___flmul+0)+0)
 11215  04E7  00A8               	movf	(i1___flmul@temp+1),w
 11216  04E8  0839               	movwf	((??i1___flmul+0)+0+1)
 11217  04E9  00A9               	clrf	((??i1___flmul+0)+0+2)
 11218  04EA  01AA               	clrf	((??i1___flmul+0)+0+3)
 11219  04EB  01AB               	movf	0+(??i1___flmul+0)+0,w
 11220  04EC  0828               	addwf	(i1___flmul@grs),f
 11221  04ED  07AE               	movf	1+(??i1___flmul+0)+0,w
 11222  04EE  0829               	clrz
 11223  04EF  1103               	skipnc
 11224  04F0  1803               	addlw	1
 11225  04F1  3E01               	skipnz
 11226  04F2  1903               	goto	u363_21
 11227  04F3  2CF5               	addwf	(i1___flmul@grs+1),f
 11228  04F4  07AF               u363_21:
 11229  04F5                     	movf	2+(??i1___flmul+0)+0,w
 11230  04F5  082A               	clrz
 11231  04F6  1103               	skipnc
 11232  04F7  1803               	addlw	1
 11233  04F8  3E01               	skipnz
 11234  04F9  1903               	goto	u363_22
 11235  04FA  2CFC               	addwf	(i1___flmul@grs+2),f
 11236  04FB  07B0               u363_22:
 11237  04FC                     	movf	3+(??i1___flmul+0)+0,w
 11238  04FC  082B               	clrz
 11239  04FD  1103               	skipnc
 11240  04FE  1803               	addlw	1
 11241  04FF  3E01               	skipnz
 11242  0500  1903               	goto	u363_23
 11243  0501  2D03               	addwf	(i1___flmul@grs+3),f
 11244  0502  07B1               u363_23:
 11245  0503                     
 11246                           	line	131
 11247                           	
 11248                           i1l2771:	
 11249  0503                     	movf	(i1___flmul@b),w
 11250  0503  0820               	movwf	(??i1___flmul+0)+0
 11251  0504  00A8               	movf	(??i1___flmul+0)+0,w
 11252  0505  0828               	movwf	(i1__Umul8_16@multiplicand)
 11253  0506  00F0               	movf	0+(i1___flmul@a)+01h,w
 11254  0507  0825               	fcall	i1__Umul8_16
 11255  0508  160A  118A  252C  120A  118A  	movf	(1+(?i1__Umul8_16)),w
 11256  050D  0871               	bcf	status, 5	;RP0=0, select bank0
 11257  050E  1283               	bcf	status, 6	;RP1=0, select bank0
 11258  050F  1303               	movwf	(i1___flmul@temp+1)
 11259  0510  00B9               	movf	(0+(?i1__Umul8_16)),w
 11260  0511  0870               	movwf	(i1___flmul@temp)
 11261  0512  00B8               	line	132
 11262                           	
 11263                           i1l2773:	
 11264  0513                     	movf	(i1___flmul@temp),w
 11265  0513  0838               	movwf	((??i1___flmul+0)+0)
 11266  0514  00A8               	movf	(i1___flmul@temp+1),w
 11267  0515  0839               	movwf	((??i1___flmul+0)+0+1)
 11268  0516  00A9               	clrf	((??i1___flmul+0)+0+2)
 11269  0517  01AA               	clrf	((??i1___flmul+0)+0+3)
 11270  0518  01AB               	movf	0+(??i1___flmul+0)+0,w
 11271  0519  0828               	addwf	(i1___flmul@grs),f
 11272  051A  07AE               	movf	1+(??i1___flmul+0)+0,w
 11273  051B  0829               	clrz
 11274  051C  1103               	skipnc
 11275  051D  1803               	addlw	1
 11276  051E  3E01               	skipnz
 11277  051F  1903               	goto	u364_21
 11278  0520  2D22               	addwf	(i1___flmul@grs+1),f
 11279  0521  07AF               u364_21:
 11280  0522                     	movf	2+(??i1___flmul+0)+0,w
 11281  0522  082A               	clrz
 11282  0523  1103               	skipnc
 11283  0524  1803               	addlw	1
 11284  0525  3E01               	skipnz
 11285  0526  1903               	goto	u364_22
 11286  0527  2D29               	addwf	(i1___flmul@grs+2),f
 11287  0528  07B0               u364_22:
 11288  0529                     	movf	3+(??i1___flmul+0)+0,w
 11289  0529  082B               	clrz
 11290  052A  1103               	skipnc
 11291  052B  1803               	addlw	1
 11292  052C  3E01               	skipnz
 11293  052D  1903               	goto	u364_23
 11294  052E  2D30               	addwf	(i1___flmul@grs+3),f
 11295  052F  07B1               u364_23:
 11296  0530                     
 11297                           	line	133
 11298                           	
 11299                           i1l2775:	
 11300  0530                     	movlw	08h
 11301  0530  3008               	movwf	(??i1___flmul+0)+0
 11302  0531  00A8               u365_25:
 11303  0532                     	clrc
 11304  0532  1003               	rlf	(i1___flmul@grs),f
 11305  0533  0DAE               	rlf	(i1___flmul@grs+1),f
 11306  0534  0DAF               	rlf	(i1___flmul@grs+2),f
 11307  0535  0DB0               	rlf	(i1___flmul@grs+3),f
 11308  0536  0DB1               	decfsz	(??i1___flmul+0)+0
 11309  0537  0BA8               	goto	u365_25
 11310  0538  2D32               	line	134
 11311                           	movf	(i1___flmul@b),w
 11312  0539  0820               	movwf	(??i1___flmul+0)+0
 11313  053A  00A8               	movf	(??i1___flmul+0)+0,w
 11314  053B  0828               	movwf	(i1__Umul8_16@multiplicand)
 11315  053C  00F0               	movf	(i1___flmul@a),w
 11316  053D  0824               	fcall	i1__Umul8_16
 11317  053E  160A  118A  252C  120A  118A  	movf	(1+(?i1__Umul8_16)),w
 11318  0543  0871               	bcf	status, 5	;RP0=0, select bank0
 11319  0544  1283               	bcf	status, 6	;RP1=0, select bank0
 11320  0545  1303               	movwf	(i1___flmul@temp+1)
 11321  0546  00B9               	movf	(0+(?i1__Umul8_16)),w
 11322  0547  0870               	movwf	(i1___flmul@temp)
 11323  0548  00B8               	line	135
 11324                           	
 11325                           i1l2777:	
 11326  0549                     	movf	(i1___flmul@temp),w
 11327  0549  0838               	movwf	((??i1___flmul+0)+0)
 11328  054A  00A8               	movf	(i1___flmul@temp+1),w
 11329  054B  0839               	movwf	((??i1___flmul+0)+0+1)
 11330  054C  00A9               	clrf	((??i1___flmul+0)+0+2)
 11331  054D  01AA               	clrf	((??i1___flmul+0)+0+3)
 11332  054E  01AB               	movf	0+(??i1___flmul+0)+0,w
 11333  054F  0828               	addwf	(i1___flmul@grs),f
 11334  0550  07AE               	movf	1+(??i1___flmul+0)+0,w
 11335  0551  0829               	clrz
 11336  0552  1103               	skipnc
 11337  0553  1803               	addlw	1
 11338  0554  3E01               	skipnz
 11339  0555  1903               	goto	u366_21
 11340  0556  2D58               	addwf	(i1___flmul@grs+1),f
 11341  0557  07AF               u366_21:
 11342  0558                     	movf	2+(??i1___flmul+0)+0,w
 11343  0558  082A               	clrz
 11344  0559  1103               	skipnc
 11345  055A  1803               	addlw	1
 11346  055B  3E01               	skipnz
 11347  055C  1903               	goto	u366_22
 11348  055D  2D5F               	addwf	(i1___flmul@grs+2),f
 11349  055E  07B0               u366_22:
 11350  055F                     	movf	3+(??i1___flmul+0)+0,w
 11351  055F  082B               	clrz
 11352  0560  1103               	skipnc
 11353  0561  1803               	addlw	1
 11354  0562  3E01               	skipnz
 11355  0563  1903               	goto	u366_23
 11356  0564  2D66               	addwf	(i1___flmul@grs+3),f
 11357  0565  07B1               u366_23:
 11358  0566                     
 11359                           	line	136
 11360                           	
 11361                           i1l2779:	
 11362  0566                     	movf	0+(i1___flmul@b)+01h,w
 11363  0566  0821               	movwf	(??i1___flmul+0)+0
 11364  0567  00A8               	movf	(??i1___flmul+0)+0,w
 11365  0568  0828               	movwf	(i1__Umul8_16@multiplicand)
 11366  0569  00F0               	movf	0+(i1___flmul@a)+02h,w
 11367  056A  0826               	fcall	i1__Umul8_16
 11368  056B  160A  118A  252C  120A  118A  	movf	(1+(?i1__Umul8_16)),w
 11369  0570  0871               	bcf	status, 5	;RP0=0, select bank0
 11370  0571  1283               	bcf	status, 6	;RP1=0, select bank0
 11371  0572  1303               	movwf	(i1___flmul@temp+1)
 11372  0573  00B9               	movf	(0+(?i1__Umul8_16)),w
 11373  0574  0870               	movwf	(i1___flmul@temp)
 11374  0575  00B8               	line	137
 11375                           	movf	(i1___flmul@temp),w
 11376  0576  0838               	movwf	((??i1___flmul+0)+0)
 11377  0577  00A8               	movf	(i1___flmul@temp+1),w
 11378  0578  0839               	movwf	((??i1___flmul+0)+0+1)
 11379  0579  00A9               	clrf	((??i1___flmul+0)+0+2)
 11380  057A  01AA               	clrf	((??i1___flmul+0)+0+3)
 11381  057B  01AB               	movf	0+(??i1___flmul+0)+0,w
 11382  057C  0828               	addwf	(i1___flmul@prod),f
 11383  057D  07B4               	movf	1+(??i1___flmul+0)+0,w
 11384  057E  0829               	clrz
 11385  057F  1103               	skipnc
 11386  0580  1803               	addlw	1
 11387  0581  3E01               	skipnz
 11388  0582  1903               	goto	u367_21
 11389  0583  2D85               	addwf	(i1___flmul@prod+1),f
 11390  0584  07B5               u367_21:
 11391  0585                     	movf	2+(??i1___flmul+0)+0,w
 11392  0585  082A               	clrz
 11393  0586  1103               	skipnc
 11394  0587  1803               	addlw	1
 11395  0588  3E01               	skipnz
 11396  0589  1903               	goto	u367_22
 11397  058A  2D8C               	addwf	(i1___flmul@prod+2),f
 11398  058B  07B6               u367_22:
 11399  058C                     	movf	3+(??i1___flmul+0)+0,w
 11400  058C  082B               	clrz
 11401  058D  1103               	skipnc
 11402  058E  1803               	addlw	1
 11403  058F  3E01               	skipnz
 11404  0590  1903               	goto	u367_23
 11405  0591  2D93               	addwf	(i1___flmul@prod+3),f
 11406  0592  07B7               u367_23:
 11407  0593                     
 11408                           	line	138
 11409                           	
 11410                           i1l2781:	
 11411  0593                     	movf	0+(i1___flmul@b)+02h,w
 11412  0593  0822               	movwf	(??i1___flmul+0)+0
 11413  0594  00A8               	movf	(??i1___flmul+0)+0,w
 11414  0595  0828               	movwf	(i1__Umul8_16@multiplicand)
 11415  0596  00F0               	movf	0+(i1___flmul@a)+01h,w
 11416  0597  0825               	fcall	i1__Umul8_16
 11417  0598  160A  118A  252C  120A  118A  	movf	(1+(?i1__Umul8_16)),w
 11418  059D  0871               	bcf	status, 5	;RP0=0, select bank0
 11419  059E  1283               	bcf	status, 6	;RP1=0, select bank0
 11420  059F  1303               	movwf	(i1___flmul@temp+1)
 11421  05A0  00B9               	movf	(0+(?i1__Umul8_16)),w
 11422  05A1  0870               	movwf	(i1___flmul@temp)
 11423  05A2  00B8               	line	139
 11424                           	
 11425                           i1l2783:	
 11426  05A3                     	movf	(i1___flmul@temp),w
 11427  05A3  0838               	movwf	((??i1___flmul+0)+0)
 11428  05A4  00A8               	movf	(i1___flmul@temp+1),w
 11429  05A5  0839               	movwf	((??i1___flmul+0)+0+1)
 11430  05A6  00A9               	clrf	((??i1___flmul+0)+0+2)
 11431  05A7  01AA               	clrf	((??i1___flmul+0)+0+3)
 11432  05A8  01AB               	movf	0+(??i1___flmul+0)+0,w
 11433  05A9  0828               	addwf	(i1___flmul@prod),f
 11434  05AA  07B4               	movf	1+(??i1___flmul+0)+0,w
 11435  05AB  0829               	clrz
 11436  05AC  1103               	skipnc
 11437  05AD  1803               	addlw	1
 11438  05AE  3E01               	skipnz
 11439  05AF  1903               	goto	u368_21
 11440  05B0  2DB2               	addwf	(i1___flmul@prod+1),f
 11441  05B1  07B5               u368_21:
 11442  05B2                     	movf	2+(??i1___flmul+0)+0,w
 11443  05B2  082A               	clrz
 11444  05B3  1103               	skipnc
 11445  05B4  1803               	addlw	1
 11446  05B5  3E01               	skipnz
 11447  05B6  1903               	goto	u368_22
 11448  05B7  2DB9               	addwf	(i1___flmul@prod+2),f
 11449  05B8  07B6               u368_22:
 11450  05B9                     	movf	3+(??i1___flmul+0)+0,w
 11451  05B9  082B               	clrz
 11452  05BA  1103               	skipnc
 11453  05BB  1803               	addlw	1
 11454  05BC  3E01               	skipnz
 11455  05BD  1903               	goto	u368_23
 11456  05BE  2DC0               	addwf	(i1___flmul@prod+3),f
 11457  05BF  07B7               u368_23:
 11458  05C0                     
 11459                           	line	140
 11460                           	movf	0+(i1___flmul@b)+02h,w
 11461  05C0  0822               	movwf	(??i1___flmul+0)+0
 11462  05C1  00A8               	movf	(??i1___flmul+0)+0,w
 11463  05C2  0828               	movwf	(i1__Umul8_16@multiplicand)
 11464  05C3  00F0               	movf	0+(i1___flmul@a)+02h,w
 11465  05C4  0826               	fcall	i1__Umul8_16
 11466  05C5  160A  118A  252C  120A  118A  	movf	(1+(?i1__Umul8_16)),w
 11467  05CA  0871               	bcf	status, 5	;RP0=0, select bank0
 11468  05CB  1283               	bcf	status, 6	;RP1=0, select bank0
 11469  05CC  1303               	movwf	(i1___flmul@temp+1)
 11470  05CD  00B9               	movf	(0+(?i1__Umul8_16)),w
 11471  05CE  0870               	movwf	(i1___flmul@temp)
 11472  05CF  00B8               	line	141
 11473                           	
 11474                           i1l2785:	
 11475  05D0                     	movf	(i1___flmul@temp),w
 11476  05D0  0838               	movwf	((??i1___flmul+0)+0)
 11477  05D1  00A8               	movf	(i1___flmul@temp+1),w
 11478  05D2  0839               	movwf	((??i1___flmul+0)+0+1)
 11479  05D3  00A9               	clrf	((??i1___flmul+0)+0+2)
 11480  05D4  01AA               	clrf	((??i1___flmul+0)+0+3)
 11481  05D5  01AB               	movlw	08h
 11482  05D6  3008               u369_25:
 11483  05D7                     	clrc
 11484  05D7  1003               	rlf	(??i1___flmul+0)+0,f
 11485  05D8  0DA8               	rlf	(??i1___flmul+0)+1,f
 11486  05D9  0DA9               	rlf	(??i1___flmul+0)+2,f
 11487  05DA  0DAA               	rlf	(??i1___flmul+0)+3,f
 11488  05DB  0DAB               u369_20:
 11489  05DC                     	addlw	-1
 11490  05DC  3EFF               	skipz
 11491  05DD  1D03               	goto	u369_25
 11492  05DE  2DD7               	movf	0+(??i1___flmul+0)+0,w
 11493  05DF  0828               	addwf	(i1___flmul@prod),f
 11494  05E0  07B4               	movf	1+(??i1___flmul+0)+0,w
 11495  05E1  0829               	clrz
 11496  05E2  1103               	skipnc
 11497  05E3  1803               	addlw	1
 11498  05E4  3E01               	skipnz
 11499  05E5  1903               	goto	u370_21
 11500  05E6  2DE8               	addwf	(i1___flmul@prod+1),f
 11501  05E7  07B5               u370_21:
 11502  05E8                     	movf	2+(??i1___flmul+0)+0,w
 11503  05E8  082A               	clrz
 11504  05E9  1103               	skipnc
 11505  05EA  1803               	addlw	1
 11506  05EB  3E01               	skipnz
 11507  05EC  1903               	goto	u370_22
 11508  05ED  2DEF               	addwf	(i1___flmul@prod+2),f
 11509  05EE  07B6               u370_22:
 11510  05EF                     	movf	3+(??i1___flmul+0)+0,w
 11511  05EF  082B               	clrz
 11512  05F0  1103               	skipnc
 11513  05F1  1803               	addlw	1
 11514  05F2  3E01               	skipnz
 11515  05F3  1903               	goto	u370_23
 11516  05F4  2DF6               	addwf	(i1___flmul@prod+3),f
 11517  05F5  07B7               u370_23:
 11518  05F6                     
 11519                           	line	145
 11520                           	
 11521                           i1l2787:	
 11522  05F6                     	movf	(i1___flmul@grs),w
 11523  05F6  082E               	movwf	(??i1___flmul+0)+0
 11524  05F7  00A8               	movf	(i1___flmul@grs+1),w
 11525  05F8  082F               	movwf	((??i1___flmul+0)+0+1)
 11526  05F9  00A9               	movf	(i1___flmul@grs+2),w
 11527  05FA  0830               	movwf	((??i1___flmul+0)+0+2)
 11528  05FB  00AA               	movf	(i1___flmul@grs+3),w
 11529  05FC  0831               	movwf	((??i1___flmul+0)+0+3)
 11530  05FD  00AB               	movlw	018h
 11531  05FE  3018               u371_25:
 11532  05FF                     	clrc
 11533  05FF  1003               	rrf	(??i1___flmul+0)+3,f
 11534  0600  0CAB               	rrf	(??i1___flmul+0)+2,f
 11535  0601  0CAA               	rrf	(??i1___flmul+0)+1,f
 11536  0602  0CA9               	rrf	(??i1___flmul+0)+0,f
 11537  0603  0CA8               u371_20:
 11538  0604                     	addlw	-1
 11539  0604  3EFF               	skipz
 11540  0605  1D03               	goto	u371_25
 11541  0606  2DFF               	movf	0+(??i1___flmul+0)+0,w
 11542  0607  0828               	addwf	(i1___flmul@prod),f
 11543  0608  07B4               	movf	1+(??i1___flmul+0)+0,w
 11544  0609  0829               	clrz
 11545  060A  1103               	skipnc
 11546  060B  1803               	addlw	1
 11547  060C  3E01               	skipnz
 11548  060D  1903               	goto	u372_21
 11549  060E  2E10               	addwf	(i1___flmul@prod+1),f
 11550  060F  07B5               u372_21:
 11551  0610                     	movf	2+(??i1___flmul+0)+0,w
 11552  0610  082A               	clrz
 11553  0611  1103               	skipnc
 11554  0612  1803               	addlw	1
 11555  0613  3E01               	skipnz
 11556  0614  1903               	goto	u372_22
 11557  0615  2E17               	addwf	(i1___flmul@prod+2),f
 11558  0616  07B6               u372_22:
 11559  0617                     	movf	3+(??i1___flmul+0)+0,w
 11560  0617  082B               	clrz
 11561  0618  1103               	skipnc
 11562  0619  1803               	addlw	1
 11563  061A  3E01               	skipnz
 11564  061B  1903               	goto	u372_23
 11565  061C  2E1E               	addwf	(i1___flmul@prod+3),f
 11566  061D  07B7               u372_23:
 11567  061E                     
 11568                           	line	146
 11569                           	
 11570                           i1l2789:	
 11571  061E                     	movlw	08h
 11572  061E  3008               	movwf	(??i1___flmul+0)+0
 11573  061F  00A8               u373_25:
 11574  0620                     	clrc
 11575  0620  1003               	rlf	(i1___flmul@grs),f
 11576  0621  0DAE               	rlf	(i1___flmul@grs+1),f
 11577  0622  0DAF               	rlf	(i1___flmul@grs+2),f
 11578  0623  0DB0               	rlf	(i1___flmul@grs+3),f
 11579  0624  0DB1               	decfsz	(??i1___flmul+0)+0
 11580  0625  0BA8               	goto	u373_25
 11581  0626  2E20               	line	149
 11582                           	
 11583                           i1l2791:	
 11584  0627                     	movf	(i1___flmul@bexp),w
 11585  0627  0833               	addwf	(i1___flmul@aexp),w
 11586  0628  0732               	movwf	(??i1___flmul+0)+0
 11587  0629  00A8               	clrf	(??i1___flmul+0)+0+1
 11588  062A  01A9               	rlf	1+(??i1___flmul+0)+0,f
 11589  062B  0DA9               	
 11590                           	movf	0+(??i1___flmul+0)+0,w
 11591  062C  0828               	addlw	low(-126)
 11592  062D  3E82               	movwf	(i1___flmul@temp)
 11593  062E  00B8               	movf	1+(??i1___flmul+0)+0,w
 11594  062F  0829               	skipnc
 11595  0630  1803               	addlw	1
 11596  0631  3E01               	addlw	high(-126)
 11597  0632  3EFF               	movwf	1+(i1___flmul@temp)
 11598  0633  00B9               	line	152
 11599                           	goto	i1l2803
 11600  0634  2E54               	
 11601                           i1l801:	
 11602  0635                     	line	153
 11603                           	
 11604                           i1l2793:	
 11605  0635                     	movlw	01h
 11606  0635  3001               	movwf	(??i1___flmul+0)+0
 11607  0636  00A8               u374_25:
 11608  0637                     	clrc
 11609  0637  1003               	rlf	(i1___flmul@prod),f
 11610  0638  0DB4               	rlf	(i1___flmul@prod+1),f
 11611  0639  0DB5               	rlf	(i1___flmul@prod+2),f
 11612  063A  0DB6               	rlf	(i1___flmul@prod+3),f
 11613  063B  0DB7               	decfsz	(??i1___flmul+0)+0
 11614  063C  0BA8               	goto	u374_25
 11615  063D  2E37               	line	154
 11616                           	
 11617                           i1l2795:	
 11618  063E                     	btfss	(i1___flmul@grs+3),(31)&7
 11619  063E  1FB1               	goto	u375_21
 11620  063F  2E41               	goto	u375_20
 11621  0640  2E42               u375_21:
 11622  0641                     	goto	i1l2799
 11623  0641  2E44               u375_20:
 11624  0642                     	line	155
 11625                           	
 11626                           i1l2797:	
 11627  0642                     	bsf	(i1___flmul@prod)+(0/8),(0)&7
 11628  0642  1434               	goto	i1l2799
 11629  0643  2E44               	line	156
 11630                           	
 11631                           i1l802:	
 11632  0644                     	line	157
 11633                           	
 11634                           i1l2799:	
 11635  0644                     	movlw	01h
 11636  0644  3001               	movwf	(??i1___flmul+0)+0
 11637  0645  00A8               u376_25:
 11638  0646                     	clrc
 11639  0646  1003               	rlf	(i1___flmul@grs),f
 11640  0647  0DAE               	rlf	(i1___flmul@grs+1),f
 11641  0648  0DAF               	rlf	(i1___flmul@grs+2),f
 11642  0649  0DB0               	rlf	(i1___flmul@grs+3),f
 11643  064A  0DB1               	decfsz	(??i1___flmul+0)+0
 11644  064B  0BA8               	goto	u376_25
 11645  064C  2E46               	line	158
 11646                           	
 11647                           i1l2801:	
 11648  064D                     	movlw	0FFh
 11649  064D  30FF               	addwf	(i1___flmul@temp),f
 11650  064E  07B8               	skipnc
 11651  064F  1803               	incf	(i1___flmul@temp+1),f
 11652  0650  0AB9               	movlw	0FFh
 11653  0651  30FF               	addwf	(i1___flmul@temp+1),f
 11654  0652  07B9               	goto	i1l2803
 11655  0653  2E54               	line	159
 11656                           	
 11657                           i1l800:	
 11658  0654                     	line	152
 11659                           	
 11660                           i1l2803:	
 11661  0654                     	btfss	(i1___flmul@prod+2),(23)&7
 11662  0654  1FB6               	goto	u377_21
 11663  0655  2E57               	goto	u377_20
 11664  0656  2E58               u377_21:
 11665  0657                     	goto	i1l2793
 11666  0657  2E35               u377_20:
 11667  0658                     	goto	i1l2805
 11668  0658  2E59               	
 11669                           i1l803:	
 11670  0659                     	line	163
 11671                           	
 11672                           i1l2805:	
 11673  0659                     	clrf	(i1___flmul@aexp)
 11674  0659  01B2               	line	164
 11675                           	
 11676                           i1l2807:	
 11677  065A                     	btfss	(i1___flmul@grs+3),(31)&7
 11678  065A  1FB1               	goto	u378_21
 11679  065B  2E5D               	goto	u378_20
 11680  065C  2E5E               u378_21:
 11681  065D                     	goto	i1l2815
 11682  065D  2E7E               u378_20:
 11683  065E                     	line	165
 11684                           	
 11685                           i1l2809:	
 11686  065E                     	movlw	0FFh
 11687  065E  30FF               	andwf	(i1___flmul@grs),w
 11688  065F  052E               	movwf	(??i1___flmul+0)+0
 11689  0660  00A8               	movlw	0FFh
 11690  0661  30FF               	andwf	(i1___flmul@grs+1),w
 11691  0662  052F               	movwf	((??i1___flmul+0)+0+1)
 11692  0663  00A9               	movlw	0FFh
 11693  0664  30FF               	andwf	(i1___flmul@grs+2),w
 11694  0665  0530               	movwf	((??i1___flmul+0)+0+2)
 11695  0666  00AA               	movlw	07Fh
 11696  0667  307F               	andwf	(i1___flmul@grs+3),w
 11697  0668  0531               	movwf	((??i1___flmul+0)+0+3)
 11698  0669  00AB               	movf	3+(??i1___flmul+0)+0,w
 11699  066A  082B               	iorwf	2+(??i1___flmul+0)+0,w
 11700  066B  042A               	iorwf	1+(??i1___flmul+0)+0,w
 11701  066C  0429               	iorwf	0+(??i1___flmul+0)+0,w
 11702  066D  0428               	skipnz
 11703  066E  1903               	goto	u379_21
 11704  066F  2E71               	goto	u379_20
 11705  0670  2E72               u379_21:
 11706  0671                     	goto	i1l805
 11707  0671  2E75               u379_20:
 11708  0672                     	line	166
 11709                           	
 11710                           i1l2811:	
 11711  0672                     	clrf	(i1___flmul@aexp)
 11712  0672  01B2               	incf	(i1___flmul@aexp),f
 11713  0673  0AB2               	line	167
 11714                           	goto	i1l2815
 11715  0674  2E7E               	line	168
 11716                           	
 11717                           i1l805:	
 11718  0675                     	line	169
 11719                           	btfss	(i1___flmul@prod),(0)&7
 11720  0675  1C34               	goto	u380_21
 11721  0676  2E78               	goto	u380_20
 11722  0677  2E79               u380_21:
 11723  0678                     	goto	i1l2815
 11724  0678  2E7E               u380_20:
 11725  0679                     	line	170
 11726                           	
 11727                           i1l2813:	
 11728  0679                     	clrf	(i1___flmul@aexp)
 11729  0679  01B2               	incf	(i1___flmul@aexp),f
 11730  067A  0AB2               	goto	i1l2815
 11731  067B  2E7E               	line	171
 11732                           	
 11733                           i1l807:	
 11734  067C                     	goto	i1l2815
 11735  067C  2E7E               	line	172
 11736                           	
 11737                           i1l806:	
 11738  067D                     	goto	i1l2815
 11739  067D  2E7E               	line	173
 11740                           	
 11741                           i1l804:	
 11742  067E                     	line	174
 11743                           	
 11744                           i1l2815:	
 11745  067E                     	movf	((i1___flmul@aexp)),w
 11746  067E  0832               	btfsc	status,2
 11747  067F  1903               	goto	u381_21
 11748  0680  2E82               	goto	u381_20
 11749  0681  2E83               u381_21:
 11750  0682                     	goto	i1l2825
 11751  0682  2EB6               u381_20:
 11752  0683                     	line	175
 11753                           	
 11754                           i1l2817:	
 11755  0683                     	movlw	01h
 11756  0683  3001               	addwf	(i1___flmul@prod),f
 11757  0684  07B4               	movlw	0
 11758  0685  3000               	skipnc
 11759  0686  1803               movlw 1
 11760  0687  3001               	addwf	(i1___flmul@prod+1),f
 11761  0688  07B5               	movlw	0
 11762  0689  3000               	skipnc
 11763  068A  1803               movlw 1
 11764  068B  3001               	addwf	(i1___flmul@prod+2),f
 11765  068C  07B6               	movlw	0
 11766  068D  3000               	skipnc
 11767  068E  1803               movlw 1
 11768  068F  3001               	addwf	(i1___flmul@prod+3),f
 11769  0690  07B7               	line	176
 11770                           	
 11771                           i1l2819:	
 11772  0691                     	btfss	(i1___flmul@prod+3),(24)&7
 11773  0691  1C37               	goto	u382_21
 11774  0692  2E94               	goto	u382_20
 11775  0693  2E95               u382_21:
 11776  0694                     	goto	i1l2825
 11777  0694  2EB6               u382_20:
 11778  0695                     	line	177
 11779                           	
 11780                           i1l2821:	
 11781  0695                     	movf	(i1___flmul@prod),w
 11782  0695  0834               	movwf	(??i1___flmul+0)+0
 11783  0696  00A8               	movf	(i1___flmul@prod+1),w
 11784  0697  0835               	movwf	((??i1___flmul+0)+0+1)
 11785  0698  00A9               	movf	(i1___flmul@prod+2),w
 11786  0699  0836               	movwf	((??i1___flmul+0)+0+2)
 11787  069A  00AA               	movf	(i1___flmul@prod+3),w
 11788  069B  0837               	movwf	((??i1___flmul+0)+0+3)
 11789  069C  00AB               	movlw	01h
 11790  069D  3001               	movwf	(??i1___flmul+4)+0
 11791  069E  00AC               u383_25:
 11792  069F                     	rlf	(??i1___flmul+0)+3,w
 11793  069F  0D2B               	rrf	(??i1___flmul+0)+3,f
 11794  06A0  0CAB               	rrf	(??i1___flmul+0)+2,f
 11795  06A1  0CAA               	rrf	(??i1___flmul+0)+1,f
 11796  06A2  0CA9               	rrf	(??i1___flmul+0)+0,f
 11797  06A3  0CA8               u383_20:
 11798  06A4                     	decfsz	(??i1___flmul+4)+0,f
 11799  06A4  0BAC               	goto	u383_25
 11800  06A5  2E9F               	movf	3+(??i1___flmul+0)+0,w
 11801  06A6  082B               	movwf	(i1___flmul@prod+3)
 11802  06A7  00B7               	movf	2+(??i1___flmul+0)+0,w
 11803  06A8  082A               	movwf	(i1___flmul@prod+2)
 11804  06A9  00B6               	movf	1+(??i1___flmul+0)+0,w
 11805  06AA  0829               	movwf	(i1___flmul@prod+1)
 11806  06AB  00B5               	movf	0+(??i1___flmul+0)+0,w
 11807  06AC  0828               	movwf	(i1___flmul@prod)
 11808  06AD  00B4               
 11809                           	line	178
 11810                           	
 11811                           i1l2823:	
 11812  06AE                     	movlw	01h
 11813  06AE  3001               	addwf	(i1___flmul@temp),f
 11814  06AF  07B8               	skipnc
 11815  06B0  1803               	incf	(i1___flmul@temp+1),f
 11816  06B1  0AB9               	movlw	0
 11817  06B2  3000               	addwf	(i1___flmul@temp+1),f
 11818  06B3  07B9               	goto	i1l2825
 11819  06B4  2EB6               	line	179
 11820                           	
 11821                           i1l809:	
 11822  06B5                     	goto	i1l2825
 11823  06B5  2EB6               	line	180
 11824                           	
 11825                           i1l808:	
 11826  06B6                     	line	183
 11827                           	
 11828                           i1l2825:	
 11829  06B6                     	movf	(i1___flmul@temp+1),w
 11830  06B6  0839               	xorlw	80h
 11831  06B7  3A80               	movwf	btemp+1
 11832  06B8  00FF               	movlw	(0)^80h
 11833  06B9  3080               	subwf	btemp+1,w
 11834  06BA  027F               	skipz
 11835  06BB  1D03               	goto	u384_25
 11836  06BC  2EBF               	movlw	0FFh
 11837  06BD  30FF               	subwf	(i1___flmul@temp),w
 11838  06BE  0238               u384_25:
 11839  06BF                     
 11840                           	skipc
 11841  06BF  1C03               	goto	u384_21
 11842  06C0  2EC2               	goto	u384_20
 11843  06C1  2EC3               u384_21:
 11844  06C2                     	goto	i1l2829
 11845  06C2  2ECE               u384_20:
 11846  06C3                     	line	184
 11847                           	
 11848                           i1l2827:	
 11849  06C3                     	movlw	07Fh
 11850  06C3  307F               	bcf	status, 5	;RP0=0, select bank0
 11851  06C4  1283               	bcf	status, 6	;RP1=0, select bank0
 11852  06C5  1303               	movwf	(i1___flmul@prod+3)
 11853  06C6  00B7               	movlw	080h
 11854  06C7  3080               	movwf	(i1___flmul@prod+2)
 11855  06C8  00B6               	movlw	0
 11856  06C9  3000               	movwf	(i1___flmul@prod+1)
 11857  06CA  00B5               	movlw	0
 11858  06CB  3000               	movwf	(i1___flmul@prod)
 11859  06CC  00B4               
 11860                           	line	185
 11861                           	goto	i1l811
 11862  06CD  2F05               	line	187
 11863                           	
 11864                           i1l810:	
 11865  06CE                     	
 11866                           i1l2829:	
 11867  06CE                     	bcf	status, 5	;RP0=0, select bank0
 11868  06CE  1283               	bcf	status, 6	;RP1=0, select bank0
 11869  06CF  1303               	movf	(i1___flmul@temp+1),w
 11870  06D0  0839               	xorlw	80h
 11871  06D1  3A80               	movwf	btemp+1
 11872  06D2  00FF               	movlw	(0)^80h
 11873  06D3  3080               	subwf	btemp+1,w
 11874  06D4  027F               	skipz
 11875  06D5  1D03               	goto	u385_25
 11876  06D6  2ED9               	movlw	01h
 11877  06D7  3001               	subwf	(i1___flmul@temp),w
 11878  06D8  0238               u385_25:
 11879  06D9                     
 11880                           	skipnc
 11881  06D9  1803               	goto	u385_21
 11882  06DA  2EDC               	goto	u385_20
 11883  06DB  2EDD               u385_21:
 11884  06DC                     	goto	i1l2835
 11885  06DC  2EE9               u385_20:
 11886  06DD                     	line	188
 11887                           	
 11888                           i1l2831:	
 11889  06DD                     	movlw	high highword(0)
 11890  06DD  3000               	bcf	status, 5	;RP0=0, select bank0
 11891  06DE  1283               	bcf	status, 6	;RP1=0, select bank0
 11892  06DF  1303               	movwf	(i1___flmul@prod+3)
 11893  06E0  00B7               	movlw	low highword(0)
 11894  06E1  3000               	movwf	(i1___flmul@prod+2)
 11895  06E2  00B6               	movlw	high(0)
 11896  06E3  3000               	movwf	(i1___flmul@prod+1)
 11897  06E4  00B5               	movlw	low(0)
 11898  06E5  3000               	movwf	(i1___flmul@prod)
 11899  06E6  00B4               
 11900                           	line	190
 11901                           	
 11902                           i1l2833:	
 11903  06E7                     	clrf	(i1___flmul@sign)
 11904  06E7  01AD               	line	191
 11905                           	goto	i1l811
 11906  06E8  2F05               	line	192
 11907                           	
 11908                           i1l812:	
 11909  06E9                     	line	194
 11910                           	
 11911                           i1l2835:	
 11912  06E9                     	bcf	status, 5	;RP0=0, select bank0
 11913  06E9  1283               	bcf	status, 6	;RP1=0, select bank0
 11914  06EA  1303               	movf	(i1___flmul@temp),w
 11915  06EB  0838               	movwf	(??i1___flmul+0)+0
 11916  06EC  00A8               	movf	(??i1___flmul+0)+0,w
 11917  06ED  0828               	movwf	(i1___flmul@bexp)
 11918  06EE  00B3               	line	195
 11919                           	movlw	0FFh
 11920  06EF  30FF               	andwf	(i1___flmul@prod),f
 11921  06F0  05B4               	movlw	0FFh
 11922  06F1  30FF               	andwf	(i1___flmul@prod+1),f
 11923  06F2  05B5               	movlw	07Fh
 11924  06F3  307F               	andwf	(i1___flmul@prod+2),f
 11925  06F4  05B6               	movlw	0
 11926  06F5  3000               	andwf	(i1___flmul@prod+3),f
 11927  06F6  05B7               	line	196
 11928                           	
 11929                           i1l2837:	
 11930  06F7                     	btfss	(i1___flmul@bexp),(0)&7
 11931  06F7  1C33               	goto	u386_21
 11932  06F8  2EFA               	goto	u386_20
 11933  06F9  2EFB               u386_21:
 11934  06FA                     	goto	i1l2841
 11935  06FA  2EFD               u386_20:
 11936  06FB                     	line	197
 11937                           	
 11938                           i1l2839:	
 11939  06FB                     	bsf	0+(i1___flmul@prod)+02h+(7/8),(7)&7
 11940  06FB  17B6               	goto	i1l2841
 11941  06FC  2EFD               	line	198
 11942                           	
 11943                           i1l814:	
 11944  06FD                     	line	199
 11945                           	
 11946                           i1l2841:	
 11947  06FD                     	movf	(i1___flmul@bexp),w
 11948  06FD  0833               	movwf	(??i1___flmul+0)+0
 11949  06FE  00A8               	clrc
 11950  06FF  1003               	rrf	(??i1___flmul+0)+0,w
 11951  0700  0C28               	movwf	(??i1___flmul+1)+0
 11952  0701  00A9               	movf	(??i1___flmul+1)+0,w
 11953  0702  0829               	movwf	0+(i1___flmul@prod)+03h
 11954  0703  00B7               	goto	i1l811
 11955  0704  2F05               	line	200
 11956                           	
 11957                           i1l813:	
 11958  0705                     	
 11959                           i1l811:	
 11960  0705                     	line	201
 11961                           	movf	(i1___flmul@sign),w
 11962  0705  082D               	movwf	(??i1___flmul+0)+0
 11963  0706  00A8               	movf	(??i1___flmul+0)+0,w
 11964  0707  0828               	iorwf	0+(i1___flmul@prod)+03h,f
 11965  0708  04B7               	line	203
 11966                           	
 11967                           i1l2843:	
 11968  0709                     	movf	(i1___flmul@prod+3),w
 11969  0709  0837               	movwf	(?i1___flmul+3)
 11970  070A  00A3               	movf	(i1___flmul@prod+2),w
 11971  070B  0836               	movwf	(?i1___flmul+2)
 11972  070C  00A2               	movf	(i1___flmul@prod+1),w
 11973  070D  0835               	movwf	(?i1___flmul+1)
 11974  070E  00A1               	movf	(i1___flmul@prod),w
 11975  070F  0834               	movwf	(?i1___flmul)
 11976  0710  00A0               
 11977                           	goto	i1l799
 11978  0711  2F12               	
 11979                           i1l2845:	
 11980  0712                     	line	205
 11981                           	
 11982                           i1l799:	
 11983  0712                     	return
 11984  0712  0008               	opt stack 0
 11985                           GLOBAL	__end_ofi1___flmul
 11986                           	__end_ofi1___flmul:
 11987  0713                     	signat	i1___flmul,92
 11988                           	global	i1__Umul8_16
 11989                           
 11990 ;; *************** function i1__Umul8_16 *****************
 11991 ;; Defined at:
 11992 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
 11993 ;; Parameters:    Size  Location     Type
 11994 ;;  multiplier      1    wreg     unsigned char 
 11995 ;;  multiplicand    1    0[COMMON] unsigned char 
 11996 ;; Auto vars:     Size  Location     Type
 11997 ;;  multiplier      1    8[COMMON] unsigned char 
 11998 ;;  _Umul8_16       2    6[COMMON] unsigned int 
 11999 ;;  _Umul8_16       2    4[COMMON] unsigned int 
 12000 ;; Return value:  Size  Location     Type
 12001 ;;                  2    0[COMMON] unsigned int 
 12002 ;; Registers used:
 12003 ;;		wreg, status,2, status,0
 12004 ;; Tracked objects:
 12005 ;;		On entry : 0/0
 12006 ;;		On exit  : 0/0
 12007 ;;		Unchanged: 0/0
 12008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12009 ;;      Params:         2       0       0       0       0
 12010 ;;      Locals:         5       0       0       0       0
 12011 ;;      Temps:          2       0       0       0       0
 12012 ;;      Totals:         9       0       0       0       0
 12013 ;;Total ram usage:        9 bytes
 12014 ;; Hardware stack levels used:    1
 12015 ;; This function calls:
 12016 ;;		Nothing
 12017 ;; This function is called by:
 12018 ;;		i1___flmul
 12019 ;; This function uses a non-reentrant model
 12020 ;;
 12021                           psect	text41,local,class=CODE,delta=2,merge=1,group=0
 12022                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
 12023                           	line	4
 12024                           global __ptext41
 12025                           __ptext41:	;psect for function i1__Umul8_16
 12026  152C                     psect	text41
 12027                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
 12028                           	line	4
 12029                           	global	__size_ofi1__Umul8_16
 12030                           	__size_ofi1__Umul8_16	equ	__end_ofi1__Umul8_16-i1__Umul8_16
 12031  002A                     	
 12032                           i1__Umul8_16:	
 12033  152C                     ;incstack = 0
 12034 ;; hardware stack exceeded
 12035                           	opt	stack 0
 12036                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
 12037                           ;i1__Umul8_16@multiplier stored from wreg
 12038                           	movwf	(i1__Umul8_16@multiplier)
 12039  152C  00F8               	line	5
 12040                           	
 12041                           i1l2515:	
 12042  152D                     	clrf	(i1__Umul8_16@product)
 12043  152D  01F4               	clrf	(i1__Umul8_16@product+1)
 12044  152E  01F5               	line	6
 12045                           	
 12046                           i1l2517:	
 12047  152F                     	movf	(i1__Umul8_16@multiplicand),w
 12048  152F  0870               	movwf	(??i1__Umul8_16+0)+0
 12049  1530  00F2               	clrf	(??i1__Umul8_16+0)+0+1
 12050  1531  01F3               	movf	0+(??i1__Umul8_16+0)+0,w
 12051  1532  0872               	movwf	(i1__Umul8_16@word_mpld)
 12052  1533  00F6               	movf	1+(??i1__Umul8_16+0)+0,w
 12053  1534  0873               	movwf	(i1__Umul8_16@word_mpld+1)
 12054  1535  00F7               	goto	i1l2519
 12055  1536  2D37               	line	50
 12056                           	
 12057                           i1l836:	
 12058  1537                     	line	51
 12059                           	
 12060                           i1l2519:	
 12061  1537                     	btfss	(i1__Umul8_16@multiplier),(0)&7
 12062  1537  1C78               	goto	u312_21
 12063  1538  2D3A               	goto	u312_20
 12064  1539  2D3B               u312_21:
 12065  153A                     	goto	i1l837
 12066  153A  2D41               u312_20:
 12067  153B                     	line	52
 12068                           	
 12069                           i1l2521:	
 12070  153B                     	movf	(i1__Umul8_16@word_mpld),w
 12071  153B  0876               	addwf	(i1__Umul8_16@product),f
 12072  153C  07F4               	skipnc
 12073  153D  1803               	incf	(i1__Umul8_16@product+1),f
 12074  153E  0AF5               	movf	(i1__Umul8_16@word_mpld+1),w
 12075  153F  0877               	addwf	(i1__Umul8_16@product+1),f
 12076  1540  07F5               	line	53
 12077                           	
 12078                           i1l837:	
 12079  1541                     	line	54
 12080                           	movlw	01h
 12081  1541  3001               	
 12082                           u313_25:
 12083  1542                     	clrc
 12084  1542  1003               	rlf	(i1__Umul8_16@word_mpld),f
 12085  1543  0DF6               	rlf	(i1__Umul8_16@word_mpld+1),f
 12086  1544  0DF7               	addlw	-1
 12087  1545  3EFF               	skipz
 12088  1546  1D03               	goto	u313_25
 12089  1547  2D42               	line	55
 12090                           	clrc
 12091  1548  1003               	rrf	(i1__Umul8_16@multiplier),f
 12092  1549  0CF8               
 12093                           	line	56
 12094                           	
 12095                           i1l2523:	
 12096  154A                     	movf	((i1__Umul8_16@multiplier)),w
 12097  154A  0878               	btfss	status,2
 12098  154B  1D03               	goto	u314_21
 12099  154C  2D4E               	goto	u314_20
 12100  154D  2D4F               u314_21:
 12101  154E                     	goto	i1l2519
 12102  154E  2D37               u314_20:
 12103  154F                     	goto	i1l2525
 12104  154F  2D50               	
 12105                           i1l838:	
 12106  1550                     	line	59
 12107                           	
 12108                           i1l2525:	
 12109  1550                     	movf	(i1__Umul8_16@product+1),w
 12110  1550  0875               	movwf	(?i1__Umul8_16+1)
 12111  1551  00F1               	movf	(i1__Umul8_16@product),w
 12112  1552  0874               	movwf	(?i1__Umul8_16)
 12113  1553  00F0               	goto	i1l839
 12114  1554  2D55               	
 12115                           i1l2527:	
 12116  1555                     	line	60
 12117                           	
 12118                           i1l839:	
 12119  1555                     	return
 12120  1555  0008               	opt stack 0
 12121                           GLOBAL	__end_ofi1__Umul8_16
 12122                           	__end_ofi1__Umul8_16:
 12123  1556                     	signat	i1__Umul8_16,90
 12124                           	global	i1_salvatemp
 12125                           
 12126 ;; *************** function i1_salvatemp *****************
 12127 ;; Defined at:
 12128 ;;		line 33 in file "recept.c"
 12129 ;; Parameters:    Size  Location     Type
 12130 ;;  temp            1    wreg     unsigned char 
 12131 ;; Auto vars:     Size  Location     Type
 12132 ;;  temp            1   11[COMMON] unsigned char 
 12133 ;;  salvatemp       2   12[COMMON] unsigned int 
 12134 ;; Return value:  Size  Location     Type
 12135 ;;                  1    wreg      void 
 12136 ;; Registers used:
 12137 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12138 ;; Tracked objects:
 12139 ;;		On entry : 0/0
 12140 ;;		On exit  : 0/0
 12141 ;;		Unchanged: 0/0
 12142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12143 ;;      Params:         0       0       0       0       0
 12144 ;;      Locals:         3       0       0       0       0
 12145 ;;      Temps:          0       0       0       0       0
 12146 ;;      Totals:         3       0       0       0       0
 12147 ;;Total ram usage:        3 bytes
 12148 ;; Hardware stack levels used:    1
 12149 ;; Hardware stack levels required when called:    3
 12150 ;; This function calls:
 12151 ;;		i1_EEPROM_read
 12152 ;;		i1_EEPROM_write
 12153 ;; This function is called by:
 12154 ;;		_myISR
 12155 ;; This function uses a non-reentrant model
 12156 ;;
 12157                           psect	text42,local,class=CODE,delta=2,merge=1,group=0
 12158                           	file	"recept.c"
 12159                           	line	33
 12160                           global __ptext42
 12161                           __ptext42:	;psect for function i1_salvatemp
 12162  1415                     psect	text42
 12163                           	file	"recept.c"
 12164                           	line	33
 12165                           	global	__size_ofi1_salvatemp
 12166                           	__size_ofi1_salvatemp	equ	__end_ofi1_salvatemp-i1_salvatemp
 12167  001C                     	
 12168                           i1_salvatemp:	
 12169  1415                     ;incstack = 0
 12170 ;; hardware stack exceeded
 12171                           	opt	stack 0
 12172                           ; Regs used in i1_salvatemp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12173                           ;i1salvatemp@temp stored from wreg
 12174                           	movwf	(i1salvatemp@temp)
 12175  1415  00FB               	line	36
 12176                           	
 12177                           i1l3093:	
 12178  1416                     ;recept.c: 33: void salvatemp(unsigned char temp);recept.c: 34: {;recept.c: 35:     unsi
                                 gned int valor;;recept.c: 36:     valor = EEPROM_read(temp);
 12179                           	movf	(i1salvatemp@temp),w
 12180  1416  087B               	fcall	i1_EEPROM_read
 12181  1417  160A  118A  23F9  160A  118A  	movf	(1+(?i1_EEPROM_read)),w
 12182  141C  0872               	movwf	(i1salvatemp@valor+1)
 12183  141D  00FD               	movf	(0+(?i1_EEPROM_read)),w
 12184  141E  0871               	movwf	(i1salvatemp@valor)
 12185  141F  00FC               	line	37
 12186                           	
 12187                           i1l3095:	
 12188  1420                     ;recept.c: 37:     valor++;
 12189                           	movlw	01h
 12190  1420  3001               	addwf	(i1salvatemp@valor),f
 12191  1421  07FC               	skipnc
 12192  1422  1803               	incf	(i1salvatemp@valor+1),f
 12193  1423  0AFD               	movlw	0
 12194  1424  3000               	addwf	(i1salvatemp@valor+1),f
 12195  1425  07FD               	line	38
 12196                           	
 12197                           i1l3097:	
 12198  1426                     ;recept.c: 38:     EEPROM_write(temp,valor);
 12199                           	movf	(i1salvatemp@valor+1),w
 12200  1426  087D               	movwf	(i1EEPROM_write@value+1)
 12201  1427  00F8               	movf	(i1salvatemp@valor),w
 12202  1428  087C               	movwf	(i1EEPROM_write@value)
 12203  1429  00F7               	movf	(i1salvatemp@temp),w
 12204  142A  087B               	fcall	i1_EEPROM_write
 12205  142B  160A  118A  237A  160A  118A  	line	39
 12206                           	
 12207                           i1l279:	
 12208  1430                     	return
 12209  1430  0008               	opt stack 0
 12210                           GLOBAL	__end_ofi1_salvatemp
 12211                           	__end_ofi1_salvatemp:
 12212  1431                     	signat	i1_salvatemp,89
 12213                           	global	i1_EEPROM_write
 12214                           
 12215 ;; *************** function i1_EEPROM_write *****************
 12216 ;; Defined at:
 12217 ;;		line 105 in file "recept.c"
 12218 ;; Parameters:    Size  Location     Type
 12219 ;;  pont            1    wreg     unsigned char 
 12220 ;;  value           2    7[COMMON] unsigned int 
 12221 ;; Auto vars:     Size  Location     Type
 12222 ;;  pont            1   10[COMMON] unsigned char 
 12223 ;; Return value:  Size  Location     Type
 12224 ;;                  1    wreg      void 
 12225 ;; Registers used:
 12226 ;;		wreg, status,2, status,0, pclath, cstack
 12227 ;; Tracked objects:
 12228 ;;		On entry : 0/0
 12229 ;;		On exit  : 0/0
 12230 ;;		Unchanged: 0/0
 12231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12232 ;;      Params:         2       0       0       0       0
 12233 ;;      Locals:         1       0       0       0       0
 12234 ;;      Temps:          1       0       0       0       0
 12235 ;;      Totals:         4       0       0       0       0
 12236 ;;Total ram usage:        4 bytes
 12237 ;; Hardware stack levels used:    1
 12238 ;; Hardware stack levels required when called:    2
 12239 ;; This function calls:
 12240 ;;		i1_EEPROM_WriteByte
 12241 ;; This function is called by:
 12242 ;;		i1_salvatemp
 12243 ;; This function uses a non-reentrant model
 12244 ;;
 12245                           psect	text43,local,class=CODE,delta=2,merge=1,group=0
 12246                           	line	105
 12247                           global __ptext43
 12248                           __ptext43:	;psect for function i1_EEPROM_write
 12249  137A                     psect	text43
 12250                           	file	"recept.c"
 12251                           	line	105
 12252                           	global	__size_ofi1_EEPROM_write
 12253                           	__size_ofi1_EEPROM_write	equ	__end_ofi1_EEPROM_write-i1_EEPROM_write
 12254  0017                     	
 12255                           i1_EEPROM_write:	
 12256  137A                     ;incstack = 0
 12257 ;; hardware stack exceeded
 12258                           	opt	stack 0
 12259                           ; Regs used in i1_EEPROM_write: [wreg+status,2+status,0+pclath+cstack]
 12260                           ;i1EEPROM_write@pont stored from wreg
 12261                           	movwf	(i1EEPROM_write@pont)
 12262  137A  00FA               	line	107
 12263                           	
 12264                           i1l2665:	
 12265  137B                     ;recept.c: 105: void EEPROM_write(unsigned char pont,unsigned int value);recept.c: 106: 
                                 {;recept.c: 107:     EEPROM_WriteByte(pont,value/256);
 12266                           	movf	(i1EEPROM_write@value+1),w
 12267  137B  0878               	movwf	(??i1_EEPROM_write+0)+0
 12268  137C  00F9               	movf	(??i1_EEPROM_write+0)+0,w
 12269  137D  0879               	movwf	(i1EEPROM_WriteByte@eepromData)
 12270  137E  00F4               	movf	(i1EEPROM_write@pont),w
 12271  137F  087A               	fcall	i1_EEPROM_WriteByte
 12272  1380  160A  118A  2604  160A  118A  	line	108
 12273                           ;recept.c: 108:     EEPROM_WriteByte(pont+100,value%256);
 12274                           	movf	(i1EEPROM_write@value),w
 12275  1385  0877               	movwf	(??i1_EEPROM_write+0)+0
 12276  1386  00F9               	movf	(??i1_EEPROM_write+0)+0,w
 12277  1387  0879               	movwf	(i1EEPROM_WriteByte@eepromData)
 12278  1388  00F4               	movf	(i1EEPROM_write@pont),w
 12279  1389  087A               	addlw	064h
 12280  138A  3E64               	fcall	i1_EEPROM_WriteByte
 12281  138B  160A  118A  2604  160A  118A  	line	109
 12282                           	
 12283                           i1l306:	
 12284  1390                     	return
 12285  1390  0008               	opt stack 0
 12286                           GLOBAL	__end_ofi1_EEPROM_write
 12287                           	__end_ofi1_EEPROM_write:
 12288  1391                     	signat	i1_EEPROM_write,89
 12289                           	global	i1_EEPROM_WriteByte
 12290                           
 12291 ;; *************** function i1_EEPROM_WriteByte *****************
 12292 ;; Defined at:
 12293 ;;		line 115 in file "recept.c"
 12294 ;; Parameters:    Size  Location     Type
 12295 ;;  eepromAddres    1    wreg     unsigned char 
 12296 ;;  eepromData      1    4[COMMON] unsigned char 
 12297 ;; Auto vars:     Size  Location     Type
 12298 ;;  eepromAddres    1    5[COMMON] unsigned char 
 12299 ;;  EEPROM_Write    1    6[COMMON] unsigned char 
 12300 ;; Return value:  Size  Location     Type
 12301 ;;                  1    wreg      void 
 12302 ;; Registers used:
 12303 ;;		wreg, status,2, status,0, pclath, cstack
 12304 ;; Tracked objects:
 12305 ;;		On entry : 0/0
 12306 ;;		On exit  : 0/0
 12307 ;;		Unchanged: 0/0
 12308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12309 ;;      Params:         1       0       0       0       0
 12310 ;;      Locals:         2       0       0       0       0
 12311 ;;      Temps:          0       0       0       0       0
 12312 ;;      Totals:         3       0       0       0       0
 12313 ;;Total ram usage:        3 bytes
 12314 ;; Hardware stack levels used:    1
 12315 ;; Hardware stack levels required when called:    1
 12316 ;; This function calls:
 12317 ;;		i1_delay
 12318 ;; This function is called by:
 12319 ;;		i1_EEPROM_write
 12320 ;; This function uses a non-reentrant model
 12321 ;;
 12322                           psect	text44,local,class=CODE,delta=2,merge=1,group=0
 12323                           	line	115
 12324                           global __ptext44
 12325                           __ptext44:	;psect for function i1_EEPROM_WriteByte
 12326  1604                     psect	text44
 12327                           	file	"recept.c"
 12328                           	line	115
 12329                           	global	__size_ofi1_EEPROM_WriteByte
 12330                           	__size_ofi1_EEPROM_WriteByte	equ	__end_ofi1_EEPROM_WriteByte-i1_EEPROM_WriteByte
 12331  0030                     	
 12332                           i1_EEPROM_WriteByte:	
 12333  1604                     ;incstack = 0
 12334 ;; hardware stack exceeded
 12335                           	opt	stack 0
 12336                           ; Regs used in i1_EEPROM_WriteByte: [wreg+status,2+status,0+pclath+cstack]
 12337                           ;i1EEPROM_WriteByte@eepromAddress stored from wreg
 12338                           	movwf	(i1EEPROM_WriteByte@eepromAddress)
 12339  1604  00F5               	line	118
 12340                           	
 12341                           i1l2479:	
 12342  1605                     ;recept.c: 115: void EEPROM_WriteByte(unsigned char eepromAddress, unsigned char eepromD
                                 ata);recept.c: 116: {;recept.c: 117:     unsigned char gie_Status;;recept.c: 118:     wh
                                 ile(WR);
 12343                           	goto	i1l312
 12344  1605  2E06               	
 12345                           i1l313:	
 12346  1606                     	
 12347                           i1l312:	
 12348  1606                     	bsf	status, 5	;RP0=1, select bank3
 12349  1606  1683               	bsf	status, 6	;RP1=1, select bank3
 12350  1607  1703               	btfsc	(3169/8)^0180h,(3169)&7	;volsfr
 12351  1608  188C               	goto	u307_21
 12352  1609  2E0B               	goto	u307_20
 12353  160A  2E0C               u307_21:
 12354  160B                     	goto	i1l312
 12355  160B  2E06               u307_20:
 12356  160C                     	goto	i1l2481
 12357  160C  2E0D               	
 12358                           i1l314:	
 12359  160D                     	line	119
 12360                           	
 12361                           i1l2481:	
 12362  160D                     ;recept.c: 119:     EEADR=eepromAddress;
 12363                           	movf	(i1EEPROM_WriteByte@eepromAddress),w
 12364  160D  0875               	bcf	status, 5	;RP0=0, select bank2
 12365  160E  1283               	bsf	status, 6	;RP1=1, select bank2
 12366  160F  1703               	movwf	(269)^0100h	;volatile
 12367  1610  008D               	line	120
 12368                           ;recept.c: 120:     EEDATA=eepromData;
 12369                           	movf	(i1EEPROM_WriteByte@eepromData),w
 12370  1611  0874               	movwf	(268)^0100h	;volatile
 12371  1612  008C               	line	121
 12372                           	
 12373                           i1l2483:	
 12374  1613                     ;recept.c: 121:     EECON1bits.EEPGD = 0;
 12375                           	bsf	status, 5	;RP0=1, select bank3
 12376  1613  1683               	bsf	status, 6	;RP1=1, select bank3
 12377  1614  1703               	bcf	(396)^0180h,7	;volsfr
 12378  1615  138C               	line	122
 12379                           	
 12380                           i1l2485:	
 12381  1616                     ;recept.c: 122:     WREN=1;
 12382                           	bsf	(3170/8)^0180h,(3170)&7	;volsfr
 12383  1616  150C               	line	123
 12384                           	
 12385                           i1l2487:	
 12386  1617                     ;recept.c: 123:     gie_Status = GIE;
 12387                           	movlw	0
 12388  1617  3000               	btfsc	(95/8),(95)&7	;volatile
 12389  1618  1B8B               	movlw	1
 12390  1619  3001               	movwf	(i1EEPROM_WriteByte@gie_Status)
 12391  161A  00F6               	line	124
 12392                           	
 12393                           i1l2489:	
 12394  161B                     ;recept.c: 124:     GIE = 0;
 12395                           	bcf	(95/8),(95)&7	;volatile
 12396  161B  138B               	line	125
 12397                           	
 12398                           i1l2491:	
 12399  161C                     ;recept.c: 125:     EECON2=0x55;
 12400                           	movlw	low(055h)
 12401  161C  3055               	movwf	(397)^0180h	;volsfr
 12402  161D  008D               	line	126
 12403                           	
 12404                           i1l2493:	
 12405  161E                     ;recept.c: 126:     EECON2=0xaa;
 12406                           	movlw	low(0AAh)
 12407  161E  30AA               	movwf	(397)^0180h	;volsfr
 12408  161F  008D               	line	127
 12409                           	
 12410                           i1l2495:	
 12411  1620                     ;recept.c: 127:     WR=1;
 12412                           	bsf	(3169/8)^0180h,(3169)&7	;volsfr
 12413  1620  148C               	line	128
 12414                           	
 12415                           i1l2497:	
 12416  1621                     ;recept.c: 128:     GIE = gie_Status;
 12417                           	btfsc	(i1EEPROM_WriteByte@gie_Status),0
 12418  1621  1876               	goto	u308_21
 12419  1622  2E24               	goto	u308_20
 12420  1623  2E26               	
 12421                           u308_21:
 12422  1624                     	bsf	(95/8),(95)&7	;volatile
 12423  1624  178B               	goto	u309_24
 12424  1625  2E27               u308_20:
 12425  1626                     	bcf	(95/8),(95)&7	;volatile
 12426  1626  138B               u309_24:
 12427  1627                     	line	129
 12428                           	
 12429                           i1l2499:	
 12430  1627                     ;recept.c: 129:     delay(1);
 12431                           	movlw	01h
 12432  1627  3001               	movwf	(i1delay@t)
 12433  1628  00F0               	movlw	0
 12434  1629  3000               	movwf	((i1delay@t))+1
 12435  162A  00F1               	fcall	i1_delay
 12436  162B  160A  118A  2391  160A  118A  	line	130
 12437                           	
 12438                           i1l2501:	
 12439  1630                     ;recept.c: 130:     WREN=0;
 12440                           	bsf	status, 5	;RP0=1, select bank3
 12441  1630  1683               	bsf	status, 6	;RP1=1, select bank3
 12442  1631  1703               	bcf	(3170/8)^0180h,(3170)&7	;volsfr
 12443  1632  110C               	line	131
 12444                           	
 12445                           i1l315:	
 12446  1633                     	return
 12447  1633  0008               	opt stack 0
 12448                           GLOBAL	__end_ofi1_EEPROM_WriteByte
 12449                           	__end_ofi1_EEPROM_WriteByte:
 12450  1634                     	signat	i1_EEPROM_WriteByte,89
 12451                           	global	i1_delay
 12452                           
 12453 ;; *************** function i1_delay *****************
 12454 ;; Defined at:
 12455 ;;		line 4 in file "delay.c"
 12456 ;; Parameters:    Size  Location     Type
 12457 ;;  t               2    0[COMMON] unsigned int 
 12458 ;; Auto vars:     Size  Location     Type
 12459 ;;		None
 12460 ;; Return value:  Size  Location     Type
 12461 ;;                  1    wreg      void 
 12462 ;; Registers used:
 12463 ;;		wreg, status,2, status,0
 12464 ;; Tracked objects:
 12465 ;;		On entry : 0/0
 12466 ;;		On exit  : 0/0
 12467 ;;		Unchanged: 0/0
 12468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12469 ;;      Params:         2       0       0       0       0
 12470 ;;      Locals:         0       0       0       0       0
 12471 ;;      Temps:          2       0       0       0       0
 12472 ;;      Totals:         4       0       0       0       0
 12473 ;;Total ram usage:        4 bytes
 12474 ;; Hardware stack levels used:    1
 12475 ;; This function calls:
 12476 ;;		Nothing
 12477 ;; This function is called by:
 12478 ;;		i1_adcLer
 12479 ;;		i1_EEPROM_WriteByte
 12480 ;; This function uses a non-reentrant model
 12481 ;;
 12482                           psect	text45,local,class=CODE,delta=2,merge=1,group=0
 12483                           	file	"delay.c"
 12484                           	line	4
 12485                           global __ptext45
 12486                           __ptext45:	;psect for function i1_delay
 12487  1391                     psect	text45
 12488                           	file	"delay.c"
 12489                           	line	4
 12490                           	global	__size_ofi1_delay
 12491                           	__size_ofi1_delay	equ	__end_ofi1_delay-i1_delay
 12492  0019                     	
 12493                           i1_delay:	
 12494  1391                     ;incstack = 0
 12495 ;; hardware stack exceeded
 12496                           	opt	stack 0
 12497                           ; Regs used in i1_delay: [wreg+status,2+status,0]
 12498                           	line	6
 12499                           	
 12500                           i1l2153:	
 12501  1391                     ;delay.c: 4: void delay(unsigned int t);delay.c: 5: {;delay.c: 6:     while (t)
 12502                           	goto	i1l2157
 12503  1391  2BA2               	
 12504                           i1l6:	
 12505  1392                     	line	8
 12506                           	
 12507                           i1l2155:	
 12508  1392                     ;delay.c: 7:     {;delay.c: 8:         _delay((unsigned long)((10)*(20000000/4000.0)));

 12509                           	opt asmopt_push
 12510                           opt asmopt_off
 12511                           movlw	65
 12512  1392  3041               movwf	((??i1_delay+0)+0+1),f
 12513  1393  00F3               	movlw	238
 12514  1394  30EE               movwf	((??i1_delay+0)+0),f
 12515  1395  00F2               	u437_27:
 12516  1396                     decfsz	((??i1_delay+0)+0),f
 12517  1396  0BF2               	goto	u437_27
 12518  1397  2B96               	decfsz	((??i1_delay+0)+0+1),f
 12519  1398  0BF3               	goto	u437_27
 12520  1399  2B96               	nop
 12521  139A  0000               opt asmopt_pop
 12522                           
 12523                           	line	9
 12524                           ;delay.c: 9:         --t;
 12525                           	movlw	01h
 12526  139B  3001               	subwf	(i1delay@t),f
 12527  139C  02F0               	movlw	0
 12528  139D  3000               	skipc
 12529  139E  1C03               	decf	(i1delay@t+1),f
 12530  139F  03F1               	subwf	(i1delay@t+1),f
 12531  13A0  02F1               	goto	i1l2157
 12532  13A1  2BA2               	line	10
 12533                           ;delay.c: 10:     }
 12534                           	
 12535                           i1l5:	
 12536  13A2                     	line	6
 12537                           	
 12538                           i1l2157:	
 12539  13A2                     ;delay.c: 6:     while (t)
 12540                           	movf	((i1delay@t)),w
 12541  13A2  0870               iorwf	((i1delay@t+1)),w
 12542  13A3  0471               	btfss	status,2
 12543  13A4  1D03               	goto	u229_21
 12544  13A5  2BA7               	goto	u229_20
 12545  13A6  2BA8               u229_21:
 12546  13A7                     	goto	i1l2155
 12547  13A7  2B92               u229_20:
 12548  13A8                     	goto	i1l8
 12549  13A8  2BA9               	
 12550                           i1l7:	
 12551  13A9                     	line	11
 12552                           	
 12553                           i1l8:	
 12554  13A9                     	return
 12555  13A9  0008               	opt stack 0
 12556                           GLOBAL	__end_ofi1_delay
 12557                           	__end_ofi1_delay:
 12558  13AA                     	signat	i1_delay,89
 12559                           	global	i1_EEPROM_read
 12560                           
 12561 ;; *************** function i1_EEPROM_read *****************
 12562 ;; Defined at:
 12563 ;;		line 110 in file "recept.c"
 12564 ;; Parameters:    Size  Location     Type
 12565 ;;  pont            1    wreg     unsigned char 
 12566 ;; Auto vars:     Size  Location     Type
 12567 ;;  pont            1    5[COMMON] unsigned char 
 12568 ;; Return value:  Size  Location     Type
 12569 ;;                  2    1[COMMON] int 
 12570 ;; Registers used:
 12571 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12572 ;; Tracked objects:
 12573 ;;		On entry : 0/0
 12574 ;;		On exit  : 0/0
 12575 ;;		Unchanged: 0/0
 12576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12577 ;;      Params:         2       0       0       0       0
 12578 ;;      Locals:         1       0       0       0       0
 12579 ;;      Temps:          2       0       0       0       0
 12580 ;;      Totals:         5       0       0       0       0
 12581 ;;Total ram usage:        5 bytes
 12582 ;; Hardware stack levels used:    1
 12583 ;; Hardware stack levels required when called:    1
 12584 ;; This function calls:
 12585 ;;		i1_EEPROM_ReadByte
 12586 ;; This function is called by:
 12587 ;;		i1_salvatemp
 12588 ;; This function uses a non-reentrant model
 12589 ;;
 12590                           psect	text46,local,class=CODE,delta=2,merge=1,group=0
 12591                           	file	"recept.c"
 12592                           	line	110
 12593                           global __ptext46
 12594                           __ptext46:	;psect for function i1_EEPROM_read
 12595  13F9                     psect	text46
 12596                           	file	"recept.c"
 12597                           	line	110
 12598                           	global	__size_ofi1_EEPROM_read
 12599                           	__size_ofi1_EEPROM_read	equ	__end_ofi1_EEPROM_read-i1_EEPROM_read
 12600  001C                     	
 12601                           i1_EEPROM_read:	
 12602  13F9                     ;incstack = 0
 12603 ;; hardware stack exceeded
 12604                           	opt	stack 0
 12605                           ; Regs used in i1_EEPROM_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12606                           ;i1EEPROM_read@pont stored from wreg
 12607                           	movwf	(i1EEPROM_read@pont)
 12608  13F9  00F5               	line	112
 12609                           	
 12610                           i1l2667:	
 12611  13FA                     ;recept.c: 110: int EEPROM_read(unsigned char pont);recept.c: 111: {;recept.c: 112:     
                                    return ((EEPROM_ReadByte(pont)*256)+EEPROM_ReadByte(pont+100));
 12612                           	movf	(i1EEPROM_read@pont),w
 12613  13FA  0875               	fcall	i1_EEPROM_ReadByte
 12614  13FB  160A  118A  23AA  160A  118A  	movwf	(??i1_EEPROM_read+0)+0
 12615  1400  00F3               	clrf	(??i1_EEPROM_read+0)+0+1
 12616  1401  01F4               	movf	(??i1_EEPROM_read+0)+0,w
 12617  1402  0873               	movwf	(??i1_EEPROM_read+0)+1
 12618  1403  00F4               	clrf	(??i1_EEPROM_read+0)+0
 12619  1404  01F3               	movf	(i1EEPROM_read@pont),w
 12620  1405  0875               	addlw	064h
 12621  1406  3E64               	fcall	i1_EEPROM_ReadByte
 12622  1407  160A  118A  23AA  160A  118A  	addwf	0+(??i1_EEPROM_read+0)+0,w
 12623  140C  0773               	movwf	(?i1_EEPROM_read)
 12624  140D  00F1               	movlw	0
 12625  140E  3000               	skipnc
 12626  140F  1803               	movlw	1
 12627  1410  3001               	addwf	1+(??i1_EEPROM_read+0)+0,w
 12628  1411  0774               	movwf	1+(?i1_EEPROM_read)
 12629  1412  00F2               	goto	i1l309
 12630  1413  2C14               	
 12631                           i1l2669:	
 12632  1414                     	line	113
 12633                           	
 12634                           i1l309:	
 12635  1414                     	return
 12636  1414  0008               	opt stack 0
 12637                           GLOBAL	__end_ofi1_EEPROM_read
 12638                           	__end_ofi1_EEPROM_read:
 12639  1415                     	signat	i1_EEPROM_read,90
 12640                           	global	i1_EEPROM_ReadByte
 12641                           
 12642 ;; *************** function i1_EEPROM_ReadByte *****************
 12643 ;; Defined at:
 12644 ;;		line 132 in file "recept.c"
 12645 ;; Parameters:    Size  Location     Type
 12646 ;;  eepromAddres    1    wreg     unsigned char 
 12647 ;; Auto vars:     Size  Location     Type
 12648 ;;  eepromAddres    1    0[COMMON] unsigned char 
 12649 ;; Return value:  Size  Location     Type
 12650 ;;                  1    wreg      unsigned char 
 12651 ;; Registers used:
 12652 ;;		wreg
 12653 ;; Tracked objects:
 12654 ;;		On entry : 0/0
 12655 ;;		On exit  : 0/0
 12656 ;;		Unchanged: 0/0
 12657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12658 ;;      Params:         0       0       0       0       0
 12659 ;;      Locals:         1       0       0       0       0
 12660 ;;      Temps:          0       0       0       0       0
 12661 ;;      Totals:         1       0       0       0       0
 12662 ;;Total ram usage:        1 bytes
 12663 ;; Hardware stack levels used:    1
 12664 ;; This function calls:
 12665 ;;		Nothing
 12666 ;; This function is called by:
 12667 ;;		i1_EEPROM_read
 12668 ;; This function uses a non-reentrant model
 12669 ;;
 12670                           psect	text47,local,class=CODE,delta=2,merge=1,group=0
 12671                           	line	132
 12672                           global __ptext47
 12673                           __ptext47:	;psect for function i1_EEPROM_ReadByte
 12674  13AA                     psect	text47
 12675                           	file	"recept.c"
 12676                           	line	132
 12677                           	global	__size_ofi1_EEPROM_ReadByte
 12678                           	__size_ofi1_EEPROM_ReadByte	equ	__end_ofi1_EEPROM_ReadByte-i1_EEPROM_ReadByte
 12679  001A                     	
 12680                           i1_EEPROM_ReadByte:	
 12681  13AA                     ;incstack = 0
 12682 ;; hardware stack exceeded
 12683                           	opt	stack 0
 12684                           ; Regs used in i1_EEPROM_ReadByte: [wreg]
 12685                           ;i1EEPROM_ReadByte@eepromAddress stored from wreg
 12686                           	movwf	(i1EEPROM_ReadByte@eepromAddress)
 12687  13AA  00F0               	line	134
 12688                           	
 12689                           i1l2503:	
 12690  13AB                     ;recept.c: 132: unsigned char EEPROM_ReadByte(unsigned char eepromAddress);recept.c: 133
                                 : {;recept.c: 134:     while(RD || WR);
 12691                           	goto	i1l318
 12692  13AB  2BAC               	
 12693                           i1l319:	
 12694  13AC                     	
 12695                           i1l318:	
 12696  13AC                     	bsf	status, 5	;RP0=1, select bank3
 12697  13AC  1683               	bsf	status, 6	;RP1=1, select bank3
 12698  13AD  1703               	btfsc	(3168/8)^0180h,(3168)&7	;volsfr
 12699  13AE  180C               	goto	u310_21
 12700  13AF  2BB1               	goto	u310_20
 12701  13B0  2BB2               u310_21:
 12702  13B1                     	goto	i1l318
 12703  13B1  2BAC               u310_20:
 12704  13B2                     	
 12705                           i1l2505:	
 12706  13B2                     	btfsc	(3169/8)^0180h,(3169)&7	;volsfr
 12707  13B2  188C               	goto	u311_21
 12708  13B3  2BB5               	goto	u311_20
 12709  13B4  2BB6               u311_21:
 12710  13B5                     	goto	i1l318
 12711  13B5  2BAC               u311_20:
 12712  13B6                     	goto	i1l2507
 12713  13B6  2BB7               	
 12714                           i1l320:	
 12715  13B7                     	line	135
 12716                           	
 12717                           i1l2507:	
 12718  13B7                     ;recept.c: 135:     EEADR=eepromAddress;
 12719                           	movf	(i1EEPROM_ReadByte@eepromAddress),w
 12720  13B7  0870               	bcf	status, 5	;RP0=0, select bank2
 12721  13B8  1283               	bsf	status, 6	;RP1=1, select bank2
 12722  13B9  1703               	movwf	(269)^0100h	;volatile
 12723  13BA  008D               	line	136
 12724                           	
 12725                           i1l2509:	
 12726  13BB                     ;recept.c: 136:     EECON1bits.EEPGD = 0;
 12727                           	bsf	status, 5	;RP0=1, select bank3
 12728  13BB  1683               	bsf	status, 6	;RP1=1, select bank3
 12729  13BC  1703               	bcf	(396)^0180h,7	;volsfr
 12730  13BD  138C               	line	137
 12731                           	
 12732                           i1l2511:	
 12733  13BE                     ;recept.c: 137:     RD = 1;
 12734                           	bsf	(3168/8)^0180h,(3168)&7	;volsfr
 12735  13BE  140C               	line	138
 12736                           ;recept.c: 138:     return(EEDATA);
 12737                           	bcf	status, 5	;RP0=0, select bank2
 12738  13BF  1283               	bsf	status, 6	;RP1=1, select bank2
 12739  13C0  1703               	movf	(268)^0100h,w	;volatile
 12740  13C1  080C               	goto	i1l321
 12741  13C2  2BC3               	
 12742                           i1l2513:	
 12743  13C3                     	line	139
 12744                           	
 12745                           i1l321:	
 12746  13C3                     	return
 12747  13C3  0008               	opt stack 0
 12748                           GLOBAL	__end_ofi1_EEPROM_ReadByte
 12749                           	__end_ofi1_EEPROM_ReadByte:
 12750  13C4                     	signat	i1_EEPROM_ReadByte,89
 12751                           global	___latbits
 12752                           ___latbits	equ	2
 12753  0002                     	global	btemp
 12754                           	btemp set 07Eh
 12755  007E                     
 12756                           	DABS	1,126,2	;btemp
 12757                           	global	wtemp0
 12758                           	wtemp0 set btemp+0
 12759  007E                     	end


Data Sizes:
    Strings     121
    Constant    16
    Data        7
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     44      48
    BANK1            80     65      72
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    writeLCD@ptr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[12]), STR_9(CODE[10]), STR_8(CODE[17]), TempMed@md(BANK1[3]), 
		 -> tempatt@Tp(BANK1[3]), STR_7(CODE[17]), STR_6(CODE[12]), STR_5(CODE[17]), 
		 -> STR_4(CODE[9]), STR_3(CODE[10]), STR_2(CODE[8]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myISR in COMMON

    _myISR->i1_salvatemp
    i1_temperaturaLer->i1___xxtofl
    i1_adcLer->i1_delay
    i1___fltol->i1___xxtofl
    i1___flmul->i1___xxtofl
    i1_salvatemp->i1_EEPROM_write
    i1_EEPROM_write->i1_EEPROM_WriteByte
    i1_EEPROM_WriteByte->i1_delay
    i1_EEPROM_read->i1_EEPROM_ReadByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    _myISR->i1_temperaturaLer
    i1_temperaturaLer->i1___fltol
    i1___fltol->i1___flmul

Critical Paths under _main in BANK1

    _main->_tempatt
    _temperaturaInicializar->_delay
    _tempatt->_temperaturaLer
    _temperaturaLer->___fltol
    _adcLer->_delay
    ___fltol->___flmul
    ___flmul->___xxtofl
    _showtemp->_writeLCD
    _salvatemp->_EEPROM_write
    _resetemp->_EEPROM_write
    _EEPROM_write->_EEPROM_WriteByte
    _EEPROM_WriteByte->_delay
    _initLCD->_cmdLCD
    _erasertemp->_writeLCD
    _TempMed->_media
    _media->___lldiv
    _EEPROM_read->_EEPROM_ReadByte
    _Telaprincipal->_writeLCD
    _SplashScreen1->_writeLCD
    _SplashScreen0->_writeLCD
    _writeLCD->_gotoxy
    _putLCD->_delay
    _gotoxy->_cmdLCD
    _cmdLCD->_delay

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   58792
                                             62 BANK1      3     3      0
                      _SplashScreen0
                      _SplashScreen1
                      _Telaprincipal
                            _TempMed
                             _adcLer
                             _cmdLCD
                              _delay
                         _erasertemp
                            _initLCD
                             _putLCD
                           _resetemp
                          _salvatemp
                           _showtemp
                     _tecladoIniciar
                         _tecladoLer
                            _tempatt
             _temperaturaInicializar
                     _temperaturaLer
                              _tmron
 ---------------------------------------------------------------------------------
 (1) _tmron                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _temperaturaInicializar                               0     0      0    1011
                              _delay
 ---------------------------------------------------------------------------------
 (1) _tempatt                                              7     7      0    9950
                                             55 BANK1      7     7      0
                            ___awdiv
                            ___awmod
                     _temperaturaLer
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _temperaturaLer                                       4     4      0    4200
                                             51 BANK1      4     4      0
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _adcLer
 ---------------------------------------------------------------------------------
 (2) _adcLer                                               4     2      2    1034
                                              4 BANK1      4     2      2
                              _delay
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     305
                                             40 BANK1     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2417
                                             14 BANK1     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK1      9     7      2
 ---------------------------------------------------------------------------------
 (1) _tecladoLer                                           1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _tecladoIniciar                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _showtemp                                             0     0      0    4451
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _salvatemp                                            3     3      0    1604
                                             11 BANK1      3     3      0
                        _EEPROM_read
                       _EEPROM_write
 ---------------------------------------------------------------------------------
 (1) _resetemp                                             2     2      0    1538
                                             11 BANK1      2     2      0
                       _EEPROM_write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_write                                         4     2      2    1470
                                              7 BANK1      4     2      2
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_WriteByte                                     3     2      1    1230
                                              4 BANK1      3     2      1
                              _delay
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0    2199
                             _cmdLCD
                              _delay
 ---------------------------------------------------------------------------------
 (1) _erasertemp                                           0     0      0    4451
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _TempMed                                              7     7      0    9119
                                             32 BANK1      7     7      0
                            ___awdiv
                            ___awmod
                             _gotoxy
                              _media
                             _putLCD
                           _writeLCD
 ---------------------------------------------------------------------------------
 (2) _media                                               18    18      0     831
                                             14 BANK1     18    18      0
                        _EEPROM_read
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (2) _EEPROM_read                                          5     3      2      66
                                              1 BANK1      5     3      2
                    _EEPROM_ReadByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_ReadByte                                      1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (1) _Telaprincipal                                        0     0      0    6989
                             _gotoxy
                             _putLCD
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _SplashScreen1                                        0     0      0    4451
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _SplashScreen0                                        0     0      0    4451
                           _writeLCD
 ---------------------------------------------------------------------------------
 (2) _writeLCD                                             5     2      3    4451
                                             11 BANK1      5     2      3
                             _gotoxy
                             _putLCD
 ---------------------------------------------------------------------------------
 (3) _putLCD                                               3     3      0    1078
                                              4 BANK1      3     3      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _gotoxy                                               4     3      1    1460
                                              7 BANK1      4     3      1
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (4) _cmdLCD                                               3     3      0    1188
                                              4 BANK1      3     3      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                4     2      2    1011
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _myISR                                                3     3      0    3108
                                             41 BANK0      3     3      0
                        i1_salvatemp
                   i1_temperaturaLer
 ---------------------------------------------------------------------------------
 (7) i1_temperaturaLer                                     4     4      0    2640
                                             37 BANK0      4     4      0
                          i1___flmul
                          i1___fltol
                         i1___xxtofl
                           i1_adcLer
 ---------------------------------------------------------------------------------
 (8) i1_adcLer                                             4     2      2     124
                                              4 COMMON     4     2      2
                            i1_delay
 ---------------------------------------------------------------------------------
 (8) i1___xxtofl                                          14    10      4     348
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (8) i1___fltol                                           11     7      4     255
                                             26 BANK0     11     7      4
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) i1___flmul                                           26    18      8    1867
                                              0 BANK0     26    18      8
                        i1__Umul8_16
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) i1__Umul8_16                                          9     7      2     349
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) i1_salvatemp                                          3     3      0     468
                                             11 COMMON     3     3      0
                      i1_EEPROM_read
                     i1_EEPROM_write
 ---------------------------------------------------------------------------------
 (8) i1_EEPROM_write                                       4     2      2     334
                                              7 COMMON     4     2      2
                 i1_EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (9) i1_EEPROM_WriteByte                                   3     2      1     220
                                              4 COMMON     3     2      1
                            i1_delay
 ---------------------------------------------------------------------------------
 (9) i1_delay                                              4     2      2     101
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) i1_EEPROM_read                                        5     3      2      66
                                              1 COMMON     5     3      2
                  i1_EEPROM_ReadByte
 ---------------------------------------------------------------------------------
 (9) i1_EEPROM_ReadByte                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SplashScreen0
     _writeLCD
       _gotoxy
         _cmdLCD
           _delay
       _putLCD
         _delay
   _SplashScreen1
     _writeLCD
       _gotoxy
         _cmdLCD
           _delay
       _putLCD
         _delay
   _Telaprincipal
     _gotoxy
       _cmdLCD
         _delay
     _putLCD
       _delay
     _writeLCD
       _gotoxy
         _cmdLCD
           _delay
       _putLCD
         _delay
   _TempMed
     ___awdiv
     ___awmod
     _gotoxy
       _cmdLCD
         _delay
     _media
       _EEPROM_read
         _EEPROM_ReadByte
       ___lldiv
       ___wmul
     _putLCD
       _delay
     _writeLCD
       _gotoxy
         _cmdLCD
           _delay
       _putLCD
         _delay
   _adcLer
     _delay
   _cmdLCD
     _delay
   _delay
   _erasertemp
     _writeLCD
       _gotoxy
         _cmdLCD
           _delay
       _putLCD
         _delay
   _initLCD
     _cmdLCD
       _delay
     _delay
   _putLCD
     _delay
   _resetemp
     _EEPROM_write
       _EEPROM_WriteByte
         _delay
   _salvatemp
     _EEPROM_read
       _EEPROM_ReadByte
     _EEPROM_write
       _EEPROM_WriteByte
         _delay
   _showtemp
     _writeLCD
       _gotoxy
         _cmdLCD
           _delay
       _putLCD
         _delay
   _tecladoIniciar
   _tecladoLer
   _tempatt
     ___awdiv
     ___awmod
     _temperaturaLer
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _adcLer
         _delay
     _writeLCD
       _gotoxy
         _cmdLCD
           _delay
       _putLCD
         _delay
   _temperaturaInicializar
     _delay
   _temperaturaLer
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _adcLer
       _delay
   _tmron

 _myISR (ROOT)
   i1_salvatemp
     i1_EEPROM_read
       i1_EEPROM_ReadByte
     i1_EEPROM_write
       i1_EEPROM_WriteByte
         i1_delay
   i1_temperaturaLer
     i1___flmul
       i1__Umul8_16
       i1___xxtofl (ARG)
     i1___fltol
       i1___flmul (ARG)
         i1__Umul8_16
         i1___xxtofl (ARG)
       i1___xxtofl (ARG)
     i1___xxtofl
     i1_adcLer
       i1_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     41      48       7       90.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2C      30       5       60.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      86      12        0.0%
ABS                  0      0      86       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Oct 24 16:50:18 2019

                              l5 149D                                l6 1489                                l7 14A6  
                              l8 14A6                                pc 0002                               l30 0AD5  
                             l31 0AEB                               l32 0B2E                               l40 08FE  
                             l33 0B22                               l25 16E9                               l35 0B18  
                             l43 13DD                               l36 0B2A                               l28 0ADF  
                             l37 0B2E                               l61 08B4                               l46 1715  
                             l47 16F8                               l48 172C                               l80 1356  
                             l72 17FF                               l49 172C                               l58 144C  
                             l67 1469                               l83 1348                               l77 09C9  
                             _RD 0C60                               _WR 0C61                     ___awdiv@sign 00A6  
                    i1___flmul@a 0024                      i1___flmul@b 0020                               fsr 0004  
            ___wmul@multiplicand 00A2                  ??_SplashScreen0 00B0                  ??_SplashScreen1 00B0  
            __Umul8_16@word_mpld 00A6                       i1___xxtofl 0D05                              l110 15F3  
                            l111 15F8                              l200 0F91                              l112 1603  
                            l201 0F7C                              l210 0FE6                              l202 0F90  
                            l106 14E7                              l211 0FFB                              l203 0F8F  
                            l115 17B8                              l212 0FFF                              l204 0FAD  
                            l213 0FFF                              l205 0FE9                              l109 15F3  
                            l206 0FC0                              l230 0779                              l207 0FE8  
                            l231 0787                              l320 1479                              l312 166D  
                            l208 0FD3                              l240 07F9                              l232 07DF  
                            l321 1487                              l313 166D                              l209 0FE7  
                            l233 0788                              l410 158F                              l314 1674  
                            l306 13F8                              l234 07F7                              l411 15A4  
                            l315 16A8                              l235 07A2                              l412 15A9  
                            l180 1366                              l324 133A                              l236 07B1  
                            l309 1509                              l237 07CA                              l229 0764  
                            l318 146E                              l190 0EFF                              l238 07F8  
                            l319 146E                              l191 0F3B                              l183 0EA8  
                            l239 07F9                              l440 09ED                              l192 0F12  
                            l184 0EE4                              l600 0C32                              l441 09DF  
                            l409 1585                              l193 0F3A                              l185 0EBB  
                            l601 0C56                              l442 09F2                              l282 1515  
                            l194 0F25                              l186 0EE3                              l602 0C43  
                            l443 09F3                              l283 152B                              l195 0F39  
                            l187 0ECE                              l603 0C4F                              l444 0A1E  
                            l284 152B                              l196 0F38                              l188 0EE2  
                            l604 0C44                              l445 0A2E                              l197 0F56  
                            l189 0EE1                              l605 0C55                              l446 0A38  
                            l198 0F92                              l606 0C66                              l439 0A2F  
                            l287 0C82                              l279 14C6                              l199 0F69  
                            l560 0A8C                              l288 0CE7                              l800 02DF  
                            l561 0A9A                              l553 0A48                              l289 0D04  
                            l801 02C0                              l562 0AA6                              l554 0A56  
                            l570 0921                              l810 0359                              l802 02CF  
                            l563 0AAB                              l555 0A9B                              l571 0932  
                            l811 0390                              l803 02E4                              l556 0A6D  
                            l572 0933                              l812 0374                              l804 0309  
                            l820 0E8A                              l557 0A61                              l573 0944  
                            l813 0390                              l805 0300                              l821 0E10  
                            l558 0A72                              l574 0952                              l566 090E  
                            l814 0388                              l806 0308                              l830 0E52  
                            l822 0E02                              l559 0A73                              l575 095E  
                            l567 0918                              l807 0307                              l831 0E52  
                            l823 0E17                              l576 0963                              l568 0953  
                            l808 0341                              l832 0E5E                              l824 0E33  
                            l569 092D                              l809 0340                              l833 0E81  
                            l825 0E18                              l817 0DE3                              l826 0E3A  
                            l818 0DEB                              l595 0BEA                              l827 0E47  
                            l819 0DFD                              l836 15B7                              l596 0C66  
                            l828 0E3B                              l837 15C1                              l597 0C33  
                            l838 15D0                              l790 004F                              l598 0C1F  
                            l839 15D5                              l791 005A                              l599 0C20  
                            l792 006B                              l793 0080                              l794 007E  
                            l795 0089                              l796 009E                              l788 003C  
                            l789 0051                              l798 0094                              l799 039D  
                            _GIE 005F                              _LCD 0008                              i1l5 13A2  
                            i1l6 1392                              i1l7 13A9                              i1l8 13A9  
               ??_temperaturaLer 00D3                              _tim 00E7                              fsr0 0004  
                            indf 0000                     i1___fltol@f1 003A         ??_temperaturaInicializar 00A4  
                   ___awmod@sign 00A6                     __CFG_FOSC$HS 0000                     ___flmul@aexp 00C0  
                   ___flmul@bexp 00C1                     ___flmul@sign 00BB                     ___flmul@temp 00C6  
                   ___flmul@prod 00C2                     __CFG_LVP$OFF 0000                     ___fltol@exp1 00D2  
                           l2101 0AC7                             l2111 0AEE                             l2103 0ACE  
                           l2121 0B18                             l2113 0AF6                             l2105 0AD5  
                           l2201 1680                             l3001 0F29                             l2123 0B22  
                           l2115 0AF9                             l2107 0ADF                             l2131 1479  
                           l2211 168F                             l2203 1683                             l3011 0F3F  
                           l3003 0F3B                             l2125 0B2A                             l2117 0B09  
                           l2109 0AEB                             l2133 147F                             l2221 1580  
                           l2213 1691                             l2205 1684                             l3021 0F6D  
                           l3013 0F40                             l3005 0F3C                             l2141 15AF  
                           l2301 003A                             l2119 0B11                             l2135 1482  
                           l2127 146D                             l2231 15A4                             l2223 1585  
                           l2215 1692                             l2207 168A                             l3031 0F95  
                           l3023 0F80                             l3015 0F41                             l3007 0F3D  
                           l2151 15D5                             l2143 15B7                             l2311 0051  
                           l2303 003C                             l2161 08BC                             l2137 1487  
                           l2129 1474                             l2241 09ED                             l2233 15A9  
                           l2225 1589                             l2217 169A                             l2209 168B  
                           l3041 0FB1                             l3033 0F96                             l3025 0F92  
                           l3017 0F47                             l3009 0F3E                             l2145 15BB  
                           l2401 0304                             l2321 006B                             l2313 005A  
                           l2305 0041                             l3121 0723                             l2091 149D  
                           l2171 08DE                             l2163 08BF                             l2251 0A1E  
                           l2243 09F3                             l2235 09CA                             l2227 1596  
                           l2219 16A5                             l3051 0FF9                             l3043 0FC4  
                           l3035 0F97                             l3027 0F93                             l3019 0F5A  
                           l2147 15CA                             l2139 15AD                             l2411 0339  
                           l2403 0309                             l2331 0089                             l2323 0070  
                           l2315 005F                             l2307 0046                             l3131 0743  
                           l3123 0728                             l3115 0713                             l2093 0AAF  
                           l2181 13C7                             l2173 08DF                             l2165 08CF  
                           l2253 0A27                             l2245 09FC                             l2237 09DC  
                           l2229 159D                             l3061 14AA                             l3053 0FFA  
                           l3045 0FD7                             l3037 0F98                             l3029 0F94  
                           l2149 15D0                             l2421 0372                             l2405 030E  
                           l2413 0341                             l2341 00AE                             l2333 008E  
                           l2325 0075                             l2317 0065                             l2309 004F  
                           l2261 0BE0                             l3141 0764                             l3133 074E  
                           l3125 072D                             l3117 0719                             l2087 1488  
                           l2095 0AB3                             l2175 08EF                             l2167 08D0  
                           l2159 08B8                             l2247 0A0E                             l2239 09DF  
                           l2255 0A2F                             l3063 14B6                             l3055 0FFB  
                           l3047 0FE9                             l3039 0F9E                             l2431 0394  
                           l2423 0374                             l2415 034E                             l2407 031C  
                           l2351 013C                             l2343 00BB                             l2335 0094  
                           l2327 007E                             l2319 0069                             l2271 0C08  
                           l2263 0BE9                             l2191 1603                             l2183 15D6  
                           l3071 1338                             l3151 0788                             l3143 076E  
                           l3135 0753                             l3127 0738                             l3119 071E  
                           l2089 1489                             l2097 0AB6                             l2177 08F0  
                           l2169 08DB                             l2601 0A84                             l2193 14EB  
                           l2257 0A38                             l2249 0A1C                             l3081 151E  
                           l3073 150A                             l3065 14BC                             l3057 0FFC  
                           l3049 0FEF                             l2433 039D                             l2425 0382  
                           l2417 0359                             l2409 0320                             l2361 019E  
                           l2353 0158                             l2345 00D8                             l2337 009D  
                           l2329 0080                             l2281 0C20                             l2273 0C0A  
                           l2265 0BEA                             l2441 0DE3                             l2185 15E1  
                           l3161 07A8                             l3153 0793                             l3145 0773  
                           l3137 0759                             l3129 073E                             l2099 0AC6  
                           l2179 08FB                             l2531 16F8                             l2611 0AA0  
                           l2603 0A8A                             l2195 1509                             l3083 1524  
                           l3075 150D                             l3059 0FFE                             l2427 0386  
                           l2419 0368                             l2371 022E                             l2363 01BB  
                           l2355 0161                             l2347 00F4                             l2339 009E  
                           l2291 0C56                             l2275 0C0E                             l2283 0C33  
                           l2267 0BFF                             l2259 0BCB                             l2451 0E10  
                           l2443 0DF3                             l2435 0DCA                             l2187 15EF  
                           l3067 132F                             l3171 07C6                             l3163 07AD  
                           l3155 0798                             l3147 0779                             l3139 075E  
                           l2533 170E                             l2613 0AA6                             l2605 0A8C  
                           l2621 0906                             l2197 166C                             l3077 1514  
                           l2429 0388                             l2381 02C0                             l2373 025B  
                           l2365 01D4                             l2357 0171                             l2349 0120  
                           l2293 0C5B                             l2285 0C39                             l2277 0C15  
                           l2269 0C00                             l2461 0E47                             l2453 0E18  
                           l2445 0DFC                             l2437 0DCF                             l2189 15F8  
                           l2541 17B6                             l3069 1334                             l3181 07DE  
                           l3173 07CA                             l3165 07B1                             l3157 079D  
                           l3149 0780                             l2535 1715                             l2615 0AAB  
                           l2607 0A93                             l2631 091E                             l2623 090B  
                           l2551 0C81                             l2199 1674                             l3079 1515  
                           l2383 02C9                             l2391 02DF                             l2375 0281  
                           l2367 01F1                             l2359 018E                             l2295 0029  
                           l2287 0C42                             l2279 0C1E                             l2471 0E7B  
                           l2463 0E4B                             l2455 0E1C                             l2447 0DFD  
                           l2439 0DD3                             l2543 17B8                             l3175 07D0  
                           l3167 07B7                             l3159 07A2                             l3183 07DF  
                           l2529 16ED                             l2609 0A9B                             l2641 093D  
                           l2633 0921                             l2625 090E                             l2617 08FF  
                           l2561 0CDC                             l2553 0C82                             l2545 0C67  
                           l2393 02E4                             l2385 02CD                             l2377 02A9  
                           l2369 021E                             l2297 0030                             l2289 0C44  
                           l2473 0E7F                             l2465 0E56                             l2457 0E2A  
                           l2449 0E02                             l2537 1773                             l3177 07D5  
                           l3169 07C1                             l2651 095E                             l2643 0944  
                           l2635 0928                             l2627 0912                             l2619 0902  
                           l2563 0CE0                             l2555 0C84                             l2547 0C79  
                           l2571 13E1                             l2395 02E5                             l2387 02CF  
                           l2379 02B2                             l2299 0036                             l2475 0E81  
                           l2467 0E60                             l2459 0E3B                             l2539 177E  
                           l3179 07DA                             l2581 0A48                             l2573 0A39  
                           l2653 0963                             l2645 094B                             l2637 092D  
                           l2629 0918                             l2557 0C90                             l2565 0CE7  
                           l2549 0C7A                             l2901 16C0                             l2397 02E9  
                           l2389 02D8                             l2477 0E8A                             l2469 0E76  
                           l3269 07E9                             l2591 0A5E                             l2583 0A4C  
                           l2575 0A3C                             l2639 0933                             l2647 0953  
                           l2567 0D02                             l2559 0CBF                             l2911 16DE  
                           l2903 16C6                             l2399 02FD                             l2913 1431  
                           l2921 1463                             l2593 0A61                             l2585 0A51  
                           l2577 0A40                             l2649 0958                             l2569 0D04  
                           l2905 16CC                             l2915 0899                             l2595 0A68  
                           l2587 0A56                             l2579 0A45                             l2907 16D2  
                           l2931 17F4                             l2923 17B9                             l2917 144D  
                           l2597 0A6D                             l2589 0A58                             l2941 0986  
                           l2933 0964                             l2909 16D8                             l2925 17C6  
                           l2919 145A                             l2599 0A73                             l2943 0990  
                           l2935 096C                             l2951 133B                             l2927 17CC  
                           l2945 09A7                             l2937 0977                             l2961 135A  
                           l2929 17E0                             l2953 14C7                             l2947 09BE  
                           l2939 0980                             l2891 16A9                             l2963 135D  
                           l2971 0E8B                             l2955 14D0                             l2893 16AE  
                           l2949 1349                             l2965 1361                             l2981 0EE4  
                           l2973 0E99                             l2957 14DC                             l2895 16B2  
                           l2967 1364                             l2959 1357                             l2991 0EE9  
                           l2983 0EE5                             l2975 0EAC                             l2897 16B3  
                           l2969 1365                             l2993 0EEA                             l2985 0EE6  
                           l2977 0EBF                             l2899 16B7                             l2995 0EF0  
                           l2987 0EE7                             l2979 0ED2                             l2997 0F03  
                           l2989 0EE8                             l2999 0F16                             _ADIE 0466  
                           _ADIF 0066                             STR_1 087F                             STR_2 0891  
                           STR_3 0875                             STR_4 0888                             STR_5 0842  
                           STR_6 085F                             STR_7 0831                             STR_8 0820  
                           STR_9 086B                             u2200 0AD4                             u2201 0AD3  
                           u2210 0AF6                             u3010 0E4B                             u2211 0AF5  
                           u3011 0E4A                             u2220 0B11                             u3020 0E51  
                           u2221 0B10                             u3021 0E50                             u3005 0E3F  
                           u2230 0B17                             u3030 0E56                             u2310 15F7  
                           u2231 0B16                             u3031 0E55                             u2311 15F6  
                           u3200 0A40                             u2240 1474                             u2320 1673  
                           u3040 0E6B                             u2305 13CD                             u3201 0A3F  
                           u2241 1473                             u2321 1672                             u3210 0A4C  
                           u2250 1478                             u2410 09F1                             u2330 1699  
                           u4010 0E99                             u3050 0E7B                             u3211 0A4B  
                           u2251 1477                             u2411 09F0                             u2331 1697  
                           u4011 0E98                             u3051 0E7A                             u2180 14A5  
                           u3220 0A5E                             u3300 0906                             u4100 0F5A  
                           u4020 0EAC                             u2260 15BB                             u3060 0E7F  
                           u2181 14A4                             u3221 0A5D                             u3301 0905  
                           u2405 09E1                             u4101 0F59                             u4021 0EAB  
                           u2261 15BA                             u3061 0E7E                             u3045 0E66  
                           u2190 0ACE                             u3150 172B                             u3310 0912  
                           u2430 0A0E                             u2350 1589                             u4110 0F6D  
                           u4030 0EBF                             u2510 0C31                             u2191 0ACD  
                           u3151 172A                             u3311 0911                             u2431 0A0D  
                           u2351 1588                             u4111 0F6C                             u4031 0EBE  
                           u2511 0C30                             u3240 0A71                             u3320 091E  
                           u3160 0C80                             u2344 169A                             u4120 0F80  
                           u4040 0ED2                             u2280 15CF                             u2600 0070  
                           u2520 0C39                             u3241 0A70                             u3321 091D  
                           u2425 09F5                             u3161 0C7F                             u4121 0F7F  
                           u4041 0ED1                             u2281 15CE                             u2601 006F  
                           u2521 0C38                             u2505 0C21                             u2450 0A2D  
                           u4130 0F9E                             u4050 0EF0                             u2610 0075  
                           u3235 0A62                             u2451 0A2C                             u2435 0A0A  
                           u3171 0CB1                             u4131 0F9D                             u4051 0EEF  
                           u2275 15C2                             u2611 0074                             u3260 0A84  
                           u3340 0931                             u2380 15A3                             u3172 0CB8  
                           u4140 0FB1                             u4060 0F03                             u2620 008E  
                           u2540 0C54                             u2460 0BE0                             u4220 0773  
                           u3261 0A83                             u3341 0930                             u2445 0A1F  
                           u2381 15A2                             u2365 1590                             u3181 0CCE  
                           u3173 0CBF                             u4141 0FB0                             u4061 0F02  
                           u2701 01AD                             u2621 008D                             u2541 0C53  
                           u2461 0BDF                             u4221 0772                             u3350 093D  
                           u2390 09DC                             u3190 0CE6                             u3182 0CD5  
                           u4150 0FC4                             u4070 0F16                             u2702 01B4  
                           u2630 0093                             u2550 0C5B                             u2470 0BF8  
                           u4230 0780                             u3255 0A74                             u3351 093C  
                           u3335 0922                             u2391 09DB                             u2375 1597  
                           u3191 0CE5                             u3183 0CDC                             u4151 0FC3  
                           u4071 0F15                             u2703 01BB                             u2631 0092  
                           u2551 0C5A                             u2535 0C46                             u4231 077F  
                           u3280 0A99                             u4160 0FD7                             u4080 0F29  
                           u2560 003A                             u2480 0C0E                             u3281 0A98  
                           u3265 0A80                             u4161 0FD6                             u4081 0F28  
                           u2721 01E3                             u2641 00E6                             u2561 0039  
                           u2481 0C0D                             u3290 0AA0                             u3370 0951  
                           u4170 0FEF                             u4090 0F47                             u2810 02CD  
                           u2722 01EA                             u2642 00ED                             u2570 0041  
                           u2490 0C15                             u3291 0A9F                             u3275 0A8D  
                           u3371 0950                             u3355 0939                             u4171 0FEE  
                           u4091 0F46                             u2811 02CC                             u2731 0210  
                           u2723 01F1                             u2715 01BD                             u2651 0102  
                           u2643 00F4                             u2571 0040                             u2491 0C14  
                           u2475 0BF3                             u3380 0958                             u4180 1513  
                           u2900 034E                             u2732 0217                             u2652 0109  
                           u2580 0046                             u3381 0957                             u3365 0945  
                           u4181 1512                             u2901 034D                             u2805 02C2  
                           u2741 023D                             u2733 021E                             u2661 012E  
                           u2653 0110                             u2581 0045                             u4190 152A  
                           u2910 0368                             u2830 02E3                             u2750 0267  
                           u2742 0244                             u2662 0135                             u2590 0069  
                           u4191 1529                             u2911 0367                             u2831 02E2  
                           u2743 024B                             u2671 014A                             u2663 013C  
                           u2591 0068                             u2920 0386                             u2840 02E9  
                           u2672 0151                             u2921 0385                             u2905 034A  
                           u2841 02E8                             u2825 02D1                             u2761 0273  
                           u2673 0158                             u2850 02FD                             u2770 028F  
                           u2762 027A                             u2930 0DCF                             u2915 0364  
                           u2851 02FC                             u2763 0281                             u2755 0262  
                           u2691 0180                             u2931 0DCE                             _PEIE 005E  
                           u2860 0304                             u2692 0187                             u2940 0DD3  
                           u4357 0B26                             u2861 0303                             u2781 029B  
                           u2693 018E                             u2685 015A                             u2941 0DD2  
                           u2870 030E                             u2782 02A2                             u2950 0DF3  
                           u4367 148F                             u2871 030D                             u2783 02A9  
                           u2775 028A                             u2951 0DF2                             u2880 0320  
                           u2881 031F                             u2890 032F                             u2970 0E16  
                           u2795 02AB                             u2971 0E15                             u2965 0E07  
                           u2990 0E39                             u2895 032A                             u2991 0E38  
                           u2985 0E2B                             _WREN 0C62                i1_EEPROM_ReadByte 13AA  
                           _main 0713                    i1___flmul@grs 002E                             btemp 007E  
             ?i1_EEPROM_ReadByte 0070                  __end_ofi1_delay 13AA                             start 0010  
                  __CFG_IESO$OFF 0000         __size_of_EEPROM_ReadByte 001E              ??i1_EEPROM_ReadByte 0070  
                __end_of_TempMed 09CA                   salvatemp@valor 00AB             __end_of_EEPROM_write 13F9  
                  ___fltol@sign1 00D1                            ?_main 0070                  __end_of___awdiv 0AAC  
                          _EEADR 010D                            STR_10 0853                    __CFG_WDTE$OFF 0000  
                __end_of___awmod 0964                  __end_of___flmul 039E                  __end_of___fltol 0C67  
                          _ANSEL 0188                  __end_of___lldiv 0A39                  ___awdiv@divisor 00A0  
                          _T1CON 0010            __end_of_Telaprincipal 146A                            i1l110 156F  
                          i1l111 1574                            i1l112 157F                            i1l115 1772  
                          i1l109 156F                            i1l222 165E                            i1l223 165D  
                          i1l320 13B7                            i1l312 1606                            i1l224 165E  
                          i1l321 13C3                            i1l313 1606                            i1l314 160D  
                          i1l306 1390                            i1l315 1633                            i1l309 1414  
                          i1l318 13AC                            i1l319 13AC                            i1l600 0B96  
                          i1l601 0BBA                            i1l602 0BA7                            i1l603 0BB3  
                          i1l604 0BA8                            i1l605 0BB9                            i1l606 0BCA  
                          i1l279 1430                            i1l800 0654                            i1l801 0635  
                          i1l810 06CE                            i1l802 0644                            i1l811 0705  
                          i1l803 0659                            i1l812 06E9                            i1l804 067E  
                          i1l820 0DC6                            i1l813 0705                            i1l805 0675  
                          i1l821 0D4C                            i1l814 06FD                            i1l806 067D  
                          i1l830 0D8E                            i1l822 0D3E                            i1l807 067C  
                          i1l831 0D8E                            i1l823 0D53                            i1l808 06B6  
                          i1l832 0D9A                            i1l824 0D6F                            i1l809 06B5  
                          i1l833 0DBD                            i1l825 0D54                            i1l817 0D1F  
                          i1l826 0D76                            i1l818 0D27                            i1l595 0B4E  
                          i1l827 0D83                            i1l819 0D39                            i1l836 1537  
                          i1l596 0BCA                            i1l828 0D77                            i1l837 1541  
                          i1l597 0B97                            i1l838 1550                            i1l790 03C4  
                          i1l598 0B83                            i1l839 1555                            i1l791 03CF  
                          i1l599 0B84                            i1l792 03E0                            i1l793 03F5  
                          i1l794 03F3                            i1l795 03FE                            i1l796 0413  
                          i1l788 03B1                            i1l789 03C6                            i1l798 0409  
                          i1l799 0712                  ___awdiv@counter 00A5                            _TMR1H 000F  
                          _TMR1L 000E                            _PORTB 0006                            _PORTC 0007  
                          _TRISA 0085                            _TRISB 0086                            _TRISC 0087  
                          _TRISD 0088           __size_ofi1_EEPROM_read 001C                    __CFG_PWRTE$ON 0000  
                 __CFG_FCMEN$OFF 0000                  __end_of_initLCD 16EA                            _delay 1488  
                          _myISR 1634                            _media 0C67                   i1___flmul@aexp 0032  
                 i1___flmul@bexp 0033        __end_ofi1_EEPROM_ReadByte 13C4                   i1___flmul@sign 002D  
                 i1___flmul@temp 0038                   i1___flmul@prod 0034                            _tmron 132F  
               __end_ofi1_adcLer 1580                      i1_salvatemp 1415                   __CFG_BOREN$OFF 0000  
                          pclath 000A                  __end_of_tempatt 1800                   i1___fltol@exp1 0044  
                          status 0003                            wtemp0 007E               __size_ofi1___flmul 0375  
             __size_ofi1___fltol 009C                   _tecladoIniciar 1357     i1temperaturaLer@temp01VlrInt 0045  
   i1temperaturaLer@temp01VlrTmp 0047                  EEPROM_read@pont 00A5                   __CFG_MCLRE$OFF 0000  
           __size_of_EEPROM_read 0022                  __initialization 0013                     __end_of_main 07FC  
                   media@divisao 00B4                           ??_main 00DE                      ?i1___xxtofl 0070  
                   media@retorno 00BC              i1EEPROM_write@value 0077  __size_of_temperaturaInicializar 0021  
             i1_EEPROM_WriteByte 1604                           ?_delay 00A0                           _ADCON0 001F  
                         _ADCON1 009F                           ?_myISR 0070                           ?_media 0070  
                         _ADRESH 001E                           _ADRESL 009E                           _EEDATA 010C  
                         _EECON2 018D                 ___awdiv@dividend 00A2         __end_ofi1_temperaturaLer 1773  
                         _ANSELH 0189                           ?_tmron 0070                        ??i1_delay 0072  
                         i1l3101 1634                           i1l3111 164E                           i1l3103 1638  
                         i1l2153 1391                           i1l3113 1658                           i1l3105 163E  
                         i1l2155 1392                           i1l3107 163F                           i1l2157 13A2  
                         i1l2501 1630                           i1l3109 1641                           i1l2511 13BE  
                         i1l2503 13AB                           i1l2513 13C3                           i1l2505 13B2  
                         i1l2521 153B                           i1l2507 13B7                           i1l2523 154A  
                         i1l2515 152D                           i1l3091 1772                           i1l2509 13BB  
                         i1l3093 1416                           i1l2525 1550                           i1l2517 152F  
                         i1l2701 0BA8                           i1l3085 172D                           i1l3095 1420  
                         i1l2527 1555                           i1l2519 1537                           i1l2711 03AB  
                         i1l2703 0BBA                           i1l3087 1738                           i1l2481 160D  
                         i1l3097 1426                           i1l2801 064D                           i1l2721 03C4  
                         i1l2713 03AF                           i1l2705 0BBF                           i1l3089 1770  
                         i1l2491 161C                           i1l2483 1613                           i1l2811 0672  
                         i1l2803 0654                           i1l2731 03DE                           i1l2723 03C6  
                         i1l2715 03B1                           i1l2707 039E                           i1l2493 161E  
                         i1l2485 1616                           i1l2821 0695                           i1l2813 0679  
                         i1l2805 0659                           i1l2741 03F5                           i1l2733 03E0  
                         i1l2725 03CF                           i1l2717 03B6                           i1l2709 03A5  
                         i1l2661 1574                           i1l2495 1620                           i1l2487 1617  
                         i1l2479 1605                           i1l2831 06DD                           i1l2823 06AE  
                         i1l2815 067E                           i1l2807 065A                           i1l2751 0413  
                         i1l2743 03FE                           i1l2735 03E5                           i1l2727 03D4  
                         i1l2719 03BB                           i1l2671 0B2F                           i1l2663 157F  
                         i1l2655 1556                           i1l2497 1621                           i1l2489 161B  
                         i1l2665 137B                           i1l2841 06FD                           i1l2833 06E7  
                         i1l2817 0683                           i1l2825 06B6                           i1l2809 065E  
                         i1l2761 0495                           i1l2753 0423                           i1l2745 0403  
                         i1l2737 03EA                           i1l2729 03DA                           i1l2681 0B64  
                         i1l2673 0B44                           i1l2657 155F                           i1l2667 13FA  
                         i1l2499 1627                           i1l2843 0709                           i1l2835 06E9  
                         i1l2827 06C3                           i1l2819 0691                           i1l2771 0503  
                         i1l2763 04B1                           i1l2755 0430                           i1l2747 0409  
                         i1l2739 03F3                           i1l2691 0B82                           i1l2683 0B6C  
                         i1l2675 0B4D                           i1l2851 0D0F                           i1l2659 156B  
                         i1l2669 1414                           i1l2845 0712                           i1l2837 06F7  
                         i1l2829 06CE                           i1l2781 0593                           i1l2773 0513  
                         i1l2765 04CD                           i1l2757 044D                           i1l2749 0412  
                         i1l2693 0B84                           i1l2685 0B6E                           i1l2677 0B4E  
                         i1l2861 0D3E                           i1l2853 0D1F                           i1l2839 06FB  
                         i1l2791 0627                           i1l2783 05A3                           i1l2775 0530  
                         i1l2767 04D6                           i1l2759 0469                           i1l2687 0B72  
                         i1l2695 0B97                           i1l2679 0B63                           i1l2871 0D77  
                         i1l2863 0D4C                           i1l2855 0D2F                           i1l2847 0D06  
                         i1l2793 0635                           i1l2785 05D0                           i1l2777 0549  
                         i1l2769 04E6                           i1l2697 0B9D                           i1l2689 0B79  
                         i1l2881 0DB2                           i1l2873 0D83                           i1l2865 0D54  
                         i1l2857 0D38                           i1l2849 0D0B                           i1l2795 063E  
                         i1l2787 05F6                           i1l2779 0566                           i1l2699 0BA6  
                         i1l2883 0DB7                           i1l2875 0D87                           i1l2867 0D58  
                         i1l2859 0D39                           i1l2797 0642                           i1l2789 061E  
                         i1l2885 0DBB                           i1l2877 0D92                           i1l2869 0D66  
                         i1l2799 0644                           i1l2887 0DBD                           i1l2879 0D9C  
                         i1l2889 0DC6                           u310_20 13B2                           u310_21 13B1  
                         u311_20 13B6                           u311_21 13B5                           u312_20 153B  
                         u400_20 0DBB                           u312_21 153A                           u400_21 0DBA  
                         u313_25 1542                           u314_20 154F                           u314_21 154E  
                         u307_20 160C                           u307_21 160B                           u308_20 1626  
                         u340_20 0B44                           u420_20 1638                           u308_21 1624  
                         u340_21 0B43                           u420_21 1637                           u229_20 13A8  
                         u341_20 0B5C                           u421_20 164E                           u229_21 13A7  
                         u421_21 164D                           u309_24 1627                           u341_25 0B57  
                         u421_25 164A                           u350_20 03AF                           u342_20 0B72  
                         u350_21 03AE                           u342_21 0B71                           u351_20 03B6  
                         u343_20 0B79                           u351_21 03B5                           u343_21 0B78  
                         u352_20 03BB                           u360_21 04A3                           u352_21 03BA  
                         u360_22 04AA                           u360_23 04B1                           u344_25 0B85  
                         u353_20 03DE                           u345_20 0B95                           u361_21 04BF  
                         u353_21 03DD                           u345_21 0B94                           u361_22 04C6  
                         u361_23 04CD                           u354_20 03E5                           u346_20 0B9D  
                         u370_21 05E8                           u354_21 03E4                           u346_21 0B9C  
                         u370_22 05EF                           u370_23 05F6                           u362_25 04CF  
                         u371_20 0604                           u355_20 03EA                           u339_20 1573  
                         u363_21 04F5                           u355_21 03E9                           u339_21 1572  
                         u363_22 04FC                           u363_23 0503                           u371_25 05FF  
                         u347_25 0BAA                           u380_20 0679                           u356_20 0403  
                         u348_20 0BB8                           u380_21 0678                           u372_21 0610  
                         u364_21 0522                           u356_21 0402                           u348_21 0BB7  
                         u372_22 0617                           u364_22 0529                           u372_23 061E  
                         u364_23 0530                           u381_20 0683                           u357_20 0408  
                         u349_20 0BBF                           u381_21 0682                           u357_21 0407  
                         u349_21 0BBE                           u373_25 0620                           u365_25 0532  
                         u437_27 1396                           u382_20 0695                           u382_21 0694  
                         u366_21 0558                           u358_21 045B                           u366_22 055F  
                         u358_22 0462                           u366_23 0566                           u358_23 0469  
                         u374_25 0637                           u390_25 0D43                           u383_20 06A4  
                         u375_20 0642                           u391_20 0D52                           u375_21 0641  
                         u367_21 0585                           u359_21 0477                           u391_21 0D51  
                         u367_22 058C                           u359_22 047E                           u367_23 0593  
                         u359_23 0485                           u383_25 069F                           u384_20 06C3  
                         u384_21 06C2                           u368_21 05B2                           u368_22 05B9  
                         u368_23 05C0                           u384_25 06BF                           u376_25 0646  
                         u392_25 0D67                           u385_20 06DD                           u377_20 0658  
                         u369_20 05DC                           u393_20 0D75                           u385_21 06DC  
                         u377_21 0657                           u393_21 0D74                           u385_25 06D9  
                         u369_25 05D7                           u386_20 06FB                           u378_20 065E  
                         u386_21 06FA                           u378_21 065D                           u394_25 0D7B  
                         u379_20 0672                           u395_20 0D87                           u387_20 0D0B  
                         u379_21 0671                           u395_21 0D86                           u387_21 0D0A  
            ?i1_EEPROM_WriteByte 0074                           u396_20 0D8D                           u388_20 0D0F  
                         u396_21 0D8C                           u388_21 0D0E                           u397_20 0D92  
                         u389_20 0D2F                           u397_21 0D91                           u389_21 0D2E  
                         u398_20 0DA7                           u398_25 0DA2                           u399_20 0DB7  
                         u399_21 0DB6                           _TMR1IE 0460                           _TMR1IF 0060  
         __end_of_tecladoIniciar 1367                 __end_of___xxtofl 0E8B                    i1_EEPROM_read 13F9  
        __size_ofi1_EEPROM_write 0017                        ??_TempMed 00C0                           _adcLer 15D6  
                         _cmdLCD 0AAC                           ___wmul 1580                        ??___awdiv 00A4  
                      ??___awmod 00A4                        ??___flmul 00B6                        ??___fltol 00CC  
                      ??___lldiv 00A8                ??_EEPROM_ReadByte 00A0                           delay@t 00A0  
                         _gotoxy 13C4             ??i1_EEPROM_WriteByte 0075                 ___awdiv@quotient 00A7  
                         _repeat 004C                  ___awmod@divisor 00A0                           _putLCD 08B5  
                ___awmod@counter 00A5         __end_of_EEPROM_WriteByte 16A9                           main@nr 00E0  
                         media@i 00BF                        ??_initLCD 00A7                __end_ofi1___flmul 0713  
              __end_ofi1___fltol 0BCB                 __end_of_resetemp 152C               __size_of__Umul8_16 002C  
                         saved_w 007E                  i1___fltol@sign1 0043                        ??_tempatt 00D7  
               __end_of_showtemp 1357       __size_ofi1_EEPROM_ReadByte 001A                 __end_of_writeLCD 172D  
                   ___xxtofl@arg 00AA                     ___xxtofl@exp 00A9                     ___xxtofl@val 00A0  
        __end_of__initialization 0025                  ?_tecladoIniciar 0070                   ?i1_EEPROM_read 0071  
            __size_ofi1___xxtofl 00C2                       ___fltol@f1 00C8                     ?i1__Umul8_16 0070  
         _temperaturaInicializar 14C7                   __pcstackCOMMON 0070            __size_of_EEPROM_write 001B  
                   __pidataBANK1 1328                    __end_of_delay 14A7                    __end_of_myISR 1669  
                  __end_of_media 0D05                    __end_of_tmron 133B                        ?i1_adcLer 0074  
                 _OPTION_REGbits 0081    EEPROM_WriteByte@eepromAddress 00A5                          ??_delay 00A2  
                        ??_myISR 0049                          ??_media 00AE                          ??_tmron 00A0  
                     __pbssBANK0 004C                     _EEPROM_write 13DE                   i1___xxtofl@arg 007A  
                 i1___xxtofl@exp 0079                   i1___xxtofl@val 0070                __end_of__Umul8_16 15D6  
                     __pmaintext 0713                          ?_adcLer 00A4                     cmdLCD@nibble 00A6  
                        ?_cmdLCD 0070                          ?___wmul 00A0     EEPROM_ReadByte@eepromAddress 00A0  
                     __pintentry 0004               __size_of_salvatemp 0020                          ?_gotoxy 00A7  
                        ?_putLCD 0070                       ??i1_adcLer 0076            __end_of_SplashScreen0 144D  
          __end_of_SplashScreen1 08B5                        ?___xxtofl 00A0              i1__Umul8_16@product 0074  
                     __stringtab 0800                     ?i1_salvatemp 0070                          i1_delay 1391  
               i1salvatemp@valor 007C                  ??i1_EEPROM_read 0073                       _erasertemp 133B  
                 i1_EEPROM_write 137A                 EEPROM_write@pont 00AA                          _TempMed 0964  
                      ?_resetemp 0070                  __size_of_adcLer 002E                          ___awdiv 0A39  
                __size_of_cmdLCD 0083                          ___awmod 08FF                          ___flmul 0029  
                        ___fltol 0BCB                        ?_showtemp 0070                          ___lldiv 09CA  
                __size_of___wmul 002A                  __size_of_gotoxy 001A                        ?_writeLCD 00AB  
                __size_of_putLCD 004A                     ??i1___xxtofl 0074                          __ptext1 132F  
                        __ptext2 14C7                          __ptext3 17B9                          __ptext4 1773  
                        __ptext5 15D6                          __ptext6 0DC7                          __ptext7 0BCB  
                        __ptext8 0029                          __ptext9 15AA                __end_of_tabTeclas 0820  
                        _initLCD 16A9                       ??___xxtofl 00A4                 ___awmod@dividend 00A2  
                        _tempatt 17B9                          media@ee 00BD             end_of_initialization 0025  
              ?i1_temperaturaLer 0070                       _tecladoLer 0E8B                __end_of_salvatemp 14C7  
        __size_of_temperaturaLer 0046                i1adcLer@adc01Temp 0076           __end_ofi1_EEPROM_write 1391  
             ??i1_temperaturaLer 007E                    ??_EEPROM_read 00A3                          gotoxy@x 00AA  
                        gotoxy@y 00A7                  _EEPROM_ReadByte 146A                          putLCD@c 00A5  
         __size_of_Telaprincipal 001D                  ___lldiv@divisor 00A0               __end_ofi1___xxtofl 0DC7  
                ___lldiv@counter 00AD                       ??_resetemp 00AB                      tempatt@temp 00DC  
           __size_ofi1__Umul8_16 002A                       ??_showtemp 00B0                       ??_writeLCD 00AE  
          i1__Umul8_16@word_mpld 0076                        _PORTBbits 0006                ?_EEPROM_WriteByte 00A4  
             ??_EEPROM_WriteByte 00A5                    ___xxtofl@sign 00A8                        i1___flmul 039E  
                      i1___fltol 0B2F                 ??_tecladoIniciar 00A0          ?_temperaturaInicializar 0070  
                    ___flmul@grs 00BC                      ?_erasertemp 0070                  ?i1_EEPROM_write 0077  
                     media@valor 00B8              __end_of_EEPROM_read 150A                    salvatemp@temp 00AD  
                 __end_of_adcLer 1604                   __end_of_cmdLCD 0B2F                   __end_of___wmul 15AA  
    __size_ofi1_EEPROM_WriteByte 0030                   __end_of_gotoxy 13DE                   __end_of_putLCD 08FF  
                  _Telaprincipal 144D                __size_ofi1_adcLer 002A              start_initialization 0013  
                     ?i1___flmul 0020                       ?i1___fltol 003A          __end_of_EEPROM_ReadByte 1488  
 __end_of_temperaturaInicializar 14E8                      ?_tecladoLer 0070                        TempMed@md 00C3  
             i1EEPROM_write@pont 007A             __size_ofi1_salvatemp 001C                         ??_adcLer 00A6  
                       ??_cmdLCD 00A4                         ??___wmul 00A4                       init_fetch0 1367  
                      __Umul8_16 15AA                      __pdataBANK1 00E1                     TempMed@F1409 00E1  
                       ??_gotoxy 00A8                         ??_putLCD 00A4              __size_of_erasertemp 000E  
                 ?_Telaprincipal 0070                     TempMed@Media 00C6                        ___flmul@a 00B2  
                      ___flmul@b 00AE                        ___latbits 0002                    __pcstackBANK0 0020  
                  __pcstackBANK1 00A0                __size_of___xxtofl 00C4                         ?i1_delay 0070  
                i1___xxtofl@sign 0078                   _temperaturaLer 1773                      _EEPROM_read 14E8  
                       ?_TempMed 0070                        cmdLCD@cmd 00A5         i1__Umul8_16@multiplicand 0070  
                       ?___awdiv 00A0                         ?___awmod 00A0                         ?___flmul 00AE  
                       ?___fltol 00C8                         ?___lldiv 00A0                       ?__Umul8_16 00A0  
              __size_of_resetemp 0022              __size_of_tecladoLer 0175                __size_of_showtemp 000E  
                      __pstrings 0800                  i1salvatemp@temp 007B                         ?_initLCD 0070  
              __size_of_writeLCD 0043                         ?_tempatt 0070                        _tabTeclas 0810  
                    ??i1___flmul 0028                      ??i1___fltol 003E           __end_of_temperaturaLer 17B9  
                 __size_of_delay 001F                   __size_of_myISR 0035                   __size_of_media 009E  
                    writeLCD@ptr 00AC                 ?_EEPROM_ReadByte 0070   i1EEPROM_ReadByte@eepromAddress 0070  
                 __size_of_tmron 000C                interrupt_function 0004                   ___wmul@product 00A4  
              i1EEPROM_read@pont 0075            __end_ofi1_EEPROM_read 1415                        _salvatemp 14A7  
         __size_of_SplashScreen0 001C           __size_of_SplashScreen1 001C        __size_ofi1_temperaturaLer 0046  
     EEPROM_WriteByte@gie_Status 00A6                  ??_Telaprincipal 00B0                         i1_adcLer 1556  
                     _ADCON0bits 001F                      __stringbase 080F                ___wmul@multiplier 00A0  
                   putLCD@nibble 00A6                         i1delay@t 0070       EEPROM_WriteByte@eepromData 00A4  
                ?_temperaturaLer 0070                 ??i1_EEPROM_write 0079                 __size_ofi1_delay 0019  
                   ??_erasertemp 00B0        __size_of_EEPROM_WriteByte 0040                       _EECON1bits 018C  
                  ??i1__Umul8_16 0072                       ?_salvatemp 0070                EEPROM_write@value 00A7  
               __size_of_TempMed 0066                      ??__Umul8_16 00A2                 __size_of___awdiv 0073  
               __size_of___awmod 0065                 __size_of___flmul 0375                 __size_of___fltol 009C  
               __size_of___lldiv 006F               __end_of__stringtab 0810                      _tecAnterior 004F  
             __end_of_erasertemp 1349                 __size_of_initLCD 0041                         ___xxtofl 0DC7  
                  _SplashScreen0 1431                    _SplashScreen1 0899                         __ptext10 0E8B  
                       __ptext11 1357                         __ptext20 0C67                         __ptext12 1349  
                       __ptext21 1580                         __ptext13 14A7                         __ptext30 16EA  
                       __ptext22 09CA                         __ptext14 150A                         __ptext31 08B5  
                       __ptext23 14E8                         __ptext15 13DE                         __ptext40 039E  
                       __ptext32 13C4                         __ptext24 146A                         __ptext16 1669  
                       __ptext41 152C                         __ptext33 0AAC                         __ptext25 08FF  
                       __ptext17 16A9                         __ptext42 1415                         __ptext34 1488  
                       __ptext26 0A39                         __ptext18 133B                         __ptext43 137A  
                       __ptext35 1634                         __ptext27 144D                         __ptext19 0964  
                       __ptext44 1604                         __ptext36 172D                         __ptext28 0899  
                       __ptext45 1391                         __ptext37 1556                         __ptext29 1431  
                       __ptext46 13F9                         __ptext38 0D05                         __ptext47 13AA  
                       __ptext39 0B2F                 __size_of_tempatt 0047                     ??_tecladoLer 00A0  
                  ?_EEPROM_write 00A7                    __size_of_main 00E9                         _tecAtual 004E  
i1EEPROM_WriteByte@eepromAddress 0075                        resetemp@i 00AC                  adcLer@adc01Temp 00A6  
                      tempatt@Tp 00D9                         _resetemp 150A       __end_ofi1_EEPROM_WriteByte 1634  
                       _showtemp 1349              __end_ofi1__Umul8_16 1556                         _writeLCD 16EA  
             __end_of_tecladoLer 1000                   ?_SplashScreen0 0070                   ?_SplashScreen1 0070  
                       init_ram0 136B                    ??i1_salvatemp 007B                     tempatt@F1405 00E4  
                       intlevel1 0000                   ??_EEPROM_write 00A9           i1__Umul8_16@multiplier 0078  
               ___lldiv@dividend 00A4                     ?_EEPROM_read 00A1                      ??_salvatemp 00AB  
                      writeLCD@x 00AF                        writeLCD@y 00AB          __size_of_tecladoIniciar 0010  
                      stringcode 080A       temperaturaLer@temp01VlrInt 00D3       temperaturaLer@temp01VlrTmp 00D5  
               i1_temperaturaLer 172D     i1EEPROM_WriteByte@gie_Status 0076           __Umul8_16@multiplicand 00A0  
   i1EEPROM_WriteByte@eepromData 0074                 ___lldiv@quotient 00A9                         stringdir 080A  
                       stringtab 0800                 _EEPROM_WriteByte 1669             __Umul8_16@multiplier 00A8  
                    i1__Umul8_16 152C              __end_ofi1_salvatemp 1431                __Umul8_16@product 00A4  
